{"version":3,"file":"lightning.es5.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRendererUtils.mts","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/textures/StaticTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/components/BorderComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"[Lightning] Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        if (item._reversed && item._recalc == 0) {\n            item._reversed = false;\n        }\n        if (!item._reversed) {\n            const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n            const reversedPos = this._layout.mainAxisSize - endPos;\n            item.flexItem._setMainAxisLayoutPos(reversedPos);\n            if (item._recalc != 0) {\n                item._reversed = true;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n        this._reversed = false;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n\n        /**\n         * Track whether or not there is an alpha channel in this source\n         * @type {boolean}\n         * @private\n         */\n         this._hasAlpha = false;\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this._hasAlpha = (options ? (options.hasAlpha || false) : false);\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('[Lightning] texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this.isRTL = this.ctx.stage.getOption('RTL');\n        \n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px;\n        if (this.isRTL) {\n            px = this._x + (pivotXMul * this._localTa + pivotYMul * this._localTb) - pivotXMul;\n        } else {\n            px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        }\n\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                let calculatedX = this._localPx;\n                if (this.isRTL) {\n                    const parentW = this._element.__parent ? this._parent.w || 0 : this.ctx.stage.getOption('w');\n                    calculatedX = parentW - (this._w || 0) - this._localPx;\n                }\n\n                w.px = pw.px + calculatedX * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += calculatedX * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    let calculatedX = this._localPx;\n                    if (this.isRTL) {\n                      const parentW = this._element.__parent\n                        ? this._parent.w || 0\n                        : this.ctx.stage.getOption(\"w\");\n                      calculatedX = parentW - (this._w || 0) - this._localPx;\n                    }\n                    \n                    r.px = pr.px + calculatedX * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += calculatedX * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Tell the renderer we're rendering a renderToTexture element in this frame\n                    this.ctx.renderToTextureCount++;\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                a.splice(n); // Remove items that were sorted in b array, so that we can sort a\n+               // Beware that the function passed here to Array.sort must be stable\n+               a.sort(ElementCore.sortZIndexedChildren); // Needed because items with same _zIndex may not be ordered by _updateTreeOrder\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    once(name, listener) {\n        const wrapper = (arg1, arg2, arg3) => {\n            listener(arg1, arg2, arg3);\n            this.off(name, wrapper);\n        }\n        wrapper.__originalFunc = listener;\n        this.on(name, wrapper);\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    for (const l of listeners) {\n                        if (l === listener || l.__originalFunc == listener) {\n                            return true;\n                        }\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\n           we need to create a copy to loop over it */\n        for (const listener of [...listeners]) {\n            listener(arg1, arg2, arg3);\n        }\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.once = EventEmitter.prototype.once;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"[Lightning] Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"[Lightning] Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n\n                // free up unused TextTextures immediately as they are not reused anyway\n                if(this['text'] && !oldSource.isUsed()) {\n                    this.manager.freeTextureSource(oldSource);\n                }\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns CSS font setting string for use in canvas context.\n *\n * @param fontFace\n * @param fontStyle\n * @param fontSize\n * @param precision\n * @param defaultFontFace\n * @returns\n */\nexport function getFontSetting(\n    fontFace: string | string[],\n    fontStyle: string,\n    fontSize: number,\n    precision: number,\n    defaultFontFace: string\n): string {\n    let ff = fontFace;\n\n    if (!Array.isArray(ff)) {\n        ff = [ff];\n    }\n\n    let ffs = [];\n    for (let i = 0, n = ff.length; i < n; i++) {\n        let curFf = ff[i];\n        // Replace the default font face `null` with the actual default font face set\n        // on the stage.\n        if (curFf === null) {\n            curFf = defaultFontFace;\n        }\n        if (curFf === \"serif\" || curFf === \"sans-serif\") {\n            ffs.push(curFf);\n        } else {\n            ffs.push(`\"${curFf}\"`);\n        }\n    }\n\n    return `${fontStyle} ${fontSize * precision}px ${ffs.join(\",\")}`\n}\n\n/**\n * Returns true if the given character is a zero-width space.\n *\n * @param space\n */\nexport function isZeroWidthSpace(space: string): boolean {\n    return space === '' || space === '\\u200B';\n}\n\n/**\n * Returns true if the given character is a zero-width space or a regular space.\n *\n * @param space\n */\nexport function isSpace(space: string): boolean {\n    return isZeroWidthSpace(space) || space === ' ';\n}\n\n/**\n * Converts a string into an array of tokens and the words between them.\n *\n * @param tokenRegex\n * @param text\n */\nexport function tokenizeString(tokenRegex: RegExp, text: string): string[] {\n    const delimeters = text.match(tokenRegex) || [];\n    const words = text.split(tokenRegex) || [];\n\n    let final: string[] = [];\n    for (let i = 0; i < words.length; i++) {\n        final.push(words[i]!, delimeters[i]!)\n    }\n    final.pop()\n    return final.filter((word) => word != '');\n}\n\n/**\n * Measure the width of a string accounting for letter spacing.\n *\n * @param context\n * @param word\n * @param space\n */\nexport function measureText(context: CanvasRenderingContext2D, word: string, space: number = 0): number {\n    if (!space) {\n        return context.measureText(word).width;\n    }\n    return word.split('').reduce((acc, char) => {\n        // Zero-width spaces should not include letter spacing.\n        // And since we know the width of a zero-width space is 0, we can skip\n        // measuring it.\n        if (isZeroWidthSpace(char)) {\n            return acc;\n        }\n        return acc + context.measureText(char).width + space;\n    }, 0);\n}\n\nexport interface WrapTextResult {\n    l: string[];\n    n: number[];\n}\n\n/**\n * Applies newlines to a string to have it optimally fit into the horizontal\n * bounds set by the Text object's wordWrapWidth property.\n *\n * @param context\n * @param text\n * @param wordWrapWidth\n * @param letterSpacing\n * @param indent\n */\nexport function wrapText(\n    context: CanvasRenderingContext2D,\n    text: string,\n    wordWrapWidth: number,\n    letterSpacing: number,\n    indent: number\n): WrapTextResult {\n    // Greedy wrapping algorithm that will wrap words as the line grows longer.\n    // than its horizontal bounds.\n    const spaceRegex = / |\\u200B/g;\n    let lines = text.split(/\\r?\\n/g);\n    let allLines: string[] = [];\n    let realNewlines: number[] = [];\n    for (let i = 0; i < lines.length; i++) {\n        let resultLines: string[] = [];\n        let result = '';\n        let spaceLeft = wordWrapWidth - indent;\n        let words = lines[i]!.split(spaceRegex);\n        let spaces = lines[i]!.match(spaceRegex) || [];\n        for (let j = 0; j < words.length; j++) {\n            const space = spaces[j - 1] || '';\n            const word = words[j]!;\n            const wordWidth = measureText(context, word, letterSpacing);\n            const wordWidthWithSpace = wordWidth + measureText(context, space, letterSpacing);\n            if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                // Skip printing the newline if it's the first word of the line that is.\n                // greater than the word wrap width.\n                if (j > 0) {\n                    resultLines.push(result);\n                    result = '';\n                }\n                result += word;\n                spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n            }\n            else {\n                spaceLeft -= wordWidthWithSpace;\n                result += space + word;\n            }\n        }\n\n        resultLines.push(result);\n        result = '';\n\n        allLines = allLines.concat(resultLines);\n\n        if (i < lines.length - 1) {\n            realNewlines.push(allLines.length);\n        }\n    }\n\n    return {l: allLines, n: realNewlines};\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, measureText, wrapText } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace'),\n            this._settings.fontWeight,\n        );\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace'),\n                this._settings.fontWeight,\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || this._stage.getOption('w');\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth = 10;\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n        if (this._stage.getOption('RTL')) {\n            this._context.direction = 'rtl';\n            this._context.textAlign = 'left';\n        }\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * See {@link wrapText}\n     *\n     * @param {string} text\n     * @param {number} wordWrapWidth\n     * @param {number} letterSpacing\n     * @param {number} indent\n     * @returns\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        return wrapText(this._context, text, wordWrapWidth, letterSpacing, indent);\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, isSpace, measureText, tokenizeString } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRendererAdvanced {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        const font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace'),\n            this._settings.fontWeight,\n        );\n        this._context.font = font;\n        this._context.textBaseline = this._settings.textBaseline;\n        return font;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace'),\n                this._settings.fontWeight,\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\n        const w = this._settings.w != 0 ? this._settings.w * precision : this._stage.getOption('w');\n        // const h = this._settings.h * precision;\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        renderInfo.baseFont = this.setFontProperties();\n\n        renderInfo.w = w;\n        renderInfo.width = w;\n        renderInfo.text = this._settings.text;\n        renderInfo.precision = precision;\n        renderInfo.fontSize = fontSize;\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textAlign = this._settings.textAlign;\n        renderInfo.textColor = this._settings.textColor;\n        renderInfo.verticalAlign = this._settings.verticalAlign;\n        renderInfo.highlight = this._settings.highlight;\n        renderInfo.highlightColor = this._settings.highlightColor;\n        renderInfo.highlightHeight = this._settings.highlightHeight;\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\n        renderInfo.highlightOffset = this._settings.highlightOffset;\n        renderInfo.paddingLeft = this._settings.paddingLeft;\n        renderInfo.paddingRight = this._settings.paddingRight;\n        renderInfo.maxLines = this._settings.maxLines;\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\n        renderInfo.textOverflow = this._settings.textOverflow;\n        renderInfo.wordWrap = this._settings.wordWrap;\n        renderInfo.wordWrapWidth = wordWrapWidth;\n        renderInfo.shadow = this._settings.shadow;\n        renderInfo.shadowColor = this._settings.shadowColor;\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\n        renderInfo.shadowBlur = this._settings.shadowBlur;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEy = cutEy;\n        renderInfo.textIndent = this._settings.textIndent * precision;\n        renderInfo.wordBreak = this._settings.wordBreak;\n\n        let text = renderInfo.text;\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\n\n        // Text overflow\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\n        }\n\n        text = this.tokenize(text);\n        text = this.parse(text);\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\n\n        if (renderInfo.textIndent) {\n            text = this.indent(text, renderInfo.textIndent);\n        }\n\n        if (renderInfo.wordBreak) {\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\n            this.resetFontStyle()\n        }\n\n        // Calculate detailed drawing information\n        let x = paddingLeft;\n        let lineNo = 0;\n\n        for (const t of text) {\n            // Wrap text\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\n                x = paddingLeft;\n                lineNo += 1;\n            }\n            t.lineNo = lineNo;\n\n            if (t.text == '\\n') {\n                continue;\n            }\n\n            t.x = x;\n            x += t.width;\n        }\n        renderInfo.lineNum = lineNo + 1;\n\n        if (this._settings.h) {\n            renderInfo.h = this._settings.h;\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\n        } else {\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\n        }\n\n        // This calculates the baseline offset in pixels from the font size.\n        // To retrieve this ratio, you would do this calculation:\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\n        //\n        // This give you the ratio for the baseline, which is then used to figure out\n        // where the baseline is relative to the bottom of the text bounding box.\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\n\n        // Vertical align\n        let vaOffset = 0;\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\n            vaOffset = -baselineOffsetInPx;\n        } else if (renderInfo.verticalAlign == 'middle') {\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\n        } else if (this._settings.verticalAlign == 'bottom') {\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\n        }\n\n        // Calculate lines information\n        renderInfo.lines = []\n        for (let i = 0; i < renderInfo.lineNum; i++) {\n            renderInfo.lines[i] = {\n                width: 0,\n                x: 0,\n                y: renderInfo.lineHeight * i + vaOffset,\n                text: [],\n            }\n        }\n\n        for (let t of text) {\n            renderInfo.lines[t.lineNo].text.push(t);\n        }\n\n        // Filter out white spaces at beginning and end of each line\n        for (const l of renderInfo.lines) {\n            if (l.text.length == 0) {\n                continue;\n            }\n\n            const firstWord = l.text[0].text;\n            const lastWord = l.text[l.text.length - 1].text;\n\n            if (firstWord == '\\n') {\n                l.text.shift();\n            }\n            if (isSpace(lastWord) || lastWord == '\\n') {\n                l.text.pop();\n            }\n        }\n\n\n        // Calculate line width\n        for (let l of renderInfo.lines) {\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\n        }\n\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\n        renderInfo.w = renderInfo.width;\n\n        // Apply maxLinesSuffix\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\n            const index = renderInfo.maxLines - 1;\n            let lastLineText = text.filter((t) => t.lineNo == index)\n            let suffix = renderInfo.maxLinesSuffix;\n            suffix = this.tokenize(suffix);\n            suffix = this.parse(suffix);\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont);\n            for (const s of suffix) {\n                s.lineNo = index;\n                s.x = 0;\n                lastLineText.push(s)\n            }\n\n            const spl = suffix.length + 1\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n            while (_w > renderInfo.width || isSpace(lastLineText[lastLineText.length - spl].text)) {\n                lastLineText.splice(lastLineText.length - spl, 1);\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n                if (lastLineText.length < spl) {\n                    break;\n                }\n            }\n            this.alignLine(lastLineText, lastLineText[0].x)\n\n            renderInfo.lines[index].text = lastLineText;\n            renderInfo.lines[index].width = _w;\n        }\n\n        // Horizontal alignment offset\n        if (renderInfo.textAlign == 'center') {\n            for (let l of renderInfo.lines) {\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\n            }\n        } else if (renderInfo.textAlign == 'right') {\n            for (let l of renderInfo.lines) {\n                l.x = renderInfo.width - l.width - paddingLeft;\n            }\n        }\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n        const paddingLeft = renderInfo.paddingLeft * precision;\n\n        // Set canvas dimensions\n        let canvasWidth = renderInfo.w || renderInfo.width;\n        if (renderInfo.cutSx || renderInfo.cutEx) {\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\n        }\n\n        let canvasHeight = renderInfo.h;\n        if (renderInfo.cutSy || renderInfo.cutEy) {\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\n        }\n\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(canvasHeight);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        // Cut\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        // Highlight\n        if (renderInfo.highlight) {\n            const hlColor = renderInfo.highlightColor || 0x00000000;\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum;\n            for (let i = 0; i < lineNum; i++) {\n                const l = renderInfo.lines[i];\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        // Draw text\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\n        let currentColor = defaultColor;\n        this._context.fillStyle = defaultColor;\n        for (const line of renderInfo.lines) {\n            for (const t of line.text) {\n                let lx = 0;\n\n                if (t.text == '\\n') {\n                    continue;\n                }\n\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\n                    continue;\n                }\n\n                if (t.color != currentColor) {\n                    currentColor = t.color;\n                    this._context.fillStyle = currentColor;\n                }\n\n                this._context.font = t.fontStyle;\n\n                // Draw with letter spacing\n                if (t.letters) {\n                    for (let l of t.letters) {\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                        lx += l.width;\n                    }\n                // Standard drawing\n                } else {\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                }\n            }\n        }\n\n        // Reset text shadow\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        // Reset cut translation\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        // Postprocess renderInfo.lines to be compatible with standard version\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\n        if (renderInfo.maxLines) {\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\n        }\n\n\n        this.renderInfo = renderInfo;\n\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n    tokenize(text) {\n        return tokenizeString(/ |\\u200B|\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g, text);\n    }\n\n    parse(tokens) {\n        let italic = 0;\n        let bold = 0;\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\n        let color = 0;\n\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\n\n        return tokens.map((t) => {\n            if (t == '<i>') {\n                italic += 1;\n                t = '';\n            } else if (t == '</i>' && italic > 0) {\n                italic -= 1;\n                t = '';\n            } else if (t == '<b>') {\n                bold += 1;\n                t = '';\n            } else if (t == '</b>' && bold > 0) {\n                bold -= 1;\n                t = '';\n            } else if (t == '</color>') {\n                if (colorStack.length > 1) {\n                    color -= 1;\n                    colorStack.pop();\n                }\n                t = '';\n            } else if (colorRegexp.test(t)) {\n                const matched = colorRegexp.exec(t);\n                colorStack.push(\n                    StageUtils.getRgbaString(parseInt(matched[1]))\n                );\n                color += 1;\n                t = '';\n\n            }\n\n            return {\n                text: t,\n                italic: italic,\n                bold: bold,\n                color: colorStack[color],\n            }\n        })\n        .filter((o) => o.text != '');\n    }\n\n    applyFontStyle(word, baseFont) {\n        let font = baseFont;\n        if (word.bold) {\n            font = 'bold ' + font;\n        }\n        if (word.italic) {\n            font = 'italic ' + font;\n        }\n        this._context.font = font\n        word.fontStyle = font;\n    }\n\n    resetFontStyle(baseFont) {\n        this._context.font = baseFont;\n    }\n\n    measure(parsed, letterSpacing = 0, baseFont) {\n        for (const p of parsed) {\n            this.applyFontStyle(p, baseFont);\n            p.width = this.measureText(p.text, letterSpacing);\n\n            // Letter by letter detail for letter spacing\n            if (letterSpacing > 0) {\n                p.letters = p.text.split('').map((l) => {return {text: l}});\n                for (let l of p.letters) {\n                    l.width = this.measureText(l.text, letterSpacing);\n                }\n            }\n\n        }\n        this.resetFontStyle(baseFont);\n        return parsed;\n    }\n\n    indent(parsed, textIndent) {\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\n        return parsed;\n    }\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\n    }\n\n    _getBreakIndex(word, width) {\n        const wordLen = word.length;\n        const wordWidth = this.measureText(word);\n\n        if (wordWidth <= width) {\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\n        }\n\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > width) {\n            while (breakIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth > width) {\n                    breakIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (breakIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth < width) {\n                    breakIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    breakIndex -=1;\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                    break;\n                }\n            }\n        }\n        return {breakIndex, truncWordWidth};\n\n    }\n\n    wordBreak(word, width, baseFont) {\n        if (!word.text) {\n            return word\n        }\n        this.applyFontStyle(word, baseFont)\n        const parts = [];\n        let text = word.text;\n        if (!word.letters) {\n            while (true) {\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = truncWordWidth;\n\n                if (breakIndex === text.length) {\n                    break;\n                }\n\n                text = text.slice(breakIndex);\n            }\n        } else {\n            let totalWidth = 0;\n            let letters = [];\n            let breakIndex = 0;\n            for (const l of word.letters) {\n                if (totalWidth + l.width >= width) {\n                    parts.push({...word});\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\n                    parts[parts.length - 1].width = totalWidth;\n                    parts[parts.length - 1].letters = letters;\n                    text = text.slice(breakIndex);\n                    totalWidth = 0;\n                    letters = [];\n                    breakIndex = 0;\n\n                } else {\n                    breakIndex += 1;\n                    letters.push(l);\n                    totalWidth += l.width;\n                }\n            }\n\n            if (totalWidth > 0) {\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = totalWidth;\n                parts[parts.length - 1].letters = letters;\n            }\n        }\n\n        return parts;\n    }\n\n    alignLine(parsed, initialX = 0) {\n        let prevWidth = 0;\n        let prevX = initialX;\n        for (const word of parsed) {\n            if (word.text == '\\n') {\n                continue;\n            }\n            word.x = prevX + prevWidth;\n            prevX = word.x;\n            prevWidth = word.width;\n        }\n\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        if (this.advancedRenderer) {\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\n        } else {\n            return new TextTextureRenderer(stage, canvas, settings);\n        }\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontBaselineRatio() {\n        return this._fontBaselineRatio;\n    }\n    \n    set fontBaselineRatio(v) {\n        if (this._fontBaselineRatio !== v) {\n            this._fontBaselineRatio = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontWeight() {\n        return this._fontWeight;\n    }\n\n    set fontWeight(v) {\n        if (this._fontWeight !== v) {\n            this._fontWeight = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get wordBreak() {\n        return this._wordBreak;\n    }\n\n    set wordBreak(v) {\n        if (this._wordBreak !== v) {\n            this._wordBreak = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (v != 'center' && this.stage.getOption('RTL')) {\n            v = v == \"right\" ? \"left\" : \"right\";\n        }\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    get advancedRenderer() {\n        return this._advancedRenderer;\n    }\n\n    set advancedRenderer(v) {\n        if (this._advancedRenderer !== v) {\n            this._advancedRenderer = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    set textIndent(v) {\n        if (this._textIndent !== v) {\n            this._textIndent = v;\n            this._changed();\n        }\n    }\n\n    get textIndent() {\n        return this._textIndent;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontWeight !== 'normal') parts.push(\"fw\" + this.fontWeight);\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        const gl = this.stage.gl;\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = (args.advancedRenderer)\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\n              : new TextTextureRenderer(this.stage, canvas, args);\n            \n            const p = renderer.draw();\n\n            const texParams = {};\n\n            const sharpCfg = this.stage.getOption('fontSharp');\n            let sharpen = false;\n\n            // Prevent text blur when text texture is downscaled\n            if (Utils.isBoolean(sharpCfg)) {\n                sharpen = sharpCfg;\n            } else if (Utils.isObject(sharpCfg)) {\n                const precision = this.stage.getRenderPrecision();\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\n            }\n\n            if (gl && sharpen) {\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false,\n                        texParams: texParams,\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false,\n                    texParams: texParams,\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontWeight !== \"normal\") nonDefaults[\"fontWeight\"] = this.fontWeight;\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontWeight = this._fontWeight;\n        obj.fontBaselineRatio = this._fontBaselineRatio;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.wordBreak = this._wordBreak;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.textIndent = this._textIndent;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        obj.advancedRenderer = this._advancedRenderer;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontWeight = \"normal\";\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._wordBreak = false;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._textIndent = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\nproto._advancedRenderer = false;\nproto._fontBaselineRatio = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if( index < this._items.length){\n\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n\n                    const prevItem = this._items[index];\n\n                    // Doesn't exist yet: overwrite current.\n                    this._items[index] = item;\n\n                    if (item.ref) {\n                        this._refs[item.ref] = item;\n                    }\n\n                    this.onSet(item, index, prevItem);\n                } else {\n                    throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n                }\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        if (index >= 0 && index < this._items.length) {\n            const item = this._items[index];\n\n            if (item.ref) {\n                this._refs[item.ref] = undefined;\n            }\n\n            this._items.splice(index, 1);\n\n            this.onRemove(item, index);\n\n            return item;\n        } else {\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\n        }\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n        this._updateCollision();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestors() {\n        const a = [];\n        let p = this;\n        while (p) {\n            a.push(p);\n            p = p.__parent;\n        }\n        return a;\n    }\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"[Lightning] Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.stage.removeUpdateSourceTexture(this.__displayedTexture)\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get collision() {\n        return this._collision;\n    }\n\n    set collision(v) {\n        this._collision = v;\n    }\n\n    _updateCollision() {\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\n            /**\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\n             * This narrows down the search for elements with active collision.\n            */\n            this.__parent.collision = 2;\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {};\n        tree[ref] = {};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOffscreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc(this);\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    static bindProp(name, func = null) {\n        return {__propertyBinding: true, __name: name, __func: func};\n    }\n\n    __bindProperty(propObj, targetObj, targetProp) {\n        // 1. find binding position: find object and property name to be bound\n        const obj = targetObj;\n        const prop = targetProp;\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\n\n        // 2. create setters for every given dependency\n        for (let i = 0; i < propDependencies.length; i++) {\n            const propName = propDependencies[i];\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\n\n            if (!this.hasOwnProperty(propName)) {\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\n                Object.defineProperty(this, propName, {\n                    set: (value) => {\n                        this[`__prop_${propName}`] = value;\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\n                            __obj[__prop] = __func(this);\n                        }\n                    },\n                    get: () => this[`__prop_${propName}`]\n                });\n            } else {\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\n            }\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc(ctx) {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template(ctx));\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f: f, a: context.store};\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\n                    if (value.__propertyBinding === true) {\n                        // Allow binding entire objects to text property\n                        store.push(value);\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                    } else {\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\n                    const shaderCursor = `${cursor}[\"shader\"]`\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    this.parsePropertyBindings(value, context, shaderCursor);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    static parsePropertyBindings(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n\n    _construct() {\n    }\n\n    _build() {\n    }\n\n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {};\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while (c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while (ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n \n                    if (Utils.isFunction(fireEvent)) {\n                        return fireEvent(...args);\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n        this.ctx = null;\n        this.renderState = null;\n        this.gl = null;\n\n        delete this.ctx;\n        delete this.renderState;\n        delete this.gl;\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n\n        this.gl = null;\n        delete this.gl;\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n        this.gl = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('[Lightning] Error: Could not initialize shader.');\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('[Lightning] gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n        }\n\n        this._attributeLocations = null;\n        this._currentUniformValues = null;\n        this.fragmentShaderSource = null;\n        this._program = null;\n        this.gl = null;\n        this._uniformLocations = null;\n        this.vertexShaderSource = null;  \n\n        delete this.vertexShaderSource;\n        delete this._program;        \n        delete this._currentUniformValues;\n        delete this.fragmentShaderSource;\n        delete this.gl;\n        delete this._uniformLocations;\n        delete this._attributeLocations;\n\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            \n            gl.bindTexture(gl.TEXTURE_2D, glTexture);\n            gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n        this._compressedTextureExtensions = {\n            astc: stage.gl.getExtension('WEBGL_compressed_texture_astc'),\n            etc1: stage.gl.getExtension('WEBGL_compressed_texture_etc1'),\n            s3tc: stage.gl.getExtension('WEBGL_compressed_texture_s3tc'),\n            pvrtc: stage.gl.getExtension('WEBGL_compressed_texture_pvrtc'),\n        }\n    }\n\n    getCompressedTextureExtensions() {\n        return this._compressedTextureExtensions\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n\n        this.shaderPrograms = null;\n        this._compressedTextureExtensions = null;\n\n        delete this.shaderPrograms;\n        delete this._compressedTextureExtensions;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n\n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = { format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE };\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2 / w, 2 / h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n\n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    _getBytesPerPixel(fmt, type) {\n        const gl = this.stage.gl;\n\n        if (fmt === gl.RGBA) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 4;\n\n                case gl.UNSIGNED_SHORT_4_4_4_4:\n                    return 2;\n\n                case gl.UNSIGNED_SHORT_5_5_5_1:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGBA format');\n            }\n        }\n        else if (fmt === gl.RGB) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 3;\n\n                case gl.UNSIGNED_BYTE_5_6_5:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGB format');\n            }\n        }\n        else {\n            throw new Error('Invalid format specified in call to _getBytesPerPixel()');\n        }\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n        let compressed = false;\n        if (options.renderInfo) {\n            compressed = options.renderInfo.compressed || false\n        }\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        if (compressed) {\n            this.stage.platform.uploadCompressedGlTexture(gl, textureSource, source);\n            return glTexture;\n        }\n         \n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n        \n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n        \n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        // calculate bytes per pixel for vram usage tracking\n        glTexture.bytesPerPixel = this._getBytesPerPixel(texOptions.format, texOptions.type);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                cache.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n\n        this.tintManager = null;\n        delete this.tintManager;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n\n        this._items = null;\n        this._worker = null;\n\n        delete this._items;\n        delete this._worker;        \n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            // the constructing of the basepath fails\n            // if location.hash contains a slash\n            var hasHashPath = /#.*?\\//;\n            if(hasHashPath.test(base)){\n                base = base.replace(/#.*$/,'');\n            }\n\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        // Alternative handler to avoid RAF when idle\n        this._loopHandler = null;\n        this._idleLoopCounter = 0;\n        this._idleLoopDelay = 60;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                this._imageWorker = new ImageWorker();\n            }\n        }\n\n        this._registerVisibilityChangeHandler();\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n\n        clearInterval(this._loopHandler);\n\n        this._removeKeyHandler();\n        this._removeClickHandler();\n        this._removeHoverHandler();\n        this._removeScrollWheelHandler();\n        this._removeVisibilityChangeHandler();\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    switchLoop() {\n        if (this._idleLoopCounter < this._idleLoopDelay) {\n            this._idleLoopCounter++;\n            return;\n        }\n        if (!this.stage.ctx.hasRenderUpdates()) {\n            this.stopLoop();\n            this._loopHandler = setInterval(() => {\n                this.stage.updateFrame();\n                this.stage.idleFrame();\n                if (this.stage.ctx.hasRenderUpdates()) {\n                    clearInterval(this._loopHandler);\n                    this.startLoop();\n                };\n            }, 1000 / 60);\n        } else {\n            this._idleLoopCounter = 0;\n        }\n    }\n\n    loop() {\n        let self = this;\n        let lp = function () {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.updateFrame();\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\n                    self.switchLoop();\n                }\n                self.stage.renderFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadCompressedGlTexture(gl, textureSource, source, options) {\n        const view = !source.pvr ? new DataView(source.mipmaps[0]) : source.mipmaps[0];\n        gl.compressedTexImage2D(\n            gl.TEXTURE_2D,\n            0,\n            source.glInternalFormat,\n            source.pixelWidth,\n            source.pixelHeight,\n            0,\n            view,\n        )\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else if (source instanceof HTMLCanvasElement) {\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n            } else if (source.width > 0 && source.height > 0) {\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\n                // Width/Height check added because of https://github.com/rdkcentral/Lightning/issues/412\n                const ctx = source.getContext('2d');\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    /**\n     * KTX File format specification\n     * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\n     **/\n    handleKtxLoad(cb, src) {\n        var self = this;\n        return function () {\n            var arraybuffer = this.response;\n            var view = new DataView(arraybuffer);\n\n            // identifier, big endian\n            var targetIdentifier = 3632701469\n            if (targetIdentifier !== (view.getUint32(0) + view.getUint32(4) + view.getUint32(8))) {\n                cb('Parsing failed: identifier ktx mismatch:', src)\n            }\n\n            var littleEndian = (view.getUint32(12) === 16909060) ? true : false;\n            var data = {\n                glType: view.getUint32(16, littleEndian),\n                glTypeSize: view.getUint32(20, littleEndian),\n                glFormat: view.getUint32(24, littleEndian),\n                glInternalFormat: view.getUint32(28, littleEndian),\n                glBaseInternalFormat: view.getUint32(32, littleEndian),\n                pixelWidth: view.getUint32(36, littleEndian),\n                pixelHeight: view.getUint32(40, littleEndian),\n                pixelDepth: view.getUint32(44, littleEndian),\n                numberOfArrayElements: view.getUint32(48, littleEndian),\n                numberOfFaces: view.getUint32(52, littleEndian),\n                numberOfMipmapLevels: view.getUint32(56, littleEndian),\n                bytesOfKeyValueData: view.getUint32(60, littleEndian),\n                kvps: [],\n                mipmaps: [],\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            const props = (obj) => {\n                const p = [];\n                for (let v in obj) {\n                    p.push(obj[v]);\n                }\n                return p;\n            }\n\n            const formats = Object.values(self.stage.renderer.getCompressedTextureExtensions())\n                .filter((obj) => obj != null)\n                .map((obj) => props(obj))\n                .reduce((prev, current) => prev.concat(current));\n\n            if (!formats.includes(data.glInternalFormat)) {\n                console.warn(\"[Lightning] Unrecognized texture extension format:\", src, data.glInternalFormat, self.stage.renderer.getCompressedTextureExtensions());\n            }\n\n            var offset = 64\n            // Key Value Pairs of data start at byte offset 64\n            // But the only known kvp is the API version, so skipping parsing.\n            offset += data.bytesOfKeyValueData;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                var imageSize = view.getUint32(offset);\n                offset += 4;\n                data.mipmaps.push(view.buffer.slice(offset, imageSize));\n                offset += imageSize\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    handlePvrLoad(cb, src) {\n        return function () {\n            // pvr header length in 32 bits\n            const pvrHeaderLength = 13;\n            // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\n            const pvrFormatEtc1 = 0x8D64;\n            const pvrWidth = 7;\n            const pvrHeight = 6;\n            const pvrMipmapCount = 11;\n            const pvrMetadata = 12;\n            const arrayBuffer = this.response;\n            const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\n            const dataOffset = header[pvrMetadata] + 52;\n            const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\n\n            var data = {\n                glInternalFormat: pvrFormatEtc1,\n                pixelWidth: header[pvrWidth],\n                pixelHeight: header[pvrHeight],\n                numberOfMipmapLevels: header[pvrMipmapCount],\n                mipmaps: [],\n                pvr: true,\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            let offset = 0\n            let width = data.pixelWidth;\n            let height = data.pixelHeight;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n                const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\n                data.mipmaps.push(view);\n                offset += level;\n                width = width >> 1;\n                height = height >> 1;\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    loadSrcTexture({ src, hasAlpha }, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.toLowerCase().indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        let isKtx = src.indexOf('.ktx') >= 0;\n        let isPvr = src.indexOf('.pvr') >= 0;\n        if (isKtx || isPvr) {\n            let request = new XMLHttpRequest();\n            request.addEventListener(\n                \"load\", isKtx ? this.handleKtxLoad(cb, src) : this.handlePvrLoad(cb, src)\n            );\n            request.open(\"GET\", src);\n            request.responseType = \"arraybuffer\";\n            request.send();\n            cancelCb = function () {\n                request.abort();\n            }\n        } else if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function (err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function ({ imageBitmap, hasAlphaChannel }) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function () {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0, 5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function (err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function () {\n                cb(null, {\n                    source: image,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function () {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts) || canvas.getContext('webgl2', opts);\n\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n    registerClickHandler(clickHandler) {\n        this._clickListener = e => {\n            clickHandler(e);\n        };\n        window.addEventListener('mousedown', this._clickListener);\n    }\n\n    _removeClickHandler() {\n        if (this._clickListener) {\n            window.removeEventListener('mousedown', this._clickListener);\n        }\n    }\n\n    registerHoverHandler(hoverHandler) {\n        this._hoverListener = e => {\n            hoverHandler(e);\n        };\n        window.addEventListener('mousemove', this._hoverListener);\n    }\n\n    _removeHoverHandler() {\n        if (this._hoverListener) {\n            window.removeEventListener('mousemove', this._hoverListener);\n        }\n    }\n\n    registerScrollWheelHandler(registerScrollWheelHandler) {\n        this._scrollWheelListener = e => {\n            registerScrollWheelHandler(e);\n        }\n        window.addEventListener('wheel', this._scrollWheelListener);\n    }\n\n    _removeScrollWheelHandler() {\n        if (this._scrollWheelListener) {\n            window.removeEventListener('wheel', this._scrollWheelListener);\n        }\n    }\n\n    /**\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\n     */\n    _registerVisibilityChangeHandler() {\n        this._visibilityChangeHandler = () => {\n            if (document.visibilityState === 'visible') {\n                this.stage.root.core.setHasRenderUpdates(2);\n                this.stage.renderFrame();\n            }\n        }\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\n    }\n\n    _removeVisibilityChangeHandler() {\n        if (this._visibilityChangeHandler) {\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\nimport Stage from './Stage.mjs';\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n\n        // add VRAM tracking if using the webgl renderer\n        this._updateVramUsage(textureSource, 1);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    _updateVramUsage(textureSource, sign) {\n        const nativeTexture = textureSource.nativeTexture;\n        var usage;\n\n        // do nothing if webgl isn't even supported\n        if (!Stage.isWebglSupported())\n            return;\n\n        // or if there is no native texture\n        if (!textureSource.isLoaded())\n            return;\n\n        // or, finally, if there is no bytes per pixel specified\n        if (!nativeTexture.hasOwnProperty('bytesPerPixel') || isNaN(nativeTexture.bytesPerPixel))\n            return;\n\n        usage = sign * (textureSource.w * textureSource.h * nativeTexture.bytesPerPixel);\n\n        this.stage.addVramUsage(usage, textureSource.hasAlpha);\n    }\n\n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n\n            // add VRAM tracking if using the webgl renderer\n            this._updateVramUsage(textureSource, -1);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n        this.stage = null;\n\n        delete this._sources;\n        delete this._data;\n        delete this.stage;\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n\n        this.renderToTextureCount = 0;\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n\n        this.stage = null;\n        this.root = null;\n\n        this.renderState = null;\n        this.renderExec = null;\n        this._renderTexturePool = null;\n        this._zSorts = null;\n\n        delete this.stage;\n        delete this.root;\n        delete this.renderState;\n        delete this.renderExec;\n        delete this._renderTexturePool;\n        delete this._zSorts;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        const debugFrame = this.stage.getOption('debugFrame');\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            this._readPixels();\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n\n        if (debugFrame) {\n            console.log(`[Lightning] RTT Renders in frame: ${this.renderToTextureCount}`)\n        }\n\n        // Block OpenGL pipeline to prevent framebuffer flickering\n        // on certain devices\n        if (this.stage.getOption('readPixelsAfterDraw') &&\n            this.renderToTextureCount >= this.stage.getOption('readPixelsAfterDrawThreshold')\n        ) {\n            if (debugFrame) {\n                console.log(`[Lightning] readPixelsAfterDraw behavior triggered`)\n            }\n            this._readPixels();\n        }\n\n        this.renderToTextureCount = 0;\n    }\n\n    _readPixels() {\n        const pixels = new Uint8Array(4);\n        const gl = this.stage.gl;\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        // attempt to track VRAM usage more accurately by accounting for different color channels\n        this._usedVramAlpha = 0;\n        this._usedVramNonAlpha = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            if (this.getOption('devicePixelRatio') !== 1) {\n                const ratio = this.getOption('devicePixelRatio');\n                // set correct display sie\n                this.getCanvas().style.width = this._options['w'] / ratio  + 'px';\n                this.getCanvas().style.height = this._options['h'] / ratio + 'px';\n            }\n\n            // set display buffer size\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('fontSharp', { precision: 0.6666666667, fontSize: 24 })\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n        opt('devicePixelRatio', 1)       \n        opt('readPixelsAfterDraw', false);\n        opt('readPixelsAfterDrawThreshold', 0);\n        opt('debugFrame', false);\n        opt('forceTxCanvasSource', false);\n        opt('pauseRafLoopOnIdle', false);\n        opt('RTL', false);\n\n        if (o['devicePixelRatio'] != null && o['devicePixelRatio'] !== 1) {\n            this._options['precision'] *= o['devicePixelRatio']\n            this._options['w'] *= o['devicePixelRatio']\n            this._options['h'] *= o['devicePixelRatio']\n        }\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\n            console.log('[Lightning] Using image worker!');\n        }\n\n        if (this.application.getOption('debug') && this.c2d) {\n            console.log('[Lightning] Using canvas2d renderer');\n        }\n\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n\n        // clear last rendered frame\n        if (this.gl) {\n            this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        } else if (this.c2d) {\n            this.c2d.clearRect(\n                0, 0, this.c2d.canvas.width, this.c2d.canvas.height\n            );\n        }\n\n        this.gl = null;\n        this.c2d = null;\n        this.ctx = null;\n        this._options = null;\n        this.platform = null;\n        this.textureManager = null;\n        this._renderer = null;\n\n        delete this.gl;\n        delete this.c2d;\n        delete this.ctx;\n        delete this._options;\n        delete this.platform;\n        delete this.textureManager;\n        delete this._renderer;\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n\n    _performUpdateSource() {\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n    }\n\n    _calculateDt() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n    }\n\n    updateFrame() {\n        this._calculateDt();\n        this.emit('frameStart');\n        this._performUpdateSource();\n        this.emit('update');\n    }\n\n    idleFrame() {\n        this.textureThrottler.processSome();\n        this.emit('frameEnd');\n        this.frameCounter++;\n    }\n\n    renderFrame() {\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    drawFrame() {\n        // Maintain original functionality of `drawFrame()` while retaining the\n        // RAF mitigration feature from: https://github.com/rdkcentral/Lightning/pull/402\n        // The full functionality of this method is relied directly by our own unit tests and\n        // the unit tests of third party users\n        this.updateFrame();\n        this.renderFrame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    addVramUsage(delta, alpha) {\n        if (alpha) {\n            this._usedVramAlpha += delta;\n        }\n        else {\n            this._usedVramNonAlpha += delta;\n        }\n    }\n\n    get usedVramAlpha() {\n        return this._usedVramAlpha;\n    }\n\n    get usedVramNonAlpha() {\n        return this._usedVramNonAlpha;\n    }\n\n    get usedVram() {\n        return this._usedVramAlpha + this._usedVramNonAlpha;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            if (this.application.getOption('debug')) {\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n            }\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y) {\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x, y, children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n        this.__hoveredChild = null;\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n\n        if (this.getOption(\"enablePointer\")) {\n            this.stage.platform.registerClickHandler((e) => {\n                this._receiveClick(e);\n            });\n\n            this.stage.platform.registerHoverHandler((e) => {\n                this._receiveHover(e);\n            });\n\n            this.stage.platform.registerScrollWheelHandler((e) => {\n                this._recieveScrollWheel(e);\n            });\n\n            this.cursor = 'default';\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n        opt('enablePointer', false);\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n\n                if (this.getOption('debug')) {\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\n                }\n\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while (true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    _recieveScrollWheel(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\n            }\n        }\n    }\n\n    fireTopDownScrollWheelHandler(event, obj) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children).reverse();\n        let n = affected.length;\n\n        while (n--) {\n            const child = affected[n];\n            if (child && child[event]) {\n                child._captureScroll(obj);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    fireBottomUpScrollWheelHandler(event, obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[event]) {\n                child._handleScroll(obj);\n                return true;\n            }\n            child = child.parent;\n        }\n        return false;\n    }\n\n    _receiveClick(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpClickHandler(obj);\n        }\n    }\n\n    fireBottomUpClickHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[\"_handleClick\"]) {\n                const { px, py } = child.core._worldContext;\n                const cx = px * precision;\n                const cy = py * precision;\n\n                const localCoords = {\n                    x: clientX - cx,\n                    y: clientY - cy\n                }\n\n                const returnValue = child._handleClick(target, localCoords);\n                if (returnValue !== false) {\n                    break;\n                }\n            }\n            child = child.parent;\n        }\n    }\n\n    _receiveHover(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpHoverHandler(obj);\n        }\n    }\n\n    fireBottomUpHoverHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n\n        // Only fire handlers when pointer target changes\n        if (target !== this.__hoveredChild) {\n\n            let hoveredBranch = new Set();\n            let newHoveredBranch = new Set();\n\n            if (target) {\n                newHoveredBranch = new Set(target.getAncestors());\n            }\n\n            if (this.__hoveredChild) {\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\n                    const c = Component.getComponent(elem);\n                    if (c[\"_handleUnhover\"]) {\n                        c._handleUnhover(elem);\n                    }\n                    if (elem.parent && elem.parent.cursor) {\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\n                    }\n                }\n            }\n\n            this.__hoveredChild = target;\n\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\n            for (const elem of diffBranch) {\n                const c = Component.getComponent(elem);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(elem);\n                }\n            }\n\n            // New element hover cursor\n            const lastElement = diffBranch[0];\n            if (lastElement && lastElement.cursor) {\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\n            }\n\n            // Rerun _handleHover for target element in case it's been hovered\n            // back from its child\n            if (diffBranch.length === 0 && target) {\n                const c = Component.getComponent(target);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(target);\n                }\n            }\n        }\n    }\n\n    _getTargetChild(clientX, clientY) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children);\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\n\n        hoverableChildren.sort((a, b) => {\n            // Sort by zIndex and then id\n            if (a.zIndex > b.zIndex) {\n                return 1;\n            } else if (a.zIndex < b.zIndex) {\n                return -1;\n            } else {\n                return a.id > b.id ? 1 : -1;\n            }\n        });\n\n        if (hoverableChildren.length) {\n            // Assume target has highest zIndex (id when zIndex equal)\n            return hoverableChildren.slice(-1)[0];\n        } else {\n            return null;\n        }\n    }\n\n    _findChildren(bucket, children) {\n        let n = children.length;\n        while (n--) {\n            const child = children[n];\n            // only add active children\n            if (child.__active && child.collision) {\n                if (child.collision === true) {\n                    bucket.push(child);\n                }\n                if (child.hasChildren()) {\n                    this._findChildren(bucket, child.children);\n                }\n            }\n        }\n        return bucket;\n    }\n\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\n        let n = affectedChildren.length;\n        const candidates = [];\n\n        // loop through affected children\n        // and perform collision detection\n        while (n--) {\n            const child = affectedChildren[n];\n            const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n            const ctx = child.core._worldContext;\n\n            const cx = ctx.px * precision;\n            const cy = ctx.py * precision;\n            const cw = child.finalW * ctx.ta * precision;\n            const ch = child.finalH * ctx.td * precision;\n\n            if (cx > this.stage.w || cy > this.stage.h) {\n                continue;\n            }\n\n            if (child.parent.core._scissor) {\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\n                    continue\n            }\n\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\n                candidates.push(child);\n            }\n        }\n        return candidates;\n    }\n\n    _testCollision(px, py, cx, cy, cw, ch) {\n        if (px >= cx &&\n            px <= cx + cw &&\n            py >= cy &&\n            py <= cy + ch) {\n            return true;\n        }\n        return false;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onerror = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error('[Lightning]', e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._blend = 0;\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fc = 0x00ffffff;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set blend(p) {\n        this._blend = Math.min(Math.max(p, 0), 1);\n    }\n\n    set radius(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._radius = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\n            }\n            else if (v.length === 4) {\n                this._radius = v;\n            }\n            else {\n                this._radius = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set topLeft(num) {\n        this._radius[0] = num;\n        this.redraw();\n    }\n\n    get topLeft() {\n        return this._radius[0];\n    }\n\n    set topRight(num) {\n        this._radius[1] = num;\n        this.redraw();\n    }\n\n    get topRight() {\n        return this._radius[1];\n    }\n\n    set bottomRight(num) {\n        this._radius[2] = num;\n        this.redraw();\n    }\n\n    get bottomRight() {\n        return this._radius[2];\n    }\n\n    set bottomLeft(num) {\n        this._radius[3] = num;\n        this.redraw();\n    }\n\n    get bottomLeft() {\n        return this._radius[4];\n    }\n\n    set strokeColor(argb) {\n        this._sc = argb;\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get strokeColor() {\n        return this._sc;\n    }\n\n    set fillColor(argb) {\n        this._fc = argb;\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get fillColor() {\n        return this._fc;\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    uniform float alpha;\n    uniform float fill;\n    uniform float blend;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n        \n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from './DefaultShader.mjs';\n\nexport default class FadeOutShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._fade = [0, 0, 0, 0];\n    }\n\n    set top(num) {\n        this._fade[0] = num;\n        this.redraw();\n    }\n\n    get top() {\n        return this._fade[0];\n    }\n\n    set right(num) {\n        this._fade[1] = num;\n        this.redraw();\n    }\n\n    get right() {\n        return this._fade[1];\n    }\n\n    set bottom(num) {\n        this._fade[2] = num;\n        this.redraw();\n    }\n\n    get bottom() {\n        return this._fade[2];\n    }\n\n    set left(num) {\n        this._fade[3] = num;\n        this.redraw();\n    }\n\n    get left() {\n        return this._fade[3];\n    }\n\n    set fade(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._fade = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\n            }\n            else if (v.length === 4) {\n                this._fade = v;\n            }\n            else {\n                this._fade = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._fade = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get fade() {\n        return this._fade;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const fade = this._fade.map((f) => f * renderPrecision);\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nFadeOutShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 fade;\n    \n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 point = vTextureCoord.xy * resolution.xy;\n        \n        vec2 pos1;\n        vec2 pos2;\n        vec2 d;\n        float c;\n        float t = 0.0;\n             \n        if(fade[0] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x, point.y + fade[0]);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[1] > 0.0) {\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[2] > 0.0) {\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[3] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x + fade[3], point.y);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivot = [0.5, 0.5];\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\n        this.redraw()\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v)) {\n            this._pivot = v;\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    set pivotX(v) {\n        this._pivot[0] = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotY(v) {\n        this._pivot[1] = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform vec2 pivot;\n\n    void main() {\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b) * vColor;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._pivot = [0, 0];\n        this._ic = 0xffffffff;\n        this._normalizedIC = this._getNormalizedColor(this._ic);\n        this._oc = 0x00ffffff;\n        this._normalizedOC = this._getNormalizedColor(this._oc);\n        this._radius = 0;\n    }\n\n    set radiusX(v) {\n        this.radius = v;\n    }\n\n    get radiusX() {\n        return this._radius;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set innerColor(argb) {\n        this._ic = argb;\n        this._normalizedIC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get innerColor() {\n        return this._ic;\n    }\n\n    set outerColor(argb) {\n        this._oc = argb;\n        this._normalizedOC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set color(argb) {\n        this.innerColor = argb;\n    }\n\n    get color() {\n        return this.innerColor;\n    }\n\n    get outerColor() {\n        return this._ic;\n    }\n\n    set x(f) {\n        this._x = f;\n        this.redraw();\n    }\n\n    set y(f) {\n        this._y = f;\n        this.redraw();\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v) && v.length === 2) {\n            this._pivot = v;\n        }\n        else if(Array.isArray(v)) {\n            this._pivot = [v[0], v[1] || v[0]];\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivot() {\n        return this._pivot[0];\n    }\n\n    set pivotY(f) {\n        this._pivot[1] = f;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotX(f) {\n        this._pivot[0] = f;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        if(this._x) {\n            this._pivot[0] = this._x / owner.w;\n        }\n        if(this._y) {\n            this._pivot[1] = this._y / owner.h;\n        }\n\n        if(this._radius === 0) {\n            this._radius = owner.w * 0.5;\n        }\n\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\n    }\n}\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec2 pivot;\n    uniform vec4 innerColor;\n    uniform vec4 outerColor;\n    uniform float radius;\n    uniform float radiusY;\n    uniform float alpha;\n    uniform float fill;\n    uniform float aspectRatio;\n    \n    void main() {\n        vec2 point = vTextureCoord.xy * resolution;\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class MagnifierShader extends DefaultShader {\n\tconstructor(context) {\n\t  super(context);\n\t  this._x = 0;\n\t  this._y = 0;\n\t  this._w = 0;\n\t  this._h = 0;\n\t  this._radius = 0;\n\t  this._magnification = 0.6;\n\t}\n  \n\tget x() {\n\t  return this._x;\n\t}\n  \n\tset x(v) {\n\t  this._x = v;\n\t  this.redraw();\n\t}\n  \n\tget y() {\n\t  return this._y;\n\t}\n  \n\tset y(v) {\n\t  this._y = v;\n\t  this.redraw();\n\t}\n  \n\tget w() {\n\t  return this._w;\n\t}\n  \n\tset w(v) {\n\t  this._w = v;\n\t  this.redraw();\n\t}\n  \n\tget h() {\n\t  return this._h;\n\t}\n  \n\tset h(v) {\n\t  this._h = v;\n\t  this.redraw();\n\t}\n  \n\tget magnification() {\n\t  return this._magnification;\n\t}\n  \n\tset magnification(v) {\n\t  this._magnification = v;\n\t  this.redraw();\n\t}\n  \n\tget radius() {\n\t  return this._radius;\n\t}\n  \n\tset radius(v) {\n\t  this._radius = v;\n\t  this.redraw();\n\t}\n  \n\tsetupUniforms(operation) {\n\t  super.setupUniforms(operation);\n  \n\t  const owner = operation.shaderOwner;\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\n\t  this._setUniform(\n\t\t'radius',\n\t\t(this._radius + 0.5) * renderPrecision,\n\t\tthis.gl.uniform1f\n\t  );\n\t  this._setUniform(\n\t\t'resolution',\n\t\tnew Float32Array([\n\t\t  owner._w * renderPrecision,\n\t\t  owner._h * renderPrecision\n\t\t]),\n\t\tthis.gl.uniform2fv\n\t  );\n\t}\n \n\tuseDefault() {\n\t  return this._w === 0 && this._h === 0;\n\t}\n  }\n  \n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n  \n  MagnifierShader.fragmentShaderSource = `\n\t  #ifdef GL_ES\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\tprecision highp float;\n\t\t# else\n\t\tprecision lowp float;\n\t\t# endif\n\t  #endif\n\n\t  varying vec2 vTextureCoord;\n\t  varying vec4 vColor;\n\t  uniform sampler2D uSampler;\n\t  uniform float x;\n\t  uniform float y;\n\t  uniform float w;\n\t  uniform float h;\n\t  uniform vec2 resolution;\n\t  uniform float radius;\n\t  uniform float magnification;\n  \n\t  float roundBox(vec2 p, vec2 b, float r) {\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\n\t\t  return smoothstep(1.0, 0.0, d);\n\t  }\n\n\t  float inside(vec2 v) {\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\n\t\treturn s.x * s.y;   \n      }\n  \n\t  void main(void) {\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n\t\tvec2 size = vec2(w, h) / 2.0;\n\t\tfloat b = roundBox(pos, size, radius);\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\n\t  }\n  `;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class SpinnerShader2 extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._period = 1;\n        this._stroke = 0;\n        this._showDot = true;\n        this._clockwise = true;\n        this._bc = 0xff000000;\n        this._normalizedBC = this._getNormalizedColor(this._bc);\n        this._c = 0xffffffff;\n        this._normalizedC = this._getNormalizedColor(this._c);\n    }\n\n    set radius(v) {\n        if(v === 0) {\n            v = 1;\n        }\n        this._radius = v;\n    }\n\n    set stroke(value) {\n        this._stroke = Math.abs(value);\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    set color(argb) {\n        this._c = argb;\n        this._normalizedC = this._getNormalizedColor(argb);\n    }\n\n    get color() {\n        return this._c;\n    }\n\n    set backgroundColor(argb) {\n        this._bc = argb;\n        this._normalizedBC = this._getNormalizedColor(argb);\n    }\n\n    get backgroundColor() {\n        return this._sc;\n    }\n\n    set showDot(bool) {\n        this._showDot = bool;\n    }\n\n    get showDot() {\n        return this._showDot;\n    }\n\n    set clockwise(bool) {\n        this._clockwise = bool;\n    }\n\n    get clockwise() {\n        return this._clockwise;\n    }\n\n    set period(v) {\n        this._period = v;\n    }\n\n    get period() {\n        return this._period;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const radius = this._radius || (owner._w / 2);\n\n        if(this._stroke === 0) {\n            this._stroke = radius * 0.33;\n        }\n\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\n        this._setUniform('radius',  radius, this.gl.uniform1f);\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\n            this.redraw();\n        }\n    }\n}\n\nSpinnerShader2.spinSync = Date.now();\n\nSpinnerShader2.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n    uniform float direction;\n    uniform float radius;\n    uniform float time;\n    uniform float stroke;\n    uniform float showDot;\n    uniform float period;\n    uniform float alpha;\n    \n    float circleDist(vec2 p, float radius){\n        return length(p) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\n        \n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n        \n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\n        \n        float strokeRad = stroke * 0.5;\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Spinner2: SpinnerShader2,\n        FadeOut: FadeOutShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        Magnifier: MagnifierShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;\n"],"names":["StageUtils","_classCallCheck","key","value","mergeNumbers","v1","v2","p","rgb","r","g","b","rgba","a","getRgbString","color","getRgbaString","toFixed","getRgbaStringFromArray","Math","floor","getRgbaComponentsNormalized","argb","getRgbComponentsNormalized","getRgbaComponents","getArgbNumber","max","min","v","mergeColors","c1","c2","r1","round","mergeMultiColors","c","t","n","length","i","g1","b1","a1","mergeMultiColorsEqual","mergeColorAlpha","alpha","rad","deg","PI","getTimingBezier","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","it","minT","maxT","getTimingFunction","str","s","indexOf","parts","substr","split","warn","parseFloat","isNaN","Utils","isFunction","isNumber","isInteger","isBoolean","isString","clone","isObjectLiteral","Array","isArray","getDeepClone","cloneObjShallow","obj","keys","Object","merge","obj1","obj2","isObject","type","isPlainObject","constructor","getArrayIndex","index","arr","getModuloIndex","len","ceil","equalValues","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","this","setToArray","result","forEach","push","iteratorToArray","iterator","iteratorResult","next","done","isUcChar","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","Utils$1","isNode","isPS4","isZiggo","Base","defaultSetter","name","patchObject","settings","names","patchObjectProperty","console","error","setter","setSetting","charAt","__local","local","func","SpacingCalculator","getSpacing","mode","numberOfItems","remainingSpace","spacePerGap","spacingBefore","spacingBetween","itemGaps","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_createClass","get","_lines","init","_getTotalCrossAxisSize","align","crossAxisSize","_this$_getSpacing","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","recursiveResizeOccured","setItemPositions","total","FlexUtils","getParentAxisSizeWithPadding","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","getRelAxisSize","funcW","_allowRelAxisSizeFunction","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","isZeroAxisSize","getAxisLayoutPos","x","y","setAxisLayoutPos","pos","setAxisLayoutSize","size","getAxisMinSize","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","flexItem","shrink","resizeAxis","_horizontal","resizeMainAxis","resizeCrossAxis","getPaddingOffset","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","getMarginOffset","marginLeft","marginTop","getTotalMargin","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","getShrunkSize","SizeGrower","_grownSize","grow","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","maxSize","_getMainAxisMaxSizeSetting","maxGrow","getGrownSize","ItemPositioner","lineLayout","position","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","performLayout","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","shrinker","_calcCrossAxisMaxLayoutSize","getMainAxisMinSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","_getCrossAxisMinSize","layoutLines","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","resizingMainAxis","isMainAxisFitToContents","crossAxisMinSize","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","finalize","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","_reversed","_recalc","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","layoutTree","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","mainAxisContentSize","totalCrossAxisSize","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","ctr","set","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_changedDimensions","changedDimensions","_changedContents","changedContents","f","direction","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","patch","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","undefined","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","_getCrossAxisLayoutSize","_getMainAxisPadding","_getMainAxisMargin","FlexTarget","_target","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","layoutFlexTree","isChanged","_enableFlex","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","setParent","from","to","isFlexContainer","_changedChildren","setVisible","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","arguments","changeHeight","_updateRecalc","forceLayout","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","combinedRecalc","shrunk","setOriginalXWithoutUpdatingLayout","setOriginalYWithoutUpdatingLayout","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","_hasAlpha","addTexture","has","add","removeTexture","delete","incActiveTextureCount","becomesUsed","decActiveTextureCount","becomesUnused","forEachEnabledElement","cb","_this","texture","_newArrowCheck","elements","bind","hasEnabledElements","forEachActiveElement","_this2","_this3","element","active","getRenderWidth","getRenderHeight","allowCleanup","isUsed","load","cancel","isLoading","isLoaded","isError","reload","free","_this4","forceSync","isResultTexture","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","hasAlpha","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","_this5","forceRenderUpdate","update","frameCounter","forceUpdateRenderCoords","_updateTextureCoords","clearNativeTexture","replaceNativeTexture","newNativeTexture","_this6","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","_updateDimensions","e","_this7","onTextureSourceLoadError","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","setHasRenderUpdates","_setRecalc","_getTextureSource","textureManager","updateResultTexture","hasResultTexture","resultTextureInUse","resultTexture","getResultTexture","nativeTexture","core","mustRenderToTexture","_hasRenderUpdates","deactivate","release","releaseRenderTexture","reuseTextureAsRenderTexture","hasRenderTexture","getRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","isRTL","getOption","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","hasFlexLayout","_disableFuncX","_updateLocalTranslateDelta","_triggerRecalcTranslate","_disableFuncY","disableFuncW","disableFuncH","_updateLocalTransform","scaleX","_updateLocalTranslate","prev","_updateLocalAlpha","_updateEnabledFlag","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","pivotXMul","px","pivotYMul","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","addChildAt","child","splice","setChildAt","removeChildAt","removeChildren","syncChildren","removed","added","order","moveChild","fromIndex","toIndex","isEstimate","setTextureCoords","ulx","uly","brx","bry","setDisplayedTextureSource","textureSource","setAsRoot","root","coordsWidth","coordsHeight","isAncestorOf","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","prevZContext","_getZIndexedDescs","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","prevShader","shader","defaultShader","_setShaderOwnerChildrenRecursive","_hasRenderContext","texturizer","_enableRenderToTexture","_disableRenderToTexture","_renderAdvanced","isWhite","hasSimpleTexCoords","_stashTexCoords","_stashedTexCoords","_unstashTexCoords","_stashColors","_stashedColors","_unstashColors","isVisible","_applyRelativeDimFuncs","pw","calculatedX","__parent","ta","td","tb","tc","pr","updateTreeOrder","useRenderToTexture","sx","sy","ex","ey","bboxW","bboxH","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","renderOffscreen","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","activeShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","renderToTextureCount","cleared","ignore","cache","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","renderTextureReused","setTexturizer","colorize","ptr","m","j","sort","mergeResult","getCornerPoints","getRenderTextureCoords","relX","relY","getAbsoluteCoords","collectAtCoord","inBound","inScissor","tx","ty","sc","_ensureLayout","EventEmitter","_hasEventListeners","on","listener","_eventFunction","_eventListeners","combiner","once","wrapper","arg1","arg2","arg3","off","__originalFunc","current","listeners","_step","_iterator","_createForOfIteratorHelper","l","map","removeListener","emit","listenerCount","removeAllListeners","object","_i","_arr","_toConsumableArray","addAsMixin","cls","Shader","coreContext","_initialized","_elements","addElement","removeElement","cleanup","redraw","useDefault","addEmpty","create","renderer","createShader","isShader","isValidShaderType","getWebGL","getC2d","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","clipping","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","incActiveCount","decActiveCount","_checkForNewerReusableTextureSource","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","_getLookupId","_getSourceLoader","_getIsValid","_updateSource","addUpdateSourceTexture","getTextureSource","getReusableTextureSource","newSource","oldSource","loadError","_ref","_ref$type","_ref$w","_ref$h","_ref$clipX","clipX","_ref$clipY","clipY","_clearResizeMode","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","scaleY","scale","desiredSize","choppedOffPixels","enableClipping","disableClipping","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","getNonDefaults","nonDefaults","precision","isAutosizeTexture","isTexture","ImageTexture","_Texture","_inherits","_super","_createSuper","call","_src","src","fc","charCodeAt","platform","loadSrcTexture","_get","_getPrototypeOf","getFontSetting","fontFace","fontStyle","fontSize","defaultFontFace","ff","ffs","curFf","isZeroWidthSpace","space","isSpace","measureText","context","word","reduce","acc","char","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","getPrecision","setFontProperties","font","fontWeight","textBaseline","_load","document","fonts","fontSetting","check","text","catch","then","draw","loadPromise","drawText","_draw","_calculateRenderInfo","offsetY","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","linePositionX","linePositionY","textAlign","globalAlpha","fillRect","translate","drawLines","verticalAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","spaceRegex","allLines","realNewlines","resultLines","spaceLeft","words","spaces","match","wordWidthWithSpace","concat","TextTextureRendererAdvanced","baseFont","fontBaselineRatio","wordBreak","wrapWidth","tokenize","parse","measure","resetFontStyle","lineNo","lineNum","baselineOffsetInPx","vaOffset","_iterator2","_step2","_step3","_iterator3","firstWord","lastWord","shift","pop","_step4","_iterator4","apply","lastLineText","filter","_suffix","_iterator5","_step5","spl","alignLine","_step6","_iterator6","_step7","_iterator7","canvasWidth","canvasHeight","hlColor","hlOffset","defaultColor","currentColor","_step8","_iterator8","_step9","_iterator9","letters","_step10","_iterator10","tokenizeString","tokenRegex","delimeters","final","tokens","italic","bold","colorStack","colorRegexp","test","matched","exec","o","applyFontStyle","parsed","_step11","_iterator11","_step12","_iterator12","_getBreakIndex","breakIndex","_step13","totalWidth","_iterator13","_objectSpread","_breakIndex","_this$_getBreakIndex","initialX","_step14","prevWidth","prevX","_iterator14","TextTexture","_text","_fontStyle","_fontBaselineRatio","_fontSize","_fontWeight","_fontFace","_wordWrap","_wordWrapWidth","_wordBreak","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_advancedRenderer","_letterSpacing","_textIndent","_set","toString","advancedRenderer","args","cloneArgs","gl","getDrawingCanvas","texParams","sharpCfg","sharpen","getRenderPrecision","TEXTURE_MAG_FILTER","NEAREST","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","Transition","_EventEmitter","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","start","targetValue","isAttached","reset","delay","_updateDrawValue","finish","stop","removeActive","pause","play","addActive","getDrawValue","attached","isRunning","progress","dt","delayLeft","duration","invokeListeners","updateTargetValue","timingFunctionImpl","_timingFunctionImpl","startValue","skipDelay","isTransition","ObjectList","_refs","addAt","currentIndex","createItem","setAt","ref","onAdd","replaceByRef","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","getAt","remove","removeAt","onRemove","clear","onSync","isItem","_getRefs","clearRef","setRef","_setByObject","_setByArray","refs","crefs","cref","idx","_equalsArray","array","same","marker","newItems","_setItems","prevItems","ElementChildList","_ObjectList","_connectParent","prevChildList","childList","_setParent","gc","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","_throwError","removeTag","_addTag","_updateAttachedFlag","isRoot","_unsetTagsParent","_setTagsParent","_updateCollision","getDepth","depth","getAncestor","getAncestors","getAncestorAtDepth","levels","getSharedAncestor","o1","o2","l1","l2","_isAttached","_isEnabled","_isActive","withinBoundsMargin","newAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","_setActiveFlag","_unsetActiveFlag","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","_onInactive","_onResize","_getRenderWidth","_getRenderHeight","textureIsLoaded","loadTexture","_enableTextureError","prevTexture","prevSource","displayedTextureSource","sourceChanged","unknownSize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","ph","tempty","tag","tags","tagSet","_loop","parentTreeTags","comp","Map","_loop2","_getByTag","getTags","setTags","removes","adds","hasTag","currentTags","addTag","list","_tag","mtag","values","res","level","resn","stag","sel","path","select","selectors","_select","pointIdx","isRef","arrowIdx","_selectChilds","subPath","_next","getLocationString","localTags","getSettings","getPrettyString","childArray","missing","pivotX","pivotY","pivot","mountX","mountY","mount","rotation","colorUl","colorUr","colorBl","colorBr","forceZIndexContext","clipbox","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","boundsMargin","offsetX","_collision","collision","_allowChildrenAccess","hasChildren","rectangleTexture","enableTextTexture","onUpdate","onAfterCalcs","onAfterUpdate","forceUpdate","rtt","getTexture","paths","firstCharCode","message","animation","animations","createAnimation","transition","_getTransition","_setTransition","setSmooth","fastForward","_transitions","isTransitionSettings","transitions","defaultTransitionSettings","createSettings","_removeTransition","getSmooth","toJSON","tree","collectChildren","getProperties","colorKeys","JSON","stringify","k","childStr","isEmpty","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","isColorProperty","toLowerCase","properties","props","StateMachine","setupStateMachine","fire","event","_hasMethod","_len","_key","_getState","_state","__path","_inState","statePath","currentStatePath","state","_sm","getStateByPath","currentState","__level","_getStateAtLevel","_hasMember","member","_setState","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","_stateIndex","__index","_initStateMachine","_routedType","_getMostSpecificHandledMember","memberNames","cur","memberName","StateMachineType","getStateMemberAlias","targetConstructor","router","setPrototypeOf","stateMachineType","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","StateMachineRouter","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","isValid","curState","getPrototypeOf","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","_this8","_this9","stateMap","members","_this10","_getStateMemberNames","_this11","_getStateMemberNamesForType","_this12","_isStateLocalMember","_createStateMap","_addState","parentState","_this13","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","__supportsSpread","Component","_Element","tagRoot","_assertThisInitialized","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","application","updateFocusPath","_refocus","__bindProperty","propObj","targetObj","targetProp","prop","propDependencies","propName","__func","__obj","__prop","_step$value","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","_focus","newTarget","prevTarget","_unfocus","_focusChange","_getFocused","_setFocusSettings","_handleFocusSettings","hasFinalFocus","_focusPath","hasFocus","seekAncestorByType","cparent","getSharedAncestorComponent","ancestor","isComponent","signal","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","fireAncestors","startsWith","_len2","_key2","_doFireAncestors","bindProp","__propertyBinding","hasName","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","collectSubComponents","subs","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","getElement","getElementCore","getTextureWidth","getTextureHeight","WebGLCoreQuadList","_CoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","getAttribsDataByteOffset","getQuadContents","CoreQuadOperation","shaderOwner","scissor","quads","getElementWidth","renderWidth","getElementHeight","renderHeight","WebGLCoreQuadOperation","_CoreQuadOperation","extraAttribsDataByteOffset","getNormalRenderTextureCoords","coords","getProjection","renderExec","_projection","projection","CoreRenderExecutor","destroy","_reset","_bindRenderTexture","_setScissor","_clearRenderTexture","execute","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_CoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","getScissor","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","compile","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getUniformLocation","location","getAttribLocation","_valueEquals","_valueClone","setUniformValue","glFunction","clonedValue","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","WebGLShader","_Shader","shaderPrograms","glProgram","initialize","_uniform","_attrib","_setUniform","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getVertexAttribPointerOffset","setExtraAttribsInBuffer","_getProjection","getFlipY","DefaultShader","_WebGLShader","vertexAttribPointer","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","DefaultShader$1","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","copyRenderTexture","WebGLRenderer","_Renderer","_compressedTextureExtensions","astc","getExtension","etc1","s3tc","pvrtc","getCompressedTextureExtensions","shaderProgram","createCoreRenderExecutor","createCoreRenderState","createRenderTexture","createTexture","texImage2D","RGBA","texParameteri","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","freeRenderTexture","deleteFramebuffer","deleteTexture","_getBytesPerPixel","fmt","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","RGB","UNSIGNED_BYTE_5_6_5","compressed","premultiplyAlpha","flipBlueRed","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","uploadCompressedGlTexture","uploadGlTexture","bytesPerPixel","mca","cx","cy","extra","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","setRenderContext","setSimpleTc","setWhite","getRenderContext","getSimpleTc","getWhite","C2dCoreQuadOperation","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","globalCompositeOperation","beginPath","rect","closePath","fill","clearRect","_restoreContext","restore","save","_equalScissorAreas","clip","C2dShader","_C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","tintTexture","getTintTexture","drawImage","gradient","transparency","createLinearGradient","addColorStop","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","_addMemoryUsage","delta","addMemoryUsage","_delete","_hasCache","_getCache","prevMemUsage","memoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","SparkShader","elementPostion","paint","SparkRenderer","_WebGLRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","_ref2","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_loopHandler","_idleLoopCounter","_idleLoopDelay","_imageWorker","_registerVisibilityChangeHandler","clearInterval","_removeKeyHandler","_removeClickHandler","_removeHoverHandler","_removeScrollWheelHandler","_removeVisibilityChangeHandler","startLoop","loop","stopLoop","switchLoop","setInterval","updateFrame","idleFrame","requestAnimationFrame","lp","renderFrame","view","pvr","mipmaps","DataView","compressedTexImage2D","glInternalFormat","pixelWidth","pixelHeight","HTMLImageElement","HTMLVideoElement","ImageBitmap","HTMLCanvasElement","getImageData","handleKtxLoad","arraybuffer","getUint32","littleEndian","glType","glTypeSize","glFormat","glBaseInternalFormat","pixelDepth","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","bytesOfKeyValueData","kvps","includes","imageSize","handlePvrLoad","arrayBuffer","header","Int32Array","dataOffset","pvrtcData","Uint8Array","byteOffset","cancelCb","isPng","isKtx","isPvr","request","addEventListener","Image","crossOrigin","removeAttribute","createWebGLContext","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","createCanvasContext","getHrTime","performance","now","nextFrame","changes","registerKeydownHandler","keyhandler","_keydownListener","registerKeyupHandler","_keyupListener","removeEventListener","registerClickHandler","clickHandler","_clickListener","registerHoverHandler","hoverHandler","_hoverListener","registerScrollWheelHandler","_scrollWheelListener","_visibilityChangeHandler","visibilityState","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","_getDefaultFlag","cap","DITHER","setFlag","setBuffer","change","setFramebuffer","setRenderbuffer","setProgram","program","va","equal","setActiveTexture","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","setPixelStorei","pname","param","_getPixelStoreiIndex","migrate","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","_initStateManager","switchState","$useProgram","$bindBuffer","fb","$bindFramebuffer","$bindRenderbuffer","$enable","$disable","$viewport","$scissor","$disableVertexAttribArray","$enableVertexAttribArray","$vertexAttribPointer","normalized","stride","$activeTexture","$bindTexture","$pixelStorei","$stencilFuncSeparate","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","$stencilMaskSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","$stencilOpSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","$blendColor","red","green","blue","_blendColor","$blendEquation","_blendEquation","$blendEquationSeparate","modeRGB","modeAlpha","_blendEquationSeparate","$blendFunc","sfactor","dfactor","_blendFunc","$blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","$clearColor","_clearColor","$clearDepth","_clearDepth","$clearStencil","_clearStencil","$colorMask","_colorMask","$cullFace","_cullFace","$depthFunc","_depthFunc","$depthMask","flag","_depthMask","$depthRange","zNear","zFar","_depthRange","$frontFace","_frontFace","$lineWidth","_lineWidth","$polygonOffset","factor","units","_polygonOffset","$sampleCoverage","invert","_sampleCoverage","$stencilFunc","_stencilFunc","$stencilMask","_stencilMask","$stencilOp","_stencilOp","$vertexAttrib1f","indx","_vertexAttrib1f","$vertexAttrib1fv","_vertexAttrib1fv","$vertexAttrib2f","_vertexAttrib2f","$vertexAttrib2fv","_vertexAttrib2fv","$vertexAttrib3f","z","_vertexAttrib3f","$vertexAttrib3fv","_vertexAttrib3fv","$vertexAttrib4f","_vertexAttrib4f","$vertexAttrib4fv","_vertexAttrib4fv","__proto__","method","WebGLStateManager$1","TextureManager","_uploadedTextureSources","textureSourceHashmap","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","_updateVramUsage","sign","usage","Stage","isWebglSupported","addVramUsage","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","_freeManagedTextureSource","managed","TextureThrottler","_remove","_sources","_data","processSome","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","zSort","debugFrame","_fillRenderState","_readPixels","_performRender","log","pixels","readPixels","prec","_createRenderTexture","freeUnusedRenderTextures","maxAge","limit","TransitionSettings","_timingFunction","TransitionManager","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","last","pe","idp","sm","pi","ni","nc","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","getValue","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","csy","cex","cey","csx","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getResetValue","getAnimatedElements","sv","hasColorProperty","selector","resetValue","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","aas","action","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","replay","STOPPED","stopNow","isPaused","isPlaying","isStopping","isFinished","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","stopTimingFunctionImpl","AnimationManager","RectangleTexture","_setOptions","_lastGcFrame","_usedVramAlpha","_usedVramNonAlpha","platformType","_mode","ratio","style","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","isWebgl","isC2d","opt","setApplication","app","resume","_updatingFrame","_calculateDt","fixedDt","drawFrame","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","usedMemory","addServiceProvider","serviceprovider","getChildrenByPosition","Application","_Component","_temp_options","booting","__updateFocusCounter","__keypressTimers","__hoveredChild","updateFocusSettings","__keymap","_receiveKeydown","_receiveKeyup","_receiveClick","_receiveHover","_recieveScrollWheel","__options","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","focusedComponent","focusSettings","defaultSetFocusSettings","defaultHandleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","newParts","focusTopDownEvent","events","focusPath","_path$i","focusBottomUpEvent","_path$i2","keyCode","hasTimer","longpress","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","clientX","clientY","fireTopDownScrollWheelHandler","fireBottomUpScrollWheelHandler","affected","_findChildren","_captureScroll","_getTargetChild","_handleScroll","fireBottomUpClickHandler","_child$core$_worldCon","localCoords","_handleClick","fireBottomUpHoverHandler","hoveredBranch","newHoveredBranch","elem","_handleUnhover","diffBranch","_handleHover","lastElement","hoverableChildren","_withinClickableRange","bucket","affectedChildren","cursorX","cursorY","candidates","cw","finalW","ch","finalH","_testCollision","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","factory","_ref$lookupId","Tools","getCanvasTexture","canvasFactory","content","getRoundRect","radius","strokeWidth","strokeColor","fillColor","createRoundRect","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","getShadowRect","blur","margin","createShadowRect","getSvgTexture","url","createSvg","img","ObjMerger","isMf","__mf","mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","ObjectListProxy","ObjectListWrapper","_ObjectListProxy","_wrapper","NoiseTexture","noise","random","REPEAT","HtmlTexture","_htmlElement","_scale","innerHTML","htmlElement","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","opacity","pointerEvents","display","top","overflow","body","StaticTexture","ListComponent","_thisSuper","_reloadVisibleElements","_visibleItems","_index","_started","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","ListItems","_scrollTransition","setIndex","immediate","closest","nElements","realIndex","diff","viewportSize","scrollDelta","getAxisPosition","ps","wasVisible","invisibleItem","getWrapper","setPrevious","setNext","_ObjectListWrapper","_super2","checkStarted","ri","LinearBlurShader","_DefaultShader","_direction","_kernelRadius","uniform1i","BoxBlurShader","BlurShader","_amount","FastBlurComponent","_paddingX","_paddingY","_updateBlurSize","Wrap","WebGLFastBlurComponent","C2dFastBlurComponent","_Component2","_textwrap","paddingX","paddingY","kernelRadius","_amountToKernelRadius","Textwrap","C2dBlurShader","Content","getSpline","_multiSpline","_Component3","_super3","_layers","_output","_buildLayers","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_super4","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomComponent","BloomBase","BloomBaseShader","SmoothScaleComponent","_smoothScale","_iterations","its","_setIterations","scalers","first","useScalers","ContentWrap","Scale","contentWrap","BorderComponent","_borderTop","_borderRight","_borderBottom","_borderLeft","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","Borders","Top","Right","Bottom","Left","WebGLGrayscaleShader","_WebGLDefaultShader","C2dGrayscaleShader","WebGLDefaultShader","_C2dDefaultShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","getWebGLImpl","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","num","_sc","renderPrecision","renderContext","FadeOutShader","_fade","fade","VignetteShader","_magnitude","_intensity","_pivot","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","_radiusY","innerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","PerspectiveShader","MagnifierShader","_magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","bool","spinSync","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","components","tools","lng"],"mappings":"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"}