{"version":3,"file":"lightning.es5.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRendererUtils.mjs","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/textures/StaticTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/components/BorderComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"[Lightning] Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        if (item._reversed && item._recalc == 0) {\n            item._reversed = false;\n        }\n        if (!item._reversed) {\n            const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n            const reversedPos = this._layout.mainAxisSize - endPos;\n            item.flexItem._setMainAxisLayoutPos(reversedPos);\n            if (item._recalc != 0) {\n                item._reversed = true;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n        this._reversed = false;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n\n        /**\n         * Track whether or not there is an alpha channel in this source\n         * @type {boolean}\n         * @private\n         */\n         this._hasAlpha = false;\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this._hasAlpha = (options ? (options.hasAlpha || false) : false);\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('[Lightning] texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                w.px = pw.px + this._localPx * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += this._localPx * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    r.px = pr.px + this._localPx * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += this._localPx * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Tell the renderer we're rendering a renderToTexture element in this frame\n                    this.ctx.renderToTextureCount++;\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    once(name, listener) {\n        const wrapper = (arg1, arg2, arg3) => {\n            listener(arg1, arg2, arg3);\n            this.off(name, wrapper);\n        }\n        wrapper.__originalFunc = listener;\n        this.on(name, wrapper);\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    for (const l of listeners) {\n                        if (l === listener || l.__originalFunc == listener) {\n                            return true;\n                        }\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\n           we need to create a copy to loop over it */\n        for (const listener of [...listeners]) {\n            listener(arg1, arg2, arg3);\n        }\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.once = EventEmitter.prototype.once;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"[Lightning] Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"[Lightning] Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n\n                // free up unused TextTextures immediately as they are not reused anyway\n                if(this['text'] && !oldSource.isUsed()) {\n                    this.manager.freeTextureSource(oldSource);\n                }\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/**\n * Returns CSS font setting string for use in canvas context.\n *\n * @private\n * @param {string | string[]} fontFace\n * @param {string} fontStyle\n * @param {number} fontSize\n * @param {number} precision\n * @param {string} defaultFontFace\n * @returns {string}\n */\nexport function getFontSetting(fontFace, fontStyle, fontSize, precision, defaultFontFace) {\n    let ff = fontFace;\n\n    if (!Array.isArray(ff)) {\n        ff = [ff];\n    }\n\n    let ffs = [];\n    for (let i = 0, n = ff.length; i < n; i++) {\n        let curFf = ff[i];\n        // Replace the default font face `null` with the actual default font face set\n        // on the stage.\n        if (curFf === null) {\n            curFf = defaultFontFace;\n        }\n        if (curFf === \"serif\" || curFf === \"sans-serif\") {\n            ffs.push(curFf);\n        } else {\n            ffs.push(`\"${curFf}\"`);\n        }\n    }\n\n    return `${fontStyle} ${fontSize * precision}px ${ffs.join(\",\")}`\n}\n\n/**\n * Returns true if the given character is a zero-width space.\n *\n * @param {string} space\n * @returns {boolean}\n */\nexport function isZeroWidthSpace(space) {\n    return space === '' || space === '\\u200B';\n}\n\n/**\n * Returns true if the given character is a zero-width space or a regular space.\n *\n * @param {string} space\n * @returns {boolean}\n */\nexport function isSpace(space) {\n    return isZeroWidthSpace(space) || space === ' ';\n}\n\n/**\n * Converts a string into an array of tokens and the words between them.\n *\n * @param {RegExp} tokenRegex\n * @param {string} text\n * @returns {string[]}\n */\nexport function tokenizeString(tokenRegex, text) {\n    const delimeters = text.match(tokenRegex) || [];\n    const words = text.split(tokenRegex) || [];\n\n    let final = [];\n    for (let i = 0; i < words.length; i++) {\n        final.push(words[i], delimeters[i])\n    }\n    final.pop()\n    return final.filter((word) => word != '');\n}\n\n/**\n * Measure the width of a string accounting for letter spacing.\n *\n * @param {CanvasRenderingContext2D} context\n * @param {string} word\n * @param {number} space\n * @returns\n */\nexport function measureText(context, word, space = 0) {\n    if (!space) {\n        return context.measureText(word).width;\n    }\n    return word.split('').reduce((acc, char) => {\n        // Zero-width spaces should not include letter spacing.\n        // And since we know the width of a zero-width space is 0, we can skip\n        // measuring it.\n        if (isZeroWidthSpace(char)) {\n            return acc;\n        }\n        return acc + context.measureText(char).width + space;\n    }, 0);\n}\n\n/**\n * Applies newlines to a string to have it optimally fit into the horizontal\n * bounds set by the Text object's wordWrapWidth property.\n *\n * @param {CanvasRenderingContext2D} context\n * @param {string} text\n * @param {number} wordWrapWidth\n * @param {number} letterSpacing\n * @param {number} indent\n * @returns\n */\nexport function wrapText(context, text, wordWrapWidth, letterSpacing, indent) {\n    // Greedy wrapping algorithm that will wrap words as the line grows longer.\n    // than its horizontal bounds.\n    const spaceRegex = / |\\u200B/g;\n    let lines = text.split(/\\r?\\n/g);\n    let allLines = [];\n    let realNewlines = [];\n    for (let i = 0; i < lines.length; i++) {\n        let resultLines = [];\n        let result = '';\n        let spaceLeft = wordWrapWidth - indent;\n        let words = lines[i].split(spaceRegex);\n        let spaces = lines[i].match(spaceRegex) || [];\n        for (let j = 0; j < words.length; j++) {\n            const space = spaces[j - 1] || '';\n            const word = words[j];\n            const wordWidth = measureText(context, word, letterSpacing);\n            const wordWidthWithSpace = wordWidth + measureText(context, space, letterSpacing);\n            if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                // Skip printing the newline if it's the first word of the line that is.\n                // greater than the word wrap width.\n                if (j > 0) {\n                    resultLines.push(result);\n                    result = '';\n                }\n                result += word;\n                spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n            }\n            else {\n                spaceLeft -= wordWidthWithSpace;\n                result += space + word;\n            }\n        }\n\n        resultLines.push(result);\n        result = '';\n\n        allLines = allLines.concat(resultLines);\n\n        if (i < lines.length - 1) {\n            realNewlines.push(allLines.length);\n        }\n    }\n\n    return {l: allLines, n: realNewlines};\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, measureText, wrapText } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace'),\n        );\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace')\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || this._stage.getOption('w');\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth = 10;\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * See {@link wrapText}\n     *\n     * @param {string} text\n     * @param {number} wordWrapWidth\n     * @param {number} letterSpacing\n     * @param {number} indent\n     * @returns\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        return wrapText(this._context, text, wordWrapWidth, letterSpacing, indent);\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, isSpace, measureText, tokenizeString } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRendererAdvanced {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        const font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace')\n        );\n        this._context.font = font;\n        this._context.textBaseline = this._settings.textBaseline;\n        return font;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace')\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\n        const w = this._settings.w != 0 ? this._settings.w * precision : this._stage.getOption('w');\n        // const h = this._settings.h * precision;\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        renderInfo.baseFont = this.setFontProperties();\n\n        renderInfo.w = w;\n        renderInfo.width = w;\n        renderInfo.text = this._settings.text;\n        renderInfo.precision = precision;\n        renderInfo.fontSize = fontSize;\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textAlign = this._settings.textAlign;\n        renderInfo.textColor = this._settings.textColor;\n        renderInfo.verticalAlign = this._settings.verticalAlign;\n        renderInfo.highlight = this._settings.highlight;\n        renderInfo.highlightColor = this._settings.highlightColor;\n        renderInfo.highlightHeight = this._settings.highlightHeight;\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\n        renderInfo.highlightOffset = this._settings.highlightOffset;\n        renderInfo.paddingLeft = this._settings.paddingLeft;\n        renderInfo.paddingRight = this._settings.paddingRight;\n        renderInfo.maxLines = this._settings.maxLines;\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\n        renderInfo.textOverflow = this._settings.textOverflow;\n        renderInfo.wordWrap = this._settings.wordWrap;\n        renderInfo.wordWrapWidth = wordWrapWidth;\n        renderInfo.shadow = this._settings.shadow;\n        renderInfo.shadowColor = this._settings.shadowColor;\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\n        renderInfo.shadowBlur = this._settings.shadowBlur;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEy = cutEy;\n        renderInfo.textIndent = this._settings.textIndent * precision;\n        renderInfo.wordBreak = this._settings.wordBreak;\n\n        let text = renderInfo.text;\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\n\n        // Text overflow\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\n        }\n\n        text = this.tokenize(text);\n        text = this.parse(text);\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\n\n        if (renderInfo.textIndent) {\n            text = this.indent(text, renderInfo.textIndent);\n        }\n\n        if (renderInfo.wordBreak) {\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\n            this.resetFontStyle()\n        }\n\n        // Calculate detailed drawing information\n        let x = paddingLeft;\n        let lineNo = 0;\n\n        for (const t of text) {\n            // Wrap text\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\n                x = paddingLeft;\n                lineNo += 1;\n            }\n            t.lineNo = lineNo;\n\n            if (t.text == '\\n') {\n                continue;\n            }\n\n            t.x = x;\n            x += t.width;\n        }\n        renderInfo.lineNum = lineNo + 1;\n\n        if (this._settings.h) {\n            renderInfo.h = this._settings.h;\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\n        } else {\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\n        }\n\n        // This calculates the baseline offset in pixels from the font size.\n        // To retrieve this ratio, you would do this calculation:\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\n        //\n        // This give you the ratio for the baseline, which is then used to figure out\n        // where the baseline is relative to the bottom of the text bounding box.\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\n\n        // Vertical align\n        let vaOffset = 0;\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\n            vaOffset = -baselineOffsetInPx;\n        } else if (renderInfo.verticalAlign == 'middle') {\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\n        } else if (this._settings.verticalAlign == 'bottom') {\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\n        }\n\n        // Calculate lines information\n        renderInfo.lines = []\n        for (let i = 0; i < renderInfo.lineNum; i++) {\n            renderInfo.lines[i] = {\n                width: 0,\n                x: 0,\n                y: renderInfo.lineHeight * i + vaOffset,\n                text: [],\n            }\n        }\n\n        for (let t of text) {\n            renderInfo.lines[t.lineNo].text.push(t);\n        }\n\n        // Filter out white spaces at beginning and end of each line\n        for (const l of renderInfo.lines) {\n            if (l.text.length == 0) {\n                continue;\n            }\n\n            const firstWord = l.text[0].text;\n            const lastWord = l.text[l.text.length - 1].text;\n\n            if (firstWord == '\\n') {\n                l.text.shift();\n            }\n            if (isSpace(lastWord) || lastWord == '\\n') {\n                l.text.pop();\n            }\n        }\n\n\n        // Calculate line width\n        for (let l of renderInfo.lines) {\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\n        }\n\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\n        renderInfo.w = renderInfo.width;\n\n        // Apply maxLinesSuffix\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\n            const index = renderInfo.maxLines - 1;\n            let lastLineText = text.filter((t) => t.lineNo == index)\n            let suffix = renderInfo.maxLinesSuffix;\n            suffix = this.tokenize(suffix);\n            suffix = this.parse(suffix);\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont);\n            for (const s of suffix) {\n                s.lineNo = index;\n                s.x = 0;\n                lastLineText.push(s)\n            }\n\n            const spl = suffix.length + 1\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n            while (_w > renderInfo.width || isSpace(lastLineText[lastLineText.length - spl].text)) {\n                lastLineText.splice(lastLineText.length - spl, 1);\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n                if (lastLineText.length < spl) {\n                    break;\n                }\n            }\n            this.alignLine(lastLineText, lastLineText[0].x)\n\n            renderInfo.lines[index].text = lastLineText;\n            renderInfo.lines[index].width = _w;\n        }\n\n        // Horizontal alignment offset\n        if (renderInfo.textAlign == 'center') {\n            for (let l of renderInfo.lines) {\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\n            }\n        } else if (renderInfo.textAlign == 'right') {\n            for (let l of renderInfo.lines) {\n                l.x = renderInfo.width - l.width - paddingLeft;\n            }\n        }\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n        const paddingLeft = renderInfo.paddingLeft * precision;\n\n        // Set canvas dimensions\n        let canvasWidth = renderInfo.w || renderInfo.width;\n        if (renderInfo.cutSx || renderInfo.cutEx) {\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\n        }\n\n        let canvasHeight = renderInfo.h;\n        if (renderInfo.cutSy || renderInfo.cutEy) {\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\n        }\n\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(canvasHeight);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        // Cut\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        // Highlight\n        if (renderInfo.highlight) {\n            const hlColor = renderInfo.highlightColor || 0x00000000;\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum;\n            for (let i = 0; i < lineNum; i++) {\n                const l = renderInfo.lines[i];\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        // Draw text\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\n        let currentColor = defaultColor;\n        this._context.fillStyle = defaultColor;\n        for (const line of renderInfo.lines) {\n            for (const t of line.text) {\n                let lx = 0;\n\n                if (t.text == '\\n') {\n                    continue;\n                }\n\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\n                    continue;\n                }\n\n                if (t.color != currentColor) {\n                    currentColor = t.color;\n                    this._context.fillStyle = currentColor;\n                }\n\n                this._context.font = t.fontStyle;\n\n                // Draw with letter spacing\n                if (t.letters) {\n                    for (let l of t.letters) {\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                        lx += l.width;\n                    }\n                // Standard drawing\n                } else {\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                }\n            }\n        }\n\n        // Reset text shadow\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        // Reset cut translation\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        // Postprocess renderInfo.lines to be compatible with standard version\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\n        if (renderInfo.maxLines) {\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\n        }\n\n\n        this.renderInfo = renderInfo;\n\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n    tokenize(text) {\n        return tokenizeString(/ |\\u200B|\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g, text);\n    }\n\n    parse(tokens) {\n        let italic = 0;\n        let bold = 0;\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\n        let color = 0;\n\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\n\n        return tokens.map((t) => {\n            if (t == '<i>') {\n                italic += 1;\n                t = '';\n            } else if (t == '</i>' && italic > 0) {\n                italic -= 1;\n                t = '';\n            } else if (t == '<b>') {\n                bold += 1;\n                t = '';\n            } else if (t == '</b>' && bold > 0) {\n                bold -= 1;\n                t = '';\n            } else if (t == '</color>') {\n                if (colorStack.length > 1) {\n                    color -= 1;\n                    colorStack.pop();\n                }\n                t = '';\n            } else if (colorRegexp.test(t)) {\n                const matched = colorRegexp.exec(t);\n                colorStack.push(\n                    StageUtils.getRgbaString(parseInt(matched[1]))\n                );\n                color += 1;\n                t = '';\n\n            }\n\n            return {\n                text: t,\n                italic: italic,\n                bold: bold,\n                color: colorStack[color],\n            }\n        })\n        .filter((o) => o.text != '');\n    }\n\n    applyFontStyle(word, baseFont) {\n        let font = baseFont;\n        if (word.bold) {\n            font = 'bold ' + font;\n        }\n        if (word.italic) {\n            font = 'italic ' + font;\n        }\n        this._context.font = font\n        word.fontStyle = font;\n    }\n\n    resetFontStyle(baseFont) {\n        this._context.font = baseFont;\n    }\n\n    measure(parsed, letterSpacing = 0, baseFont) {\n        for (const p of parsed) {\n            this.applyFontStyle(p, baseFont);\n            p.width = this.measureText(p.text, letterSpacing);\n\n            // Letter by letter detail for letter spacing\n            if (letterSpacing > 0) {\n                p.letters = p.text.split('').map((l) => {return {text: l}});\n                for (let l of p.letters) {\n                    l.width = this.measureText(l.text, letterSpacing);\n                }\n            }\n\n        }\n        this.resetFontStyle(baseFont);\n        return parsed;\n    }\n\n    indent(parsed, textIndent) {\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\n        return parsed;\n    }\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\n    }\n\n    _getBreakIndex(word, width) {\n        const wordLen = word.length;\n        const wordWidth = this.measureText(word);\n\n        if (wordWidth <= width) {\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\n        }\n\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > width) {\n            while (breakIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth > width) {\n                    breakIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (breakIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth < width) {\n                    breakIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    breakIndex -=1;\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                    break;\n                }\n            }\n        }\n        return {breakIndex, truncWordWidth};\n\n    }\n\n    wordBreak(word, width, baseFont) {\n        if (!word.text) {\n            return word\n        }\n        this.applyFontStyle(word, baseFont)\n        const parts = [];\n        let text = word.text;\n        if (!word.letters) {\n            while (true) {\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = truncWordWidth;\n\n                if (breakIndex === text.length) {\n                    break;\n                }\n\n                text = text.slice(breakIndex);\n            }\n        } else {\n            let totalWidth = 0;\n            let letters = [];\n            let breakIndex = 0;\n            for (const l of word.letters) {\n                if (totalWidth + l.width >= width) {\n                    parts.push({...word});\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\n                    parts[parts.length - 1].width = totalWidth;\n                    parts[parts.length - 1].letters = letters;\n                    text = text.slice(breakIndex);\n                    totalWidth = 0;\n                    letters = [];\n                    breakIndex = 0;\n\n                } else {\n                    breakIndex += 1;\n                    letters.push(l);\n                    totalWidth += l.width;\n                }\n            }\n\n            if (totalWidth > 0) {\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = totalWidth;\n                parts[parts.length - 1].letters = letters;\n            }\n        }\n\n        return parts;\n    }\n\n    alignLine(parsed, initialX = 0) {\n        let prevWidth = 0;\n        let prevX = initialX;\n        for (const word of parsed) {\n            if (word.text == '\\n') {\n                continue;\n            }\n            word.x = prevX + prevWidth;\n            prevX = word.x;\n            prevWidth = word.width;\n        }\n\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        if (this.advancedRenderer) {\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\n        } else {\n            return new TextTextureRenderer(stage, canvas, settings);\n        }\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontBaselineRatio() {\n        return this._fontBaselineRatio;\n    }\n    \n    set fontBaselineRatio(v) {\n        if (this._fontBaselineRatio !== v) {\n            this._fontBaselineRatio = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get wordBreak() {\n        return this._wordBreak;\n    }\n\n    set wordBreak(v) {\n        if (this._wordBreak !== v) {\n            this._wordBreak = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    get advancedRenderer() {\n        return this._advancedRenderer;\n    }\n\n    set advancedRenderer(v) {\n        if (this._advancedRenderer !== v) {\n            this._advancedRenderer = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    set textIndent(v) {\n        if (this._textIndent !== v) {\n            this._textIndent = v;\n            this._changed();\n        }\n    }\n\n    get textIndent() {\n        return this._textIndent;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        const gl = this.stage.gl;\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = (args.advancedRenderer)\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\n              : new TextTextureRenderer(this.stage, canvas, args);\n            \n            const p = renderer.draw();\n\n            const texParams = {};\n\n            const sharpCfg = this.stage.getOption('fontSharp');\n            let sharpen = false;\n\n            // Prevent text blur when text texture is downscaled\n            if (Utils.isBoolean(sharpCfg)) {\n                sharpen = sharpCfg;\n            } else if (Utils.isObject(sharpCfg)) {\n                const precision = this.stage.getRenderPrecision();\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\n            }\n\n            if (gl && sharpen) {\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false,\n                        texParams: texParams,\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false,\n                    texParams: texParams,\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontBaselineRatio = this._fontBaselineRatio;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.wordBreak = this._wordBreak;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.textIndent = this._textIndent;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        obj.advancedRenderer = this._advancedRenderer;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._wordBreak = false;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._textIndent = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\nproto._advancedRenderer = false;\nproto._fontBaselineRatio = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index < this._items.length) {\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if (index < this._items.length) {\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n                }\n\n                const prevItem = this._items[index];\n\n                // Doesn't exist yet: overwrite current.\n                this._items[index] = item;\n\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n\n                this.onSet(item, index, prevItem);\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        if (index >= 0 && index < this._items.length) {\n            const item = this._items[index];\n\n            if (item.ref) {\n                this._refs[item.ref] = undefined;\n            }\n\n            this._items.splice(index, 1);\n\n            this.onRemove(item, index);\n\n            return item;\n        } else {\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\n        }\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n        this._updateCollision();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestors() {\n        const a = [];\n        let p = this;\n        while (p) {\n            a.push(p);\n            p = p.__parent;\n        }\n        return a;\n    }\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"[Lightning] Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource ? this.__core.displayedTextureSource._source : null;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get collision() {\n        return this._collision;\n    }\n\n    set collision(v) {\n        this._collision = v;\n    }\n\n    _updateCollision() {\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\n            /**\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\n             * This narrows down the search for elements with active collision.\n            */\n            this.__parent.collision = 2;\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {};\n        tree[ref] = {};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOffscreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc(this);\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    static bindProp(name, func = null) {\n        return {__propertyBinding: true, __name: name, __func: func};\n    }\n\n    __bindProperty(propObj, targetObj, targetProp) {\n        // 1. find binding position: find object and property name to be bound\n        const obj = targetObj;\n        const prop = targetProp;\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\n\n        // 2. create setters for every given dependency\n        for (let i = 0; i < propDependencies.length; i++) {\n            const propName = propDependencies[i];\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\n\n            if (!this.hasOwnProperty(propName)) {\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\n                Object.defineProperty(this, propName, {\n                    set: (value) => {\n                        this[`__prop_${propName}`] = value;\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\n                            __obj[__prop] = __func(this);\n                        }\n                    },\n                    get: () => this[`__prop_${propName}`]\n                });\n            } else {\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\n            }\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc(ctx) {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template(ctx));\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f: f, a: context.store};\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\n                    if (value.__propertyBinding === true) {\n                        // Allow binding entire objects to text property\n                        store.push(value);\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                    } else {\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\n                    const shaderCursor = `${cursor}[\"shader\"]`\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    this.parsePropertyBindings(value, context, shaderCursor);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    static parsePropertyBindings(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n\n    _construct() {\n    }\n\n    _build() {\n    }\n\n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {};\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while (c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while (ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n \n                    if (Utils.isFunction(fireEvent)) {\n                        return fireEvent(...args);\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n        this.ctx = null;\n        this.renderState = null;\n        this.gl = null;\n\n        delete this.ctx;\n        delete this.renderState;\n        delete this.gl;\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n\n        this.gl = null;\n        delete this.gl;\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n        this.gl = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('[Lightning] Error: Could not initialize shader.');\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('[Lightning] gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n        }\n\n        this._attributeLocations = null;\n        this._currentUniformValues = null;\n        this.fragmentShaderSource = null;\n        this._program = null;\n        this.gl = null;\n        this._uniformLocations = null;\n        this.vertexShaderSource = null;  \n\n        delete this.vertexShaderSource;\n        delete this._program;        \n        delete this._currentUniformValues;\n        delete this.fragmentShaderSource;\n        delete this.gl;\n        delete this._uniformLocations;\n        delete this._attributeLocations;\n\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            \n            gl.bindTexture(gl.TEXTURE_2D, glTexture);\n            gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n        this._compressedTextureExtensions = {\n            astc: stage.gl.getExtension('WEBGL_compressed_texture_astc'),\n            etc1: stage.gl.getExtension('WEBGL_compressed_texture_etc1'),\n            s3tc: stage.gl.getExtension('WEBGL_compressed_texture_s3tc'),\n            pvrtc: stage.gl.getExtension('WEBGL_compressed_texture_pvrtc'),\n        }\n    }\n\n    getCompressedTextureExtensions() {\n        return this._compressedTextureExtensions\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n\n        this.shaderPrograms = null;\n        this._compressedTextureExtensions = null;\n\n        delete this.shaderPrograms;\n        delete this._compressedTextureExtensions;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n\n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = { format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE };\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2 / w, 2 / h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n\n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    _getBytesPerPixel(fmt, type) {\n        const gl = this.stage.gl;\n\n        if (fmt === gl.RGBA) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 4;\n\n                case gl.UNSIGNED_SHORT_4_4_4_4:\n                    return 2;\n\n                case gl.UNSIGNED_SHORT_5_5_5_1:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGBA format');\n            }\n        }\n        else if (fmt === gl.RGB) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 3;\n\n                case gl.UNSIGNED_BYTE_5_6_5:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGB format');\n            }\n        }\n        else {\n            throw new Error('Invalid format specified in call to _getBytesPerPixel()');\n        }\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n        let compressed = false;\n        if (options.renderInfo) {\n            compressed = options.renderInfo.compressed || false\n        }\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        if (compressed) {\n            this.stage.platform.uploadCompressedGlTexture(gl, textureSource, source);\n            return glTexture;\n        }\n         \n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n        \n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n        \n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        // calculate bytes per pixel for vram usage tracking\n        glTexture.bytesPerPixel = this._getBytesPerPixel(texOptions.format, texOptions.type);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                cache.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n\n        this.tintManager = null;\n        delete this.tintManager;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n\n        this._items = null;\n        this._worker = null;\n\n        delete this._items;\n        delete this._worker;        \n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            // the constructing of the basepath fails\n            // if location.hash contains a slash\n            var hasHashPath = /#.*?\\//;\n            if(hasHashPath.test(base)){\n                base = base.replace(/#.*$/,'');\n            }\n\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        // Alternative handler to avoid RAF when idle\n        this._loopHandler = null;\n        this._idleLoopCounter = 0;\n        this._idleLoopDelay = 60;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                this._imageWorker = new ImageWorker();\n            }\n        }\n\n        this._registerVisibilityChangeHandler();\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n\n        clearInterval(this._loopHandler);\n\n        this._removeKeyHandler();\n        this._removeClickHandler();\n        this._removeHoverHandler();\n        this._removeScrollWheelHandler();\n        this._removeVisibilityChangeHandler();\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    switchLoop() {\n        if (this._idleLoopCounter < this._idleLoopDelay) {\n            this._idleLoopCounter++;\n            return;\n        }\n        if (!this.stage.ctx.hasRenderUpdates()) {\n            this.stopLoop();\n            this._loopHandler = setInterval(() => {\n                this.stage.updateFrame();\n                this.stage.idleFrame();\n                if (this.stage.ctx.hasRenderUpdates()) {\n                    clearInterval(this._loopHandler);\n                    this.startLoop();\n                };\n            }, 1000 / 60);\n        } else {\n            this._idleLoopCounter = 0;\n        }\n    }\n\n    loop() {\n        let self = this;\n        let lp = function () {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.updateFrame();\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\n                    self.switchLoop();\n                }\n                self.stage.renderFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadCompressedGlTexture(gl, textureSource, source, options) {\n        const view = !source.pvr ? new DataView(source.mipmaps[0]) : source.mipmaps[0];\n        gl.compressedTexImage2D(\n            gl.TEXTURE_2D,\n            0,\n            source.glInternalFormat,\n            source.pixelWidth,\n            source.pixelHeight,\n            0,\n            view,\n        )\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else if (source instanceof HTMLCanvasElement) {\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n            } else if (source.width > 0 && source.height > 0) {\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\n                // Width/Height check added because of https://github.com/rdkcentral/Lightning/issues/412\n                const ctx = source.getContext('2d');\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    /**\n     * KTX File format specification\n     * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\n     **/\n    handleKtxLoad(cb, src) {\n        var self = this;\n        return function () {\n            var arraybuffer = this.response;\n            var view = new DataView(arraybuffer);\n\n            // identifier, big endian\n            var targetIdentifier = 3632701469\n            if (targetIdentifier !== (view.getUint32(0) + view.getUint32(4) + view.getUint32(8))) {\n                cb('Parsing failed: identifier ktx mismatch:', src)\n            }\n\n            var littleEndian = (view.getUint32(12) === 16909060) ? true : false;\n            var data = {\n                glType: view.getUint32(16, littleEndian),\n                glTypeSize: view.getUint32(20, littleEndian),\n                glFormat: view.getUint32(24, littleEndian),\n                glInternalFormat: view.getUint32(28, littleEndian),\n                glBaseInternalFormat: view.getUint32(32, littleEndian),\n                pixelWidth: view.getUint32(36, littleEndian),\n                pixelHeight: view.getUint32(40, littleEndian),\n                pixelDepth: view.getUint32(44, littleEndian),\n                numberOfArrayElements: view.getUint32(48, littleEndian),\n                numberOfFaces: view.getUint32(52, littleEndian),\n                numberOfMipmapLevels: view.getUint32(56, littleEndian),\n                bytesOfKeyValueData: view.getUint32(60, littleEndian),\n                kvps: [],\n                mipmaps: [],\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            const props = (obj) => {\n                const p = [];\n                for (let v in obj) {\n                    p.push(obj[v]);\n                }\n                return p;\n            }\n\n            const formats = Object.values(self.stage.renderer.getCompressedTextureExtensions())\n                .filter((obj) => obj != null)\n                .map((obj) => props(obj))\n                .reduce((prev, current) => prev.concat(current));\n\n            if (!formats.includes(data.glInternalFormat)) {\n                console.warn(\"[Lightning] Unrecognized texture extension format:\", src, data.glInternalFormat, self.stage.renderer.getCompressedTextureExtensions());\n            }\n\n            var offset = 64\n            // Key Value Pairs of data start at byte offset 64\n            // But the only known kvp is the API version, so skipping parsing.\n            offset += data.bytesOfKeyValueData;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                var imageSize = view.getUint32(offset);\n                offset += 4;\n                data.mipmaps.push(view.buffer.slice(offset, imageSize));\n                offset += imageSize\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    handlePvrLoad(cb, src) {\n        return function () {\n            // pvr header length in 32 bits\n            const pvrHeaderLength = 13;\n            // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\n            const pvrFormatEtc1 = 0x8D64;\n            const pvrWidth = 7;\n            const pvrHeight = 6;\n            const pvrMipmapCount = 11;\n            const pvrMetadata = 12;\n            const arrayBuffer = this.response;\n            const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\n            const dataOffset = header[pvrMetadata] + 52;\n            const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\n\n            var data = {\n                glInternalFormat: pvrFormatEtc1,\n                pixelWidth: header[pvrWidth],\n                pixelHeight: header[pvrHeight],\n                numberOfMipmapLevels: header[pvrMipmapCount],\n                mipmaps: [],\n                pvr: true,\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            let offset = 0\n            let width = data.pixelWidth;\n            let height = data.pixelHeight;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n                const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\n                data.mipmaps.push(view);\n                offset += level;\n                width = width >> 1;\n                height = height >> 1;\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    loadSrcTexture({ src, hasAlpha }, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.toLowerCase().indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        let isKtx = src.indexOf('.ktx') >= 0;\n        let isPvr = src.indexOf('.pvr') >= 0;\n        if (isKtx || isPvr) {\n            let request = new XMLHttpRequest();\n            request.addEventListener(\n                \"load\", isKtx ? this.handleKtxLoad(cb, src) : this.handlePvrLoad(cb, src)\n            );\n            request.open(\"GET\", src);\n            request.responseType = \"arraybuffer\";\n            request.send();\n            cancelCb = function () {\n                request.abort();\n            }\n        } else if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function (err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function ({ imageBitmap, hasAlphaChannel }) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function () {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0, 5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function (err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function () {\n                cb(null, {\n                    source: image,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function () {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts) || canvas.getContext('webgl2', opts);\n\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n    registerClickHandler(clickHandler) {\n        this._clickListener = e => {\n            clickHandler(e);\n        };\n        window.addEventListener('mousedown', this._clickListener);\n    }\n\n    _removeClickHandler() {\n        if (this._clickListener) {\n            window.removeEventListener('mousedown', this._clickListener);\n        }\n    }\n\n    registerHoverHandler(hoverHandler) {\n        this._hoverListener = e => {\n            hoverHandler(e);\n        };\n        window.addEventListener('mousemove', this._hoverListener);\n    }\n\n    _removeHoverHandler() {\n        if (this._hoverListener) {\n            window.removeEventListener('mousemove', this._hoverListener);\n        }\n    }\n\n    registerScrollWheelHandler(registerScrollWheelHandler) {\n        this._scrollWheelListener = e => {\n            registerScrollWheelHandler(e);\n        }\n        window.addEventListener('wheel', this._scrollWheelListener);\n    }\n\n    _removeScrollWheelHandler() {\n        if (this._scrollWheelListener) {\n            window.removeEventListener('wheel', this._scrollWheelListener);\n        }\n    }\n\n    /**\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\n     */\n    _registerVisibilityChangeHandler() {\n        this._visibilityChangeHandler = () => {\n            if (document.visibilityState === 'visible') {\n                this.stage.root.core.setHasRenderUpdates(2);\n                this.stage.renderFrame();\n            }\n        }\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\n    }\n\n    _removeVisibilityChangeHandler() {\n        if (this._visibilityChangeHandler) {\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\nimport Stage from './Stage.mjs';\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n\n        // add VRAM tracking if using the webgl renderer\n        this._updateVramUsage(textureSource, 1);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    _updateVramUsage(textureSource, sign) {\n        const nativeTexture = textureSource.nativeTexture;\n        var usage;\n\n        // do nothing if webgl isn't even supported\n        if (!Stage.isWebglSupported())\n            return;\n\n        // or if there is no native texture\n        if (!textureSource.isLoaded())\n            return;\n\n        // or, finally, if there is no bytes per pixel specified\n        if (!nativeTexture.hasOwnProperty('bytesPerPixel') || isNaN(nativeTexture.bytesPerPixel))\n            return;\n\n        usage = sign * (textureSource.w * textureSource.h * nativeTexture.bytesPerPixel);\n\n        this.stage.addVramUsage(usage, textureSource.hasAlpha);\n    }\n\n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n\n            // add VRAM tracking if using the webgl renderer\n            this._updateVramUsage(textureSource, -1);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n        this.stage = null;\n\n        delete this._sources;\n        delete this._data;\n        delete this.stage;\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n\n        this.renderToTextureCount = 0;\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n\n        this.stage = null;\n        this.root = null;\n\n        this.renderState = null;\n        this.renderExec = null;\n        this._renderTexturePool = null;\n        this._zSorts = null;\n\n        delete this.stage;\n        delete this.root;\n        delete this.renderState;\n        delete this.renderExec;\n        delete this._renderTexturePool;\n        delete this._zSorts;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        const debugFrame = this.stage.getOption('debugFrame');\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            this._readPixels();\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n\n        if (debugFrame) {\n            console.log(`[Lightning] RTT Renders in frame: ${this.renderToTextureCount}`)\n        }\n\n        // Block OpenGL pipeline to prevent framebuffer flickering\n        // on certain devices\n        if (this.stage.getOption('readPixelsAfterDraw') &&\n            this.renderToTextureCount >= this.stage.getOption('readPixelsAfterDrawThreshold')\n        ) {\n            if (debugFrame) {\n                console.log(`[Lightning] readPixelsAfterDraw behavior triggered`)\n            }\n            this._readPixels();\n        }\n\n        this.renderToTextureCount = 0;\n    }\n\n    _readPixels() {\n        const pixels = new Uint8Array(4);\n        const gl = this.stage.gl;\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        // attempt to track VRAM usage more accurately by accounting for different color channels\n        this._usedVramAlpha = 0;\n        this._usedVramNonAlpha = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            if (this.getOption('devicePixelRatio') !== 1) {\n                const ratio = this.getOption('devicePixelRatio');\n                // set correct display sie\n                this.getCanvas().style.width = this._options['w'] / ratio  + 'px';\n                this.getCanvas().style.height = this._options['h'] / ratio + 'px';\n            }\n\n            // set display buffer size\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('fontSharp', { precision: 0.6666666667, fontSize: 24 })\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n        opt('devicePixelRatio', 1)       \n        opt('readPixelsAfterDraw', false);\n        opt('readPixelsAfterDrawThreshold', 0);\n        opt('debugFrame', false);\n        opt('forceTxCanvasSource', false);\n        opt('pauseRafLoopOnIdle', false);\n\n        if (o['devicePixelRatio'] != null && o['devicePixelRatio'] !== 1) {\n            this._options['precision'] *= o['devicePixelRatio']\n            this._options['w'] *= o['devicePixelRatio']\n            this._options['h'] *= o['devicePixelRatio']\n        }\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\n            console.log('[Lightning] Using image worker!');\n        }\n\n        if (this.application.getOption('debug') && this.c2d) {\n            console.log('[Lightning] Using canvas2d renderer');\n        }\n\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n\n        // clear last rendered frame\n        if (this.gl) {\n            this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        } else if (this.c2d) {\n            this.c2d.clearRect(\n                0, 0, this.c2d.canvas.width, this.c2d.canvas.height\n            );\n        }\n\n        this.gl = null;\n        this.c2d = null;\n        this.ctx = null;\n        this._options = null;\n        this.platform = null;\n        this.textureManager = null;\n        this._renderer = null;\n\n        delete this.gl;\n        delete this.c2d;\n        delete this.ctx;\n        delete this._options;\n        delete this.platform;\n        delete this.textureManager;\n        delete this._renderer;\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n\n    _performUpdateSource() {\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n    }\n\n    _calculateDt() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n    }\n\n    updateFrame() {\n        this._calculateDt();\n        this.emit('frameStart');\n        this._performUpdateSource();\n        this.emit('update');\n    }\n\n    idleFrame() {\n        this.textureThrottler.processSome();\n        this.emit('frameEnd');\n        this.frameCounter++;\n    }\n\n    renderFrame() {\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    drawFrame() {\n        // Maintain original functionality of `drawFrame()` while retaining the\n        // RAF mitigration feature from: https://github.com/rdkcentral/Lightning/pull/402\n        // The full functionality of this method is relied directly by our own unit tests and\n        // the unit tests of third party users\n        this.updateFrame();\n        this.renderFrame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    addVramUsage(delta, alpha) {\n        if (alpha) {\n            this._usedVramAlpha += delta;\n        }\n        else {\n            this._usedVramNonAlpha += delta;\n        }\n    }\n\n    get usedVramAlpha() {\n        return this._usedVramAlpha;\n    }\n\n    get usedVramNonAlpha() {\n        return this._usedVramNonAlpha;\n    }\n\n    get usedVram() {\n        return this._usedVramAlpha + this._usedVramNonAlpha;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            if (this.application.getOption('debug')) {\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n            }\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y) {\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x, y, children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n        this.__hoveredChild = null;\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n\n        if (this.getOption(\"enablePointer\")) {\n            this.stage.platform.registerClickHandler((e) => {\n                this._receiveClick(e);\n            });\n\n            this.stage.platform.registerHoverHandler((e) => {\n                this._receiveHover(e);\n            });\n\n            this.stage.platform.registerScrollWheelHandler((e) => {\n                this._recieveScrollWheel(e);\n            });\n\n            this.cursor = 'default';\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n        opt('enablePointer', false);\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n\n                if (this.getOption('debug')) {\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\n                }\n\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while (true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    _recieveScrollWheel(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\n            }\n        }\n    }\n\n    fireTopDownScrollWheelHandler(event, obj) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children).reverse();\n        let n = affected.length;\n\n        while (n--) {\n            const child = affected[n];\n            if (child && child[event]) {\n                child._captureScroll(obj);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    fireBottomUpScrollWheelHandler(event, obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[event]) {\n                child._handleScroll(obj);\n                return true;\n            }\n            child = child.parent;\n        }\n        return false;\n    }\n\n    _receiveClick(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpClickHandler(obj);\n        }\n    }\n\n    fireBottomUpClickHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[\"_handleClick\"]) {\n                const { px, py } = child.core._worldContext;\n                const cx = px * precision;\n                const cy = py * precision;\n\n                const localCoords = {\n                    x: clientX - cx,\n                    y: clientY - cy\n                }\n\n                const returnValue = child._handleClick(target, localCoords);\n                if (returnValue !== false) {\n                    break;\n                }\n            }\n            child = child.parent;\n        }\n    }\n\n    _receiveHover(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpHoverHandler(obj);\n        }\n    }\n\n    fireBottomUpHoverHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n\n        // Only fire handlers when pointer target changes\n        if (target !== this.__hoveredChild) {\n\n            let hoveredBranch = new Set();\n            let newHoveredBranch = new Set();\n\n            if (target) {\n                newHoveredBranch = new Set(target.getAncestors());\n            }\n\n            if (this.__hoveredChild) {\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\n                    const c = Component.getComponent(elem);\n                    if (c[\"_handleUnhover\"]) {\n                        c._handleUnhover(elem);\n                    }\n                    if (elem.parent && elem.parent.cursor) {\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\n                    }\n                }\n            }\n\n            this.__hoveredChild = target;\n\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\n            for (const elem of diffBranch) {\n                const c = Component.getComponent(elem);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(elem);\n                }\n            }\n\n            // New element hover cursor\n            const lastElement = diffBranch[0];\n            if (lastElement && lastElement.cursor) {\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\n            }\n\n            // Rerun _handleHover for target element in case it's been hovered\n            // back from its child\n            if (diffBranch.length === 0 && target) {\n                const c = Component.getComponent(target);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(target);\n                }\n            }\n        }\n    }\n\n    _getTargetChild(clientX, clientY) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children);\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\n\n        hoverableChildren.sort((a, b) => {\n            // Sort by zIndex and then id\n            if (a.zIndex > b.zIndex) {\n                return 1;\n            } else if (a.zIndex < b.zIndex) {\n                return -1;\n            } else {\n                return a.id > b.id ? 1 : -1;\n            }\n        });\n\n        if (hoverableChildren.length) {\n            // Assume target has highest zIndex (id when zIndex equal)\n            return hoverableChildren.slice(-1)[0];\n        } else {\n            return null;\n        }\n    }\n\n    _findChildren(bucket, children) {\n        let n = children.length;\n        while (n--) {\n            const child = children[n];\n            // only add active children\n            if (child.__active && child.collision) {\n                if (child.collision === true) {\n                    bucket.push(child);\n                }\n                if (child.hasChildren()) {\n                    this._findChildren(bucket, child.children);\n                }\n            }\n        }\n        return bucket;\n    }\n\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\n        let n = affectedChildren.length;\n        const candidates = [];\n\n        // loop through affected children\n        // and perform collision detection\n        while (n--) {\n            const child = affectedChildren[n];\n            const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n            const ctx = child.core._worldContext;\n\n            const cx = ctx.px * precision;\n            const cy = ctx.py * precision;\n            const cw = child.finalW * ctx.ta * precision;\n            const ch = child.finalH * ctx.td * precision;\n\n            if (cx > this.stage.w || cy > this.stage.h) {\n                continue;\n            }\n\n            if (child.parent.core._scissor) {\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\n                    continue\n            }\n\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\n                candidates.push(child);\n            }\n        }\n        return candidates;\n    }\n\n    _testCollision(px, py, cx, cy, cw, ch) {\n        if (px >= cx &&\n            px <= cx + cw &&\n            py >= cy &&\n            py <= cy + ch) {\n            return true;\n        }\n        return false;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onError = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error('[Lightning]', e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._blend = 0;\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fc = 0x00ffffff;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set blend(p) {\n        this._blend = Math.min(Math.max(p, 0), 1);\n    }\n\n    set radius(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._radius = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\n            }\n            else if (v.length === 4) {\n                this._radius = v;\n            }\n            else {\n                this._radius = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set topLeft(num) {\n        this._radius[0] = num;\n        this.redraw();\n    }\n\n    get topLeft() {\n        return this._radius[0];\n    }\n\n    set topRight(num) {\n        this._radius[1] = num;\n        this.redraw();\n    }\n\n    get topRight() {\n        return this._radius[1];\n    }\n\n    set bottomRight(num) {\n        this._radius[2] = num;\n        this.redraw();\n    }\n\n    get bottomRight() {\n        return this._radius[2];\n    }\n\n    set bottomLeft(num) {\n        this._radius[3] = num;\n        this.redraw();\n    }\n\n    get bottomLeft() {\n        return this._radius[4];\n    }\n\n    set strokeColor(argb) {\n        this._sc = argb;\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get strokeColor() {\n        return this._sc;\n    }\n\n    set fillColor(argb) {\n        this._fc = argb;\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get fillColor() {\n        return this._fc;\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    uniform float alpha;\n    uniform float fill;\n    uniform float blend;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n        \n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from './DefaultShader.mjs';\n\nexport default class FadeOutShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._fade = [0, 0, 0, 0];\n    }\n\n    set top(num) {\n        this._fade[0] = num;\n        this.redraw();\n    }\n\n    get top() {\n        return this._fade[0];\n    }\n\n    set right(num) {\n        this._fade[1] = num;\n        this.redraw();\n    }\n\n    get right() {\n        return this._fade[1];\n    }\n\n    set bottom(num) {\n        this._fade[2] = num;\n        this.redraw();\n    }\n\n    get bottom() {\n        return this._fade[2];\n    }\n\n    set left(num) {\n        this._fade[3] = num;\n        this.redraw();\n    }\n\n    get left() {\n        return this._fade[3];\n    }\n\n    set fade(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._fade = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\n            }\n            else if (v.length === 4) {\n                this._fade = v;\n            }\n            else {\n                this._fade = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._fade = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get fade() {\n        return this._fade;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const fade = this._fade.map((f) => f * renderPrecision);\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nFadeOutShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 fade;\n    \n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 point = vTextureCoord.xy * resolution.xy;\n        \n        vec2 pos1;\n        vec2 pos2;\n        vec2 d;\n        float c;\n        float t = 0.0;\n             \n        if(fade[0] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x, point.y + fade[0]);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[1] > 0.0) {\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[2] > 0.0) {\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[3] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x + fade[3], point.y);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivot = [0.5, 0.5];\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\n        this.redraw()\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v)) {\n            this._pivot = v;\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    set pivotX(v) {\n        this._pivot[0] = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotY(v) {\n        this._pivot[1] = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform vec2 pivot;\n\n    void main() {\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b) * vColor;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._pivot = [0, 0];\n        this._ic = 0xffffffff;\n        this._normalizedIC = this._getNormalizedColor(this._ic);\n        this._oc = 0x00ffffff;\n        this._normalizedOC = this._getNormalizedColor(this._oc);\n        this._radius = 0;\n    }\n\n    set radiusX(v) {\n        this.radius = v;\n    }\n\n    get radiusX() {\n        return this._radius;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set innerColor(argb) {\n        this._ic = argb;\n        this._normalizedIC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get innerColor() {\n        return this._ic;\n    }\n\n    set outerColor(argb) {\n        this._oc = argb;\n        this._normalizedOC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set color(argb) {\n        this.innerColor = argb;\n    }\n\n    get color() {\n        return this.innerColor;\n    }\n\n    get outerColor() {\n        return this._ic;\n    }\n\n    set x(f) {\n        this._x = f;\n        this.redraw();\n    }\n\n    set y(f) {\n        this._y = f;\n        this.redraw();\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v) && v.length === 2) {\n            this._pivot = v;\n        }\n        else if(Array.isArray(v)) {\n            this._pivot = [v[0], v[1] || v[0]];\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivot() {\n        return this._pivot[0];\n    }\n\n    set pivotY(f) {\n        this._pivot[1] = f;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotX(f) {\n        this._pivot[0] = f;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        if(this._x) {\n            this._pivot[0] = this._x / owner.w;\n        }\n        if(this._y) {\n            this._pivot[1] = this._y / owner.h;\n        }\n\n        if(this._radius === 0) {\n            this._radius = owner.w * 0.5;\n        }\n\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\n    }\n}\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec2 pivot;\n    uniform vec4 innerColor;\n    uniform vec4 outerColor;\n    uniform float radius;\n    uniform float radiusY;\n    uniform float alpha;\n    uniform float fill;\n    uniform float aspectRatio;\n    \n    void main() {\n        vec2 point = vTextureCoord.xy * resolution;\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class MagnifierShader extends DefaultShader {\n\tconstructor(context) {\n\t  super(context);\n\t  this._x = 0;\n\t  this._y = 0;\n\t  this._w = 0;\n\t  this._h = 0;\n\t  this._radius = 0;\n\t  this._magnification = 0.6;\n\t}\n  \n\tget x() {\n\t  return this._x;\n\t}\n  \n\tset x(v) {\n\t  this._x = v;\n\t  this.redraw();\n\t}\n  \n\tget y() {\n\t  return this._y;\n\t}\n  \n\tset y(v) {\n\t  this._y = v;\n\t  this.redraw();\n\t}\n  \n\tget w() {\n\t  return this._w;\n\t}\n  \n\tset w(v) {\n\t  this._w = v;\n\t  this.redraw();\n\t}\n  \n\tget h() {\n\t  return this._h;\n\t}\n  \n\tset h(v) {\n\t  this._h = v;\n\t  this.redraw();\n\t}\n  \n\tget magnification() {\n\t  return this._magnification;\n\t}\n  \n\tset magnification(v) {\n\t  this._magnification = v;\n\t  this.redraw();\n\t}\n  \n\tget radius() {\n\t  return this._radius;\n\t}\n  \n\tset radius(v) {\n\t  this._radius = v;\n\t  this.redraw();\n\t}\n  \n\tsetupUniforms(operation) {\n\t  super.setupUniforms(operation);\n  \n\t  const owner = operation.shaderOwner;\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\n\t  this._setUniform(\n\t\t'radius',\n\t\t(this._radius + 0.5) * renderPrecision,\n\t\tthis.gl.uniform1f\n\t  );\n\t  this._setUniform(\n\t\t'resolution',\n\t\tnew Float32Array([\n\t\t  owner._w * renderPrecision,\n\t\t  owner._h * renderPrecision\n\t\t]),\n\t\tthis.gl.uniform2fv\n\t  );\n\t}\n \n\tuseDefault() {\n\t  return this._w === 0 && this._h === 0;\n\t}\n  }\n  \n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n  \n  MagnifierShader.fragmentShaderSource = `\n\t  #ifdef GL_ES\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\tprecision highp float;\n\t\t# else\n\t\tprecision lowp float;\n\t\t# endif\n\t  #endif\n\n\t  varying vec2 vTextureCoord;\n\t  varying vec4 vColor;\n\t  uniform sampler2D uSampler;\n\t  uniform float x;\n\t  uniform float y;\n\t  uniform float w;\n\t  uniform float h;\n\t  uniform vec2 resolution;\n\t  uniform float radius;\n\t  uniform float magnification;\n  \n\t  float roundBox(vec2 p, vec2 b, float r) {\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\n\t\t  return smoothstep(1.0, 0.0, d);\n\t  }\n\n\t  float inside(vec2 v) {\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\n\t\treturn s.x * s.y;   \n      }\n  \n\t  void main(void) {\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n\t\tvec2 size = vec2(w, h) / 2.0;\n\t\tfloat b = roundBox(pos, size, radius);\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\n\t  }\n  `;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class SpinnerShader2 extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._period = 1;\n        this._stroke = 0;\n        this._showDot = true;\n        this._clockwise = true;\n        this._bc = 0xff000000;\n        this._normalizedBC = this._getNormalizedColor(this._bc);\n        this._c = 0xffffffff;\n        this._normalizedC = this._getNormalizedColor(this._c);\n    }\n\n    set radius(v) {\n        if(v === 0) {\n            v = 1;\n        }\n        this._radius = v;\n    }\n\n    set stroke(value) {\n        this._stroke = Math.abs(value);\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    set color(argb) {\n        this._c = argb;\n        this._normalizedC = this._getNormalizedColor(argb);\n    }\n\n    get color() {\n        return this._c;\n    }\n\n    set backgroundColor(argb) {\n        this._bc = argb;\n        this._normalizedBC = this._getNormalizedColor(argb);\n    }\n\n    get backgroundColor() {\n        return this._sc;\n    }\n\n    set showDot(bool) {\n        this._showDot = bool;\n    }\n\n    get showDot() {\n        return this._showDot;\n    }\n\n    set clockwise(bool) {\n        this._clockwise = bool;\n    }\n\n    get clockwise() {\n        return this._clockwise;\n    }\n\n    set period(v) {\n        this._period = v;\n    }\n\n    get period() {\n        return this._period;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const radius = this._radius || (owner._w / 2);\n\n        if(this._stroke === 0) {\n            this._stroke = radius * 0.33;\n        }\n\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\n        this._setUniform('radius',  radius, this.gl.uniform1f);\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\n            this.redraw();\n        }\n    }\n}\n\nSpinnerShader2.spinSync = Date.now();\n\nSpinnerShader2.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n    uniform float direction;\n    uniform float radius;\n    uniform float time;\n    uniform float stroke;\n    uniform float showDot;\n    uniform float period;\n    uniform float alpha;\n    \n    float circleDist(vec2 p, float radius){\n        return length(p) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\n        \n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n        \n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\n        \n        float strokeRad = stroke * 0.5;\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Spinner2: SpinnerShader2,\n        FadeOut: FadeOutShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        Magnifier: MagnifierShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;\n"],"names":["StageUtils","_classCallCheck","key","value","mergeNumbers","v1","v2","p","rgb","r","g","b","rgba","a","getRgbString","color","getRgbaString","toFixed","getRgbaStringFromArray","Math","floor","getRgbaComponentsNormalized","argb","getRgbComponentsNormalized","getRgbaComponents","getArgbNumber","max","min","v","mergeColors","c1","c2","r1","round","mergeMultiColors","c","t","n","length","i","g1","b1","a1","mergeMultiColorsEqual","mergeColorAlpha","alpha","rad","deg","PI","getTimingBezier","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","it","minT","maxT","getTimingFunction","str","s","indexOf","parts","substr","split","warn","parseFloat","isNaN","Utils","isFunction","isNumber","isInteger","isBoolean","isString","clone","isObjectLiteral","Array","isArray","getDeepClone","cloneObjShallow","obj","keys","Object","merge","obj1","obj2","isObject","type","isPlainObject","constructor","getArrayIndex","index","arr","getModuloIndex","len","ceil","equalValues","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","this","setToArray","result","forEach","push","iteratorToArray","iterator","iteratorResult","next","done","isUcChar","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","Utils$1","isNode","isPS4","isZiggo","Base","defaultSetter","name","patchObject","settings","names","patchObjectProperty","console","error","setter","setSetting","charAt","__local","local","func","SpacingCalculator","getSpacing","mode","numberOfItems","remainingSpace","spacePerGap","spacingBefore","spacingBetween","itemGaps","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_createClass","get","_lines","init","_getTotalCrossAxisSize","align","crossAxisSize","_this$_getSpacing","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","recursiveResizeOccured","setItemPositions","total","FlexUtils","getParentAxisSizeWithPadding","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","getRelAxisSize","funcW","_allowRelAxisSizeFunction","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","isZeroAxisSize","getAxisLayoutPos","x","y","setAxisLayoutPos","pos","setAxisLayoutSize","size","getAxisMinSize","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","flexItem","shrink","resizeAxis","_horizontal","resizeMainAxis","resizeCrossAxis","getPaddingOffset","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","getMarginOffset","marginLeft","marginTop","getTotalMargin","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","getShrunkSize","SizeGrower","_grownSize","grow","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","maxSize","_getMainAxisMaxSizeSetting","maxGrow","getGrownSize","ItemPositioner","lineLayout","position","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","performLayout","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","shrinker","_calcCrossAxisMaxLayoutSize","getMainAxisMinSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","_getCrossAxisMinSize","layoutLines","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","resizingMainAxis","isMainAxisFitToContents","crossAxisMinSize","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","finalize","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","_reversed","_recalc","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","layoutTree","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","mainAxisContentSize","totalCrossAxisSize","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","ctr","set","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_changedDimensions","changedDimensions","_changedContents","changedContents","f","direction","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","patch","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","undefined","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","_getCrossAxisLayoutSize","_getMainAxisPadding","_getMainAxisMargin","FlexTarget","_target","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","layoutFlexTree","isChanged","_enableFlex","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","setParent","from","to","isFlexContainer","_changedChildren","setVisible","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","arguments","changeHeight","_updateRecalc","forceLayout","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","combinedRecalc","shrunk","setOriginalXWithoutUpdatingLayout","setOriginalYWithoutUpdatingLayout","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","_hasAlpha","addTexture","has","add","removeTexture","delete","incActiveTextureCount","becomesUsed","decActiveTextureCount","becomesUnused","forEachEnabledElement","cb","_this","texture","_newArrowCheck","elements","bind","hasEnabledElements","forEachActiveElement","_this2","_this3","element","active","getRenderWidth","getRenderHeight","allowCleanup","isUsed","load","cancel","isLoading","isLoaded","isError","reload","free","_this4","forceSync","isResultTexture","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","hasAlpha","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","_this5","forceRenderUpdate","update","frameCounter","forceUpdateRenderCoords","_updateTextureCoords","clearNativeTexture","replaceNativeTexture","newNativeTexture","_this6","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","_updateDimensions","e","_this7","onTextureSourceLoadError","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","setHasRenderUpdates","_setRecalc","_getTextureSource","textureManager","updateResultTexture","hasResultTexture","resultTextureInUse","resultTexture","getResultTexture","nativeTexture","core","mustRenderToTexture","_hasRenderUpdates","deactivate","release","releaseRenderTexture","reuseTextureAsRenderTexture","hasRenderTexture","getRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","hasFlexLayout","_disableFuncX","_updateLocalTranslateDelta","_triggerRecalcTranslate","_disableFuncY","disableFuncW","disableFuncH","_updateLocalTransform","scaleX","_updateLocalTranslate","prev","_updateLocalAlpha","_updateEnabledFlag","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","pivotXMul","pivotYMul","px","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","addChildAt","child","splice","setChildAt","removeChildAt","removeChildren","syncChildren","removed","added","order","moveChild","fromIndex","toIndex","isEstimate","setTextureCoords","ulx","uly","brx","bry","setDisplayedTextureSource","textureSource","setAsRoot","root","coordsWidth","coordsHeight","isAncestorOf","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","prevZContext","_getZIndexedDescs","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","prevShader","shader","defaultShader","_setShaderOwnerChildrenRecursive","_hasRenderContext","texturizer","_enableRenderToTexture","_disableRenderToTexture","_renderAdvanced","isWhite","hasSimpleTexCoords","_stashTexCoords","_stashedTexCoords","_unstashTexCoords","_stashColors","_stashedColors","_unstashColors","isVisible","_applyRelativeDimFuncs","pw","ta","td","tb","tc","pr","updateTreeOrder","useRenderToTexture","sx","sy","ex","ey","bboxW","bboxH","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","renderOffscreen","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","activeShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","renderToTextureCount","cleared","ignore","cache","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","renderTextureReused","setTexturizer","colorize","ptr","m","j","sort","mergeResult","getCornerPoints","getRenderTextureCoords","relX","relY","getAbsoluteCoords","collectAtCoord","inBound","inScissor","tx","ty","sc","_ensureLayout","EventEmitter","_hasEventListeners","on","listener","_eventFunction","_eventListeners","combiner","once","wrapper","arg1","arg2","arg3","off","__originalFunc","current","listeners","_step","_iterator","_createForOfIteratorHelper","l","map","removeListener","emit","listenerCount","removeAllListeners","object","_i","_arr","_toConsumableArray","addAsMixin","cls","Shader","coreContext","_initialized","_elements","addElement","removeElement","cleanup","redraw","useDefault","addEmpty","create","renderer","createShader","isShader","isValidShaderType","getWebGL","getC2d","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","clipping","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","incActiveCount","decActiveCount","_checkForNewerReusableTextureSource","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","_getLookupId","_getSourceLoader","_getIsValid","_updateSource","addUpdateSourceTexture","getTextureSource","getReusableTextureSource","newSource","oldSource","loadError","_ref","_ref$type","_ref$w","_ref$h","_ref$clipX","clipX","_ref$clipY","clipY","_clearResizeMode","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","scaleY","scale","desiredSize","choppedOffPixels","enableClipping","disableClipping","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","getNonDefaults","nonDefaults","precision","isAutosizeTexture","isTexture","ImageTexture","_Texture","_inherits","_super","_createSuper","call","_src","src","getOption","fc","charCodeAt","platform","loadSrcTexture","_get","_getPrototypeOf","getFontSetting","fontFace","fontStyle","fontSize","defaultFontFace","ff","ffs","curFf","concat","isZeroWidthSpace","space","isSpace","measureText","context","word","reduce","acc","char","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","getPrecision","setFontProperties","font","textBaseline","_load","document","fonts","fontSetting","check","text","catch","then","draw","loadPromise","drawText","_draw","_calculateRenderInfo","offsetY","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","linePositionX","linePositionY","globalAlpha","fillRect","translate","drawLines","verticalAlign","textAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","spaceRegex","allLines","realNewlines","resultLines","spaceLeft","words","spaces","match","wordWidthWithSpace","TextTextureRendererAdvanced","baseFont","fontBaselineRatio","wordBreak","wrapWidth","tokenize","parse","measure","resetFontStyle","lineNo","lineNum","baselineOffsetInPx","vaOffset","_iterator2","_step2","_step3","_iterator3","firstWord","lastWord","shift","pop","_step4","_iterator4","apply","lastLineText","filter","_suffix","_iterator5","_step5","spl","alignLine","_step6","_iterator6","_step7","_iterator7","canvasWidth","canvasHeight","hlColor","hlOffset","defaultColor","currentColor","_step8","_iterator8","_step9","_iterator9","letters","_step10","_iterator10","tokenizeString","tokenRegex","delimeters","final","tokens","italic","bold","colorStack","colorRegexp","test","matched","exec","o","applyFontStyle","parsed","_step11","_iterator11","_step12","_iterator12","_getBreakIndex","breakIndex","_step13","totalWidth","_iterator13","_objectSpread","_breakIndex","_this$_getBreakIndex","initialX","_step14","prevWidth","prevX","_iterator14","TextTexture","_text","_fontStyle","_fontBaselineRatio","_fontSize","_fontFace","_wordWrap","_wordWrapWidth","_wordBreak","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_advancedRenderer","_letterSpacing","_textIndent","_set","toString","advancedRenderer","args","cloneArgs","gl","getDrawingCanvas","texParams","sharpCfg","sharpen","getRenderPrecision","TEXTURE_MAG_FILTER","NEAREST","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","Transition","_EventEmitter","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","start","targetValue","isAttached","reset","delay","_updateDrawValue","finish","stop","removeActive","pause","play","addActive","getDrawValue","attached","isRunning","progress","dt","delayLeft","duration","invokeListeners","updateTargetValue","timingFunctionImpl","_timingFunctionImpl","startValue","skipDelay","isTransition","ObjectList","_refs","addAt","currentIndex","createItem","setAt","ref","onAdd","replaceByRef","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","getAt","remove","removeAt","onRemove","clear","onSync","isItem","_getRefs","clearRef","setRef","_setByObject","_setByArray","refs","crefs","cref","idx","_equalsArray","array","same","marker","newItems","_setItems","prevItems","ElementChildList","_ObjectList","_connectParent","prevChildList","childList","_setParent","gc","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__parent","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","_throwError","removeTag","_addTag","_updateAttachedFlag","isRoot","_unsetTagsParent","_setTagsParent","_updateCollision","getDepth","depth","getAncestor","getAncestors","getAncestorAtDepth","levels","getSharedAncestor","o1","o2","l1","l2","_isAttached","_isEnabled","_isActive","withinBoundsMargin","newAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","_setActiveFlag","_unsetActiveFlag","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","_onInactive","_onResize","_getRenderWidth","_getRenderHeight","textureIsLoaded","loadTexture","_enableTextureError","prevTexture","prevSource","displayedTextureSource","sourceChanged","unknownSize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","ph","tempty","tag","tags","tagSet","_loop","parentTreeTags","comp","Map","_loop2","_getByTag","getTags","setTags","removes","adds","hasTag","currentTags","addTag","list","_tag","mtag","values","res","level","resn","stag","sel","path","select","selectors","_select","pointIdx","isRef","arrowIdx","_selectChilds","subPath","_next","getLocationString","localTags","getSettings","getPrettyString","childArray","missing","pivotX","pivotY","pivot","mountX","mountY","mount","rotation","colorUl","colorUr","colorBl","colorBr","forceZIndexContext","clipbox","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","boundsMargin","offsetX","_collision","collision","_allowChildrenAccess","hasChildren","rectangleTexture","enableTextTexture","onUpdate","onAfterCalcs","onAfterUpdate","forceUpdate","rtt","getTexture","paths","firstCharCode","message","animation","animations","createAnimation","transition","_getTransition","_setTransition","setSmooth","fastForward","_transitions","isTransitionSettings","transitions","defaultTransitionSettings","createSettings","_removeTransition","getSmooth","toJSON","tree","collectChildren","getProperties","colorKeys","JSON","stringify","k","childStr","isEmpty","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","isColorProperty","toLowerCase","properties","props","StateMachine","setupStateMachine","fire","event","_hasMethod","_len","_key","_getState","_state","__path","_inState","statePath","currentStatePath","state","_sm","getStateByPath","currentState","__level","_getStateAtLevel","_hasMember","member","_setState","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","_stateIndex","__index","_initStateMachine","_routedType","_getMostSpecificHandledMember","memberNames","cur","memberName","StateMachineType","getStateMemberAlias","targetConstructor","router","setPrototypeOf","stateMachineType","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","StateMachineRouter","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","isValid","curState","getPrototypeOf","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","_this8","_this9","stateMap","members","_this10","_getStateMemberNames","_this11","_getStateMemberNamesForType","_this12","_isStateLocalMember","_createStateMap","_addState","parentState","_this13","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","__supportsSpread","Component","_Element","tagRoot","_assertThisInitialized","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","application","updateFocusPath","_refocus","__bindProperty","propObj","targetObj","targetProp","prop","propDependencies","propName","__func","__obj","__prop","_step$value","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","_focus","newTarget","prevTarget","_unfocus","_focusChange","_getFocused","_setFocusSettings","_handleFocusSettings","hasFinalFocus","_focusPath","hasFocus","seekAncestorByType","cparent","getSharedAncestorComponent","ancestor","isComponent","signal","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","fireAncestors","startsWith","_len2","_key2","_doFireAncestors","bindProp","__propertyBinding","hasName","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","collectSubComponents","subs","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","getElement","getElementCore","getTextureWidth","getTextureHeight","WebGLCoreQuadList","_CoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","getAttribsDataByteOffset","getQuadContents","CoreQuadOperation","shaderOwner","scissor","quads","getElementWidth","renderWidth","getElementHeight","renderHeight","WebGLCoreQuadOperation","_CoreQuadOperation","extraAttribsDataByteOffset","getNormalRenderTextureCoords","coords","getProjection","renderExec","_projection","projection","CoreRenderExecutor","destroy","_reset","_bindRenderTexture","_setScissor","_clearRenderTexture","execute","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_CoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","getScissor","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","compile","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getUniformLocation","location","getAttribLocation","_valueEquals","_valueClone","setUniformValue","glFunction","clonedValue","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","WebGLShader","_Shader","shaderPrograms","glProgram","initialize","_uniform","_attrib","_setUniform","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getVertexAttribPointerOffset","setExtraAttribsInBuffer","_getProjection","getFlipY","DefaultShader","_WebGLShader","vertexAttribPointer","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","DefaultShader$1","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","copyRenderTexture","WebGLRenderer","_Renderer","_compressedTextureExtensions","astc","getExtension","etc1","s3tc","pvrtc","getCompressedTextureExtensions","shaderProgram","createCoreRenderExecutor","createCoreRenderState","createRenderTexture","createTexture","texImage2D","RGBA","texParameteri","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","freeRenderTexture","deleteFramebuffer","deleteTexture","_getBytesPerPixel","fmt","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","RGB","UNSIGNED_BYTE_5_6_5","compressed","premultiplyAlpha","flipBlueRed","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","uploadCompressedGlTexture","uploadGlTexture","bytesPerPixel","mca","cx","cy","extra","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","setRenderContext","setSimpleTc","setWhite","getRenderContext","getSimpleTc","getWhite","C2dCoreQuadOperation","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","globalCompositeOperation","beginPath","rect","closePath","fill","clearRect","_restoreContext","restore","save","_equalScissorAreas","clip","C2dShader","_C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","tintTexture","getTintTexture","drawImage","gradient","transparency","createLinearGradient","addColorStop","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","_addMemoryUsage","delta","addMemoryUsage","_delete","_hasCache","_getCache","prevMemUsage","memoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","SparkShader","elementPostion","paint","SparkRenderer","_WebGLRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","_ref2","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_loopHandler","_idleLoopCounter","_idleLoopDelay","_imageWorker","_registerVisibilityChangeHandler","clearInterval","_removeKeyHandler","_removeClickHandler","_removeHoverHandler","_removeScrollWheelHandler","_removeVisibilityChangeHandler","startLoop","loop","stopLoop","switchLoop","setInterval","updateFrame","idleFrame","requestAnimationFrame","lp","renderFrame","view","pvr","mipmaps","DataView","compressedTexImage2D","glInternalFormat","pixelWidth","pixelHeight","HTMLImageElement","HTMLVideoElement","ImageBitmap","HTMLCanvasElement","getImageData","handleKtxLoad","arraybuffer","getUint32","littleEndian","glType","glTypeSize","glFormat","glBaseInternalFormat","pixelDepth","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","bytesOfKeyValueData","kvps","includes","imageSize","handlePvrLoad","arrayBuffer","header","Int32Array","dataOffset","pvrtcData","Uint8Array","byteOffset","cancelCb","isPng","isKtx","isPvr","request","addEventListener","Image","crossOrigin","removeAttribute","createWebGLContext","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","createCanvasContext","getHrTime","performance","now","nextFrame","changes","registerKeydownHandler","keyhandler","_keydownListener","registerKeyupHandler","_keyupListener","removeEventListener","registerClickHandler","clickHandler","_clickListener","registerHoverHandler","hoverHandler","_hoverListener","registerScrollWheelHandler","_scrollWheelListener","_visibilityChangeHandler","visibilityState","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","_getDefaultFlag","cap","DITHER","setFlag","setBuffer","change","setFramebuffer","setRenderbuffer","setProgram","program","va","equal","setActiveTexture","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","setPixelStorei","pname","param","_getPixelStoreiIndex","migrate","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","_initStateManager","switchState","$useProgram","$bindBuffer","fb","$bindFramebuffer","$bindRenderbuffer","$enable","$disable","$viewport","$scissor","$disableVertexAttribArray","$enableVertexAttribArray","$vertexAttribPointer","normalized","stride","$activeTexture","$bindTexture","$pixelStorei","$stencilFuncSeparate","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","$stencilMaskSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","$stencilOpSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","$blendColor","red","green","blue","_blendColor","$blendEquation","_blendEquation","$blendEquationSeparate","modeRGB","modeAlpha","_blendEquationSeparate","$blendFunc","sfactor","dfactor","_blendFunc","$blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","$clearColor","_clearColor","$clearDepth","_clearDepth","$clearStencil","_clearStencil","$colorMask","_colorMask","$cullFace","_cullFace","$depthFunc","_depthFunc","$depthMask","flag","_depthMask","$depthRange","zNear","zFar","_depthRange","$frontFace","_frontFace","$lineWidth","_lineWidth","$polygonOffset","factor","units","_polygonOffset","$sampleCoverage","invert","_sampleCoverage","$stencilFunc","_stencilFunc","$stencilMask","_stencilMask","$stencilOp","_stencilOp","$vertexAttrib1f","indx","_vertexAttrib1f","$vertexAttrib1fv","_vertexAttrib1fv","$vertexAttrib2f","_vertexAttrib2f","$vertexAttrib2fv","_vertexAttrib2fv","$vertexAttrib3f","z","_vertexAttrib3f","$vertexAttrib3fv","_vertexAttrib3fv","$vertexAttrib4f","_vertexAttrib4f","$vertexAttrib4fv","_vertexAttrib4fv","__proto__","method","TextureManager","_uploadedTextureSources","textureSourceHashmap","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","_updateVramUsage","sign","usage","Stage","isWebglSupported","addVramUsage","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","_freeManagedTextureSource","managed","TextureThrottler","_remove","_sources","_data","processSome","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","zSort","debugFrame","_fillRenderState","_readPixels","_performRender","log","pixels","readPixels","prec","_createRenderTexture","freeUnusedRenderTextures","maxAge","limit","TransitionSettings","_timingFunction","TransitionManager","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","last","pe","idp","sm","pi","ni","nc","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","getValue","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","csy","cex","cey","csx","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getResetValue","getAnimatedElements","sv","hasColorProperty","selector","resetValue","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","aas","action","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","replay","STOPPED","stopNow","isPaused","isPlaying","isStopping","isFinished","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","stopTimingFunctionImpl","AnimationManager","RectangleTexture","_setOptions","_lastGcFrame","_usedVramAlpha","_usedVramNonAlpha","platformType","_mode","ratio","style","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","isWebgl","isC2d","opt","setApplication","app","resume","_updatingFrame","_calculateDt","fixedDt","drawFrame","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","usedMemory","addServiceProvider","serviceprovider","getChildrenByPosition","Application","_Component","_temp_options","booting","__updateFocusCounter","__keypressTimers","__hoveredChild","updateFocusSettings","__keymap","_receiveKeydown","_receiveKeyup","_receiveClick","_receiveHover","_recieveScrollWheel","__options","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","focusedComponent","focusSettings","defaultSetFocusSettings","defaultHandleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","newParts","focusTopDownEvent","events","focusPath","_path$i","focusBottomUpEvent","_path$i2","keyCode","hasTimer","longpress","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","clientX","clientY","fireTopDownScrollWheelHandler","fireBottomUpScrollWheelHandler","affected","_findChildren","_captureScroll","_getTargetChild","_handleScroll","fireBottomUpClickHandler","_child$core$_worldCon","localCoords","_handleClick","fireBottomUpHoverHandler","hoveredBranch","newHoveredBranch","elem","_handleUnhover","diffBranch","_handleHover","lastElement","hoverableChildren","_withinClickableRange","bucket","affectedChildren","cursorX","cursorY","candidates","cw","finalW","ch","finalH","_testCollision","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","factory","_ref$lookupId","Tools","getCanvasTexture","canvasFactory","content","getRoundRect","radius","strokeWidth","strokeColor","fillColor","createRoundRect","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","getShadowRect","blur","margin","createShadowRect","getSvgTexture","url","createSvg","img","ObjMerger","isMf","__mf","mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","ObjectListProxy","ObjectListWrapper","_ObjectListProxy","_wrapper","NoiseTexture","noise","random","REPEAT","HtmlTexture","_htmlElement","_scale","innerHTML","htmlElement","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","opacity","pointerEvents","display","top","overflow","body","StaticTexture","ListComponent","_thisSuper","_reloadVisibleElements","_visibleItems","_index","_started","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","ListItems","_scrollTransition","setIndex","immediate","closest","nElements","realIndex","diff","viewportSize","scrollDelta","getAxisPosition","ps","wasVisible","invisibleItem","getWrapper","setPrevious","setNext","_ObjectListWrapper","_super2","checkStarted","ri","LinearBlurShader","_DefaultShader","_direction","_kernelRadius","uniform1i","BoxBlurShader","BlurShader","_amount","FastBlurComponent","_paddingX","_paddingY","_updateBlurSize","Wrap","WebGLFastBlurComponent","C2dFastBlurComponent","_Component2","_textwrap","paddingX","paddingY","kernelRadius","_amountToKernelRadius","Textwrap","C2dBlurShader","Content","getSpline","_multiSpline","_Component3","_super3","_layers","_output","_buildLayers","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_super4","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomComponent","BloomBase","BloomBaseShader","SmoothScaleComponent","_smoothScale","_iterations","its","_setIterations","scalers","first","useScalers","ContentWrap","Scale","contentWrap","BorderComponent","_borderTop","_borderRight","_borderBottom","_borderLeft","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","Borders","Top","Right","Bottom","Left","WebGLGrayscaleShader","_WebGLDefaultShader","C2dGrayscaleShader","WebGLDefaultShader","_C2dDefaultShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","getWebGLImpl","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","num","_sc","renderPrecision","renderContext","FadeOutShader","_fade","fade","VignetteShader","_magnitude","_intensity","_pivot","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","_radiusY","innerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","PerspectiveShader","MagnifierShader","_magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","bool","spinSync","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","components","tools","lng"],"mappings":"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"}