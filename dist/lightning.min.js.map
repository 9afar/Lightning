{"version":3,"file":"lightning.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRendererUtils.mts","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs","../src/textures/StaticTexture.mjs","../src/components/BorderComponent.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"[Lightning] Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        if (item._reversed && item._recalc == 0) {\n            item._reversed = false;\n        }\n        if (!item._reversed) {\n            const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n            const reversedPos = this._layout.mainAxisSize - endPos;\n            item.flexItem._setMainAxisLayoutPos(reversedPos);\n            if (item._recalc != 0) {\n                item._reversed = true;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n        this._reversed = false;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n\n        /**\n         * Track whether or not there is an alpha channel in this source\n         * @type {boolean}\n         * @private\n         */\n         this._hasAlpha = false;\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this._hasAlpha = (options ? (options.hasAlpha || false) : false);\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('[Lightning] texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this.isRTL = this.ctx.stage.getOption('RTL');\n        \n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px;\n        if (this.isRTL) {\n            px = this._x + (pivotXMul * this._localTa + pivotYMul * this._localTb) - pivotXMul;\n        } else {\n            px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        }\n\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                let calculatedX = this._localPx;\n                if (this.isRTL) {\n                    const parentW = this._element.__parent ? this._parent.w || 0 : this.ctx.stage.getOption('w');\n                    calculatedX = parentW - (this._w || 0) - this._localPx;\n                }\n\n                w.px = pw.px + calculatedX * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += calculatedX * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    let calculatedX = this._localPx;\n                    if (this.isRTL) {\n                      const parentW = this._element.__parent\n                        ? this._parent.w || 0\n                        : this.ctx.stage.getOption(\"w\");\n                      calculatedX = parentW - (this._w || 0) - this._localPx;\n                    }\n                    \n                    r.px = pr.px + calculatedX * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += calculatedX * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Tell the renderer we're rendering a renderToTexture element in this frame\n                    this.ctx.renderToTextureCount++;\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                a.splice(n); // Remove items that were sorted in b array, so that we can sort a\n+               // Beware that the function passed here to Array.sort must be stable\n+               a.sort(ElementCore.sortZIndexedChildren); // Needed because items with same _zIndex may not be ordered by _updateTreeOrder\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    once(name, listener) {\n        const wrapper = (arg1, arg2, arg3) => {\n            listener(arg1, arg2, arg3);\n            this.off(name, wrapper);\n        }\n        wrapper.__originalFunc = listener;\n        this.on(name, wrapper);\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    for (const l of listeners) {\n                        if (l === listener || l.__originalFunc == listener) {\n                            return true;\n                        }\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\n           we need to create a copy to loop over it */\n        for (const listener of [...listeners]) {\n            listener(arg1, arg2, arg3);\n        }\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.once = EventEmitter.prototype.once;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"[Lightning] Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"[Lightning] Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n\n                // free up unused TextTextures immediately as they are not reused anyway\n                if(this['text'] && !oldSource.isUsed()) {\n                    this.manager.freeTextureSource(oldSource);\n                }\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns CSS font setting string for use in canvas context.\n *\n * @param fontFace\n * @param fontStyle\n * @param fontSize\n * @param precision\n * @param defaultFontFace\n * @returns\n */\nexport function getFontSetting(\n    fontFace: string | string[],\n    fontStyle: string,\n    fontSize: number,\n    precision: number,\n    defaultFontFace: string\n): string {\n    let ff = fontFace;\n\n    if (!Array.isArray(ff)) {\n        ff = [ff];\n    }\n\n    let ffs = [];\n    for (let i = 0, n = ff.length; i < n; i++) {\n        let curFf = ff[i];\n        // Replace the default font face `null` with the actual default font face set\n        // on the stage.\n        if (curFf === null) {\n            curFf = defaultFontFace;\n        }\n        if (curFf === \"serif\" || curFf === \"sans-serif\") {\n            ffs.push(curFf);\n        } else {\n            ffs.push(`\"${curFf}\"`);\n        }\n    }\n\n    return `${fontStyle} ${fontSize * precision}px ${ffs.join(\",\")}`\n}\n\n/**\n * Returns true if the given character is a zero-width space.\n *\n * @param space\n */\nexport function isZeroWidthSpace(space: string): boolean {\n    return space === '' || space === '\\u200B';\n}\n\n/**\n * Returns true if the given character is a zero-width space or a regular space.\n *\n * @param space\n */\nexport function isSpace(space: string): boolean {\n    return isZeroWidthSpace(space) || space === ' ';\n}\n\n/**\n * Converts a string into an array of tokens and the words between them.\n *\n * @param tokenRegex\n * @param text\n */\nexport function tokenizeString(tokenRegex: RegExp, text: string): string[] {\n    const delimeters = text.match(tokenRegex) || [];\n    const words = text.split(tokenRegex) || [];\n\n    let final: string[] = [];\n    for (let i = 0; i < words.length; i++) {\n        final.push(words[i]!, delimeters[i]!)\n    }\n    final.pop()\n    return final.filter((word) => word != '');\n}\n\n/**\n * Measure the width of a string accounting for letter spacing.\n *\n * @param context\n * @param word\n * @param space\n */\nexport function measureText(context: CanvasRenderingContext2D, word: string, space: number = 0): number {\n    if (!space) {\n        return context.measureText(word).width;\n    }\n    return word.split('').reduce((acc, char) => {\n        // Zero-width spaces should not include letter spacing.\n        // And since we know the width of a zero-width space is 0, we can skip\n        // measuring it.\n        if (isZeroWidthSpace(char)) {\n            return acc;\n        }\n        return acc + context.measureText(char).width + space;\n    }, 0);\n}\n\nexport interface WrapTextResult {\n    l: string[];\n    n: number[];\n}\n\n/**\n * Applies newlines to a string to have it optimally fit into the horizontal\n * bounds set by the Text object's wordWrapWidth property.\n *\n * @param context\n * @param text\n * @param wordWrapWidth\n * @param letterSpacing\n * @param indent\n */\nexport function wrapText(\n    context: CanvasRenderingContext2D,\n    text: string,\n    wordWrapWidth: number,\n    letterSpacing: number,\n    indent: number\n): WrapTextResult {\n    // Greedy wrapping algorithm that will wrap words as the line grows longer.\n    // than its horizontal bounds.\n    const spaceRegex = / |\\u200B/g;\n    let lines = text.split(/\\r?\\n/g);\n    let allLines: string[] = [];\n    let realNewlines: number[] = [];\n    for (let i = 0; i < lines.length; i++) {\n        let resultLines: string[] = [];\n        let result = '';\n        let spaceLeft = wordWrapWidth - indent;\n        let words = lines[i]!.split(spaceRegex);\n        let spaces = lines[i]!.match(spaceRegex) || [];\n        for (let j = 0; j < words.length; j++) {\n            const space = spaces[j - 1] || '';\n            const word = words[j]!;\n            const wordWidth = measureText(context, word, letterSpacing);\n            const wordWidthWithSpace = wordWidth + measureText(context, space, letterSpacing);\n            if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                // Skip printing the newline if it's the first word of the line that is.\n                // greater than the word wrap width.\n                if (j > 0) {\n                    resultLines.push(result);\n                    result = '';\n                }\n                result += word;\n                spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n            }\n            else {\n                spaceLeft -= wordWidthWithSpace;\n                result += space + word;\n            }\n        }\n\n        resultLines.push(result);\n        result = '';\n\n        allLines = allLines.concat(resultLines);\n\n        if (i < lines.length - 1) {\n            realNewlines.push(allLines.length);\n        }\n    }\n\n    return {l: allLines, n: realNewlines};\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, measureText, wrapText } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace'),\n            this._settings.fontWeight,\n        );\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace'),\n                this._settings.fontWeight,\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || this._stage.getOption('w');\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth = 10;\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n        if (this._stage.getOption('RTL')) {\n            this._context.direction = 'rtl';\n            this._context.textAlign = 'left';\n        }\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * See {@link wrapText}\n     *\n     * @param {string} text\n     * @param {number} wordWrapWidth\n     * @param {number} letterSpacing\n     * @param {number} indent\n     * @returns\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        return wrapText(this._context, text, wordWrapWidth, letterSpacing, indent);\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, isSpace, measureText, tokenizeString } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRendererAdvanced {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        const font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace'),\n            this._settings.fontWeight,\n        );\n        this._context.font = font;\n        this._context.textBaseline = this._settings.textBaseline;\n        return font;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace'),\n                this._settings.fontWeight,\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\n        const w = this._settings.w != 0 ? this._settings.w * precision : this._stage.getOption('w');\n        // const h = this._settings.h * precision;\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        renderInfo.baseFont = this.setFontProperties();\n\n        renderInfo.w = w;\n        renderInfo.width = w;\n        renderInfo.text = this._settings.text;\n        renderInfo.precision = precision;\n        renderInfo.fontSize = fontSize;\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textAlign = this._settings.textAlign;\n        renderInfo.textColor = this._settings.textColor;\n        renderInfo.verticalAlign = this._settings.verticalAlign;\n        renderInfo.highlight = this._settings.highlight;\n        renderInfo.highlightColor = this._settings.highlightColor;\n        renderInfo.highlightHeight = this._settings.highlightHeight;\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\n        renderInfo.highlightOffset = this._settings.highlightOffset;\n        renderInfo.paddingLeft = this._settings.paddingLeft;\n        renderInfo.paddingRight = this._settings.paddingRight;\n        renderInfo.maxLines = this._settings.maxLines;\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\n        renderInfo.textOverflow = this._settings.textOverflow;\n        renderInfo.wordWrap = this._settings.wordWrap;\n        renderInfo.wordWrapWidth = wordWrapWidth;\n        renderInfo.shadow = this._settings.shadow;\n        renderInfo.shadowColor = this._settings.shadowColor;\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\n        renderInfo.shadowBlur = this._settings.shadowBlur;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEy = cutEy;\n        renderInfo.textIndent = this._settings.textIndent * precision;\n        renderInfo.wordBreak = this._settings.wordBreak;\n\n        let text = renderInfo.text;\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\n\n        // Text overflow\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\n        }\n\n        text = this.tokenize(text);\n        text = this.parse(text);\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\n\n        if (renderInfo.textIndent) {\n            text = this.indent(text, renderInfo.textIndent);\n        }\n\n        if (renderInfo.wordBreak) {\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\n            this.resetFontStyle()\n        }\n\n        // Calculate detailed drawing information\n        let x = paddingLeft;\n        let lineNo = 0;\n\n        for (const t of text) {\n            // Wrap text\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\n                x = paddingLeft;\n                lineNo += 1;\n            }\n            t.lineNo = lineNo;\n\n            if (t.text == '\\n') {\n                continue;\n            }\n\n            t.x = x;\n            x += t.width;\n        }\n        renderInfo.lineNum = lineNo + 1;\n\n        if (this._settings.h) {\n            renderInfo.h = this._settings.h;\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\n        } else {\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\n        }\n\n        // This calculates the baseline offset in pixels from the font size.\n        // To retrieve this ratio, you would do this calculation:\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\n        //\n        // This give you the ratio for the baseline, which is then used to figure out\n        // where the baseline is relative to the bottom of the text bounding box.\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\n\n        // Vertical align\n        let vaOffset = 0;\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\n            vaOffset = -baselineOffsetInPx;\n        } else if (renderInfo.verticalAlign == 'middle') {\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\n        } else if (this._settings.verticalAlign == 'bottom') {\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\n        }\n\n        // Calculate lines information\n        renderInfo.lines = []\n        for (let i = 0; i < renderInfo.lineNum; i++) {\n            renderInfo.lines[i] = {\n                width: 0,\n                x: 0,\n                y: renderInfo.lineHeight * i + vaOffset,\n                text: [],\n            }\n        }\n\n        for (let t of text) {\n            renderInfo.lines[t.lineNo].text.push(t);\n        }\n\n        // Filter out white spaces at beginning and end of each line\n        for (const l of renderInfo.lines) {\n            if (l.text.length == 0) {\n                continue;\n            }\n\n            const firstWord = l.text[0].text;\n            const lastWord = l.text[l.text.length - 1].text;\n\n            if (firstWord == '\\n') {\n                l.text.shift();\n            }\n            if (isSpace(lastWord) || lastWord == '\\n') {\n                l.text.pop();\n            }\n        }\n\n\n        // Calculate line width\n        for (let l of renderInfo.lines) {\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\n        }\n\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\n        renderInfo.w = renderInfo.width;\n\n        // Apply maxLinesSuffix\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\n            const index = renderInfo.maxLines - 1;\n            let lastLineText = text.filter((t) => t.lineNo == index)\n            let suffix = renderInfo.maxLinesSuffix;\n            suffix = this.tokenize(suffix);\n            suffix = this.parse(suffix);\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont);\n            for (const s of suffix) {\n                s.lineNo = index;\n                s.x = 0;\n                lastLineText.push(s)\n            }\n\n            const spl = suffix.length + 1\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n            while (_w > renderInfo.width || isSpace(lastLineText[lastLineText.length - spl].text)) {\n                lastLineText.splice(lastLineText.length - spl, 1);\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n                if (lastLineText.length < spl) {\n                    break;\n                }\n            }\n            this.alignLine(lastLineText, lastLineText[0].x)\n\n            renderInfo.lines[index].text = lastLineText;\n            renderInfo.lines[index].width = _w;\n        }\n\n        // Horizontal alignment offset\n        if (renderInfo.textAlign == 'center') {\n            for (let l of renderInfo.lines) {\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\n            }\n        } else if (renderInfo.textAlign == 'right') {\n            for (let l of renderInfo.lines) {\n                l.x = renderInfo.width - l.width - paddingLeft;\n            }\n        }\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n        const paddingLeft = renderInfo.paddingLeft * precision;\n\n        // Set canvas dimensions\n        let canvasWidth = renderInfo.w || renderInfo.width;\n        if (renderInfo.cutSx || renderInfo.cutEx) {\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\n        }\n\n        let canvasHeight = renderInfo.h;\n        if (renderInfo.cutSy || renderInfo.cutEy) {\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\n        }\n\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(canvasHeight);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        // Cut\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        // Highlight\n        if (renderInfo.highlight) {\n            const hlColor = renderInfo.highlightColor || 0x00000000;\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum;\n            for (let i = 0; i < lineNum; i++) {\n                const l = renderInfo.lines[i];\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        // Draw text\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\n        let currentColor = defaultColor;\n        this._context.fillStyle = defaultColor;\n        for (const line of renderInfo.lines) {\n            for (const t of line.text) {\n                let lx = 0;\n\n                if (t.text == '\\n') {\n                    continue;\n                }\n\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\n                    continue;\n                }\n\n                if (t.color != currentColor) {\n                    currentColor = t.color;\n                    this._context.fillStyle = currentColor;\n                }\n\n                this._context.font = t.fontStyle;\n\n                // Draw with letter spacing\n                if (t.letters) {\n                    for (let l of t.letters) {\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                        lx += l.width;\n                    }\n                // Standard drawing\n                } else {\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                }\n            }\n        }\n\n        // Reset text shadow\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        // Reset cut translation\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        // Postprocess renderInfo.lines to be compatible with standard version\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\n        if (renderInfo.maxLines) {\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\n        }\n\n\n        this.renderInfo = renderInfo;\n\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n    tokenize(text) {\n        return tokenizeString(/ |\\u200B|\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g, text);\n    }\n\n    parse(tokens) {\n        let italic = 0;\n        let bold = 0;\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\n        let color = 0;\n\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\n\n        return tokens.map((t) => {\n            if (t == '<i>') {\n                italic += 1;\n                t = '';\n            } else if (t == '</i>' && italic > 0) {\n                italic -= 1;\n                t = '';\n            } else if (t == '<b>') {\n                bold += 1;\n                t = '';\n            } else if (t == '</b>' && bold > 0) {\n                bold -= 1;\n                t = '';\n            } else if (t == '</color>') {\n                if (colorStack.length > 1) {\n                    color -= 1;\n                    colorStack.pop();\n                }\n                t = '';\n            } else if (colorRegexp.test(t)) {\n                const matched = colorRegexp.exec(t);\n                colorStack.push(\n                    StageUtils.getRgbaString(parseInt(matched[1]))\n                );\n                color += 1;\n                t = '';\n\n            }\n\n            return {\n                text: t,\n                italic: italic,\n                bold: bold,\n                color: colorStack[color],\n            }\n        })\n        .filter((o) => o.text != '');\n    }\n\n    applyFontStyle(word, baseFont) {\n        let font = baseFont;\n        if (word.bold) {\n            font = 'bold ' + font;\n        }\n        if (word.italic) {\n            font = 'italic ' + font;\n        }\n        this._context.font = font\n        word.fontStyle = font;\n    }\n\n    resetFontStyle(baseFont) {\n        this._context.font = baseFont;\n    }\n\n    measure(parsed, letterSpacing = 0, baseFont) {\n        for (const p of parsed) {\n            this.applyFontStyle(p, baseFont);\n            p.width = this.measureText(p.text, letterSpacing);\n\n            // Letter by letter detail for letter spacing\n            if (letterSpacing > 0) {\n                p.letters = p.text.split('').map((l) => {return {text: l}});\n                for (let l of p.letters) {\n                    l.width = this.measureText(l.text, letterSpacing);\n                }\n            }\n\n        }\n        this.resetFontStyle(baseFont);\n        return parsed;\n    }\n\n    indent(parsed, textIndent) {\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\n        return parsed;\n    }\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\n    }\n\n    _getBreakIndex(word, width) {\n        const wordLen = word.length;\n        const wordWidth = this.measureText(word);\n\n        if (wordWidth <= width) {\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\n        }\n\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > width) {\n            while (breakIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth > width) {\n                    breakIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (breakIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth < width) {\n                    breakIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    breakIndex -=1;\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                    break;\n                }\n            }\n        }\n        return {breakIndex, truncWordWidth};\n\n    }\n\n    wordBreak(word, width, baseFont) {\n        if (!word.text) {\n            return word\n        }\n        this.applyFontStyle(word, baseFont)\n        const parts = [];\n        let text = word.text;\n        if (!word.letters) {\n            while (true) {\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = truncWordWidth;\n\n                if (breakIndex === text.length) {\n                    break;\n                }\n\n                text = text.slice(breakIndex);\n            }\n        } else {\n            let totalWidth = 0;\n            let letters = [];\n            let breakIndex = 0;\n            for (const l of word.letters) {\n                if (totalWidth + l.width >= width) {\n                    parts.push({...word});\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\n                    parts[parts.length - 1].width = totalWidth;\n                    parts[parts.length - 1].letters = letters;\n                    text = text.slice(breakIndex);\n                    totalWidth = 0;\n                    letters = [];\n                    breakIndex = 0;\n\n                } else {\n                    breakIndex += 1;\n                    letters.push(l);\n                    totalWidth += l.width;\n                }\n            }\n\n            if (totalWidth > 0) {\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = totalWidth;\n                parts[parts.length - 1].letters = letters;\n            }\n        }\n\n        return parts;\n    }\n\n    alignLine(parsed, initialX = 0) {\n        let prevWidth = 0;\n        let prevX = initialX;\n        for (const word of parsed) {\n            if (word.text == '\\n') {\n                continue;\n            }\n            word.x = prevX + prevWidth;\n            prevX = word.x;\n            prevWidth = word.width;\n        }\n\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        if (this.advancedRenderer) {\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\n        } else {\n            return new TextTextureRenderer(stage, canvas, settings);\n        }\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontBaselineRatio() {\n        return this._fontBaselineRatio;\n    }\n    \n    set fontBaselineRatio(v) {\n        if (this._fontBaselineRatio !== v) {\n            this._fontBaselineRatio = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontWeight() {\n        return this._fontWeight;\n    }\n\n    set fontWeight(v) {\n        if (this._fontWeight !== v) {\n            this._fontWeight = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get wordBreak() {\n        return this._wordBreak;\n    }\n\n    set wordBreak(v) {\n        if (this._wordBreak !== v) {\n            this._wordBreak = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (v != 'center' && this.stage.getOption('RTL')) {\n            v = v == \"right\" ? \"left\" : \"right\";\n        }\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    get advancedRenderer() {\n        return this._advancedRenderer;\n    }\n\n    set advancedRenderer(v) {\n        if (this._advancedRenderer !== v) {\n            this._advancedRenderer = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    set textIndent(v) {\n        if (this._textIndent !== v) {\n            this._textIndent = v;\n            this._changed();\n        }\n    }\n\n    get textIndent() {\n        return this._textIndent;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontWeight !== 'normal') parts.push(\"fw\" + this.fontWeight);\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        const gl = this.stage.gl;\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = (args.advancedRenderer)\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\n              : new TextTextureRenderer(this.stage, canvas, args);\n            \n            const p = renderer.draw();\n\n            const texParams = {};\n\n            const sharpCfg = this.stage.getOption('fontSharp');\n            let sharpen = false;\n\n            // Prevent text blur when text texture is downscaled\n            if (Utils.isBoolean(sharpCfg)) {\n                sharpen = sharpCfg;\n            } else if (Utils.isObject(sharpCfg)) {\n                const precision = this.stage.getRenderPrecision();\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\n            }\n\n            if (gl && sharpen) {\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false,\n                        texParams: texParams,\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false,\n                    texParams: texParams,\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontWeight !== \"normal\") nonDefaults[\"fontWeight\"] = this.fontWeight;\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontWeight = this._fontWeight;\n        obj.fontBaselineRatio = this._fontBaselineRatio;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.wordBreak = this._wordBreak;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.textIndent = this._textIndent;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        obj.advancedRenderer = this._advancedRenderer;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontWeight = \"normal\";\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._wordBreak = false;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._textIndent = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\nproto._advancedRenderer = false;\nproto._fontBaselineRatio = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if( index < this._items.length){\n\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n\n                    const prevItem = this._items[index];\n\n                    // Doesn't exist yet: overwrite current.\n                    this._items[index] = item;\n\n                    if (item.ref) {\n                        this._refs[item.ref] = item;\n                    }\n\n                    this.onSet(item, index, prevItem);\n                } else {\n                    throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n                }\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        if (index >= 0 && index < this._items.length) {\n            const item = this._items[index];\n\n            if (item.ref) {\n                this._refs[item.ref] = undefined;\n            }\n\n            this._items.splice(index, 1);\n\n            this.onRemove(item, index);\n\n            return item;\n        } else {\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\n        }\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n        this._updateCollision();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestors() {\n        const a = [];\n        let p = this;\n        while (p) {\n            a.push(p);\n            p = p.__parent;\n        }\n        return a;\n    }\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"[Lightning] Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.stage.removeUpdateSourceTexture(this.__displayedTexture)\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get collision() {\n        return this._collision;\n    }\n\n    set collision(v) {\n        this._collision = v;\n    }\n\n    _updateCollision() {\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\n            /**\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\n             * This narrows down the search for elements with active collision.\n            */\n            this.__parent.collision = 2;\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {};\n        tree[ref] = {};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOffscreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc(this);\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    static bindProp(name, func = null) {\n        return {__propertyBinding: true, __name: name, __func: func};\n    }\n\n    __bindProperty(propObj, targetObj, targetProp) {\n        // 1. find binding position: find object and property name to be bound\n        const obj = targetObj;\n        const prop = targetProp;\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\n\n        // 2. create setters for every given dependency\n        for (let i = 0; i < propDependencies.length; i++) {\n            const propName = propDependencies[i];\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\n\n            if (!this.hasOwnProperty(propName)) {\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\n                Object.defineProperty(this, propName, {\n                    set: (value) => {\n                        this[`__prop_${propName}`] = value;\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\n                            __obj[__prop] = __func(this);\n                        }\n                    },\n                    get: () => this[`__prop_${propName}`]\n                });\n            } else {\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\n            }\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc(ctx) {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template(ctx));\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f: f, a: context.store};\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\n                    if (value.__propertyBinding === true) {\n                        // Allow binding entire objects to text property\n                        store.push(value);\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                    } else {\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\n                    const shaderCursor = `${cursor}[\"shader\"]`\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    this.parsePropertyBindings(value, context, shaderCursor);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    static parsePropertyBindings(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n\n    _construct() {\n    }\n\n    _build() {\n    }\n\n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {};\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while (c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while (ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n \n                    if (Utils.isFunction(fireEvent)) {\n                        return fireEvent(...args);\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n        this.ctx = null;\n        this.renderState = null;\n        this.gl = null;\n\n        delete this.ctx;\n        delete this.renderState;\n        delete this.gl;\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n\n        this.gl = null;\n        delete this.gl;\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n        this.gl = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('[Lightning] Error: Could not initialize shader.');\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('[Lightning] gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n        }\n\n        this._attributeLocations = null;\n        this._currentUniformValues = null;\n        this.fragmentShaderSource = null;\n        this._program = null;\n        this.gl = null;\n        this._uniformLocations = null;\n        this.vertexShaderSource = null;  \n\n        delete this.vertexShaderSource;\n        delete this._program;        \n        delete this._currentUniformValues;\n        delete this.fragmentShaderSource;\n        delete this.gl;\n        delete this._uniformLocations;\n        delete this._attributeLocations;\n\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            \n            gl.bindTexture(gl.TEXTURE_2D, glTexture);\n            gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n        this._compressedTextureExtensions = {\n            astc: stage.gl.getExtension('WEBGL_compressed_texture_astc'),\n            etc1: stage.gl.getExtension('WEBGL_compressed_texture_etc1'),\n            s3tc: stage.gl.getExtension('WEBGL_compressed_texture_s3tc'),\n            pvrtc: stage.gl.getExtension('WEBGL_compressed_texture_pvrtc'),\n        }\n    }\n\n    getCompressedTextureExtensions() {\n        return this._compressedTextureExtensions\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n\n        this.shaderPrograms = null;\n        this._compressedTextureExtensions = null;\n\n        delete this.shaderPrograms;\n        delete this._compressedTextureExtensions;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n\n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = { format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE };\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2 / w, 2 / h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n\n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    _getBytesPerPixel(fmt, type) {\n        const gl = this.stage.gl;\n\n        if (fmt === gl.RGBA) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 4;\n\n                case gl.UNSIGNED_SHORT_4_4_4_4:\n                    return 2;\n\n                case gl.UNSIGNED_SHORT_5_5_5_1:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGBA format');\n            }\n        }\n        else if (fmt === gl.RGB) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 3;\n\n                case gl.UNSIGNED_BYTE_5_6_5:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGB format');\n            }\n        }\n        else {\n            throw new Error('Invalid format specified in call to _getBytesPerPixel()');\n        }\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n        let compressed = false;\n        if (options.renderInfo) {\n            compressed = options.renderInfo.compressed || false\n        }\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        if (compressed) {\n            this.stage.platform.uploadCompressedGlTexture(gl, textureSource, source);\n            return glTexture;\n        }\n         \n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n        \n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n        \n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        // calculate bytes per pixel for vram usage tracking\n        glTexture.bytesPerPixel = this._getBytesPerPixel(texOptions.format, texOptions.type);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                cache.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n\n        this.tintManager = null;\n        delete this.tintManager;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n\n        this._items = null;\n        this._worker = null;\n\n        delete this._items;\n        delete this._worker;        \n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            // the constructing of the basepath fails\n            // if location.hash contains a slash\n            var hasHashPath = /#.*?\\//;\n            if(hasHashPath.test(base)){\n                base = base.replace(/#.*$/,'');\n            }\n\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        // Alternative handler to avoid RAF when idle\n        this._loopHandler = null;\n        this._idleLoopCounter = 0;\n        this._idleLoopDelay = 60;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                this._imageWorker = new ImageWorker();\n            }\n        }\n\n        this._registerVisibilityChangeHandler();\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n\n        clearInterval(this._loopHandler);\n\n        this._removeKeyHandler();\n        this._removeClickHandler();\n        this._removeHoverHandler();\n        this._removeScrollWheelHandler();\n        this._removeVisibilityChangeHandler();\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    switchLoop() {\n        if (this._idleLoopCounter < this._idleLoopDelay) {\n            this._idleLoopCounter++;\n            return;\n        }\n        if (!this.stage.ctx.hasRenderUpdates()) {\n            this.stopLoop();\n            this._loopHandler = setInterval(() => {\n                this.stage.updateFrame();\n                this.stage.idleFrame();\n                if (this.stage.ctx.hasRenderUpdates()) {\n                    clearInterval(this._loopHandler);\n                    this.startLoop();\n                };\n            }, 1000 / 60);\n        } else {\n            this._idleLoopCounter = 0;\n        }\n    }\n\n    loop() {\n        let self = this;\n        let lp = function () {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.updateFrame();\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\n                    self.switchLoop();\n                }\n                self.stage.renderFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadCompressedGlTexture(gl, textureSource, source, options) {\n        const view = !source.pvr ? new DataView(source.mipmaps[0]) : source.mipmaps[0];\n        gl.compressedTexImage2D(\n            gl.TEXTURE_2D,\n            0,\n            source.glInternalFormat,\n            source.pixelWidth,\n            source.pixelHeight,\n            0,\n            view,\n        )\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else if (source instanceof HTMLCanvasElement) {\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n            } else if (source.width > 0 && source.height > 0) {\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\n                // Width/Height check added because of https://github.com/rdkcentral/Lightning/issues/412\n                const ctx = source.getContext('2d');\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    /**\n     * KTX File format specification\n     * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\n     **/\n    handleKtxLoad(cb, src) {\n        var self = this;\n        return function () {\n            var arraybuffer = this.response;\n            var view = new DataView(arraybuffer);\n\n            // identifier, big endian\n            var targetIdentifier = 3632701469\n            if (targetIdentifier !== (view.getUint32(0) + view.getUint32(4) + view.getUint32(8))) {\n                cb('Parsing failed: identifier ktx mismatch:', src)\n            }\n\n            var littleEndian = (view.getUint32(12) === 16909060) ? true : false;\n            var data = {\n                glType: view.getUint32(16, littleEndian),\n                glTypeSize: view.getUint32(20, littleEndian),\n                glFormat: view.getUint32(24, littleEndian),\n                glInternalFormat: view.getUint32(28, littleEndian),\n                glBaseInternalFormat: view.getUint32(32, littleEndian),\n                pixelWidth: view.getUint32(36, littleEndian),\n                pixelHeight: view.getUint32(40, littleEndian),\n                pixelDepth: view.getUint32(44, littleEndian),\n                numberOfArrayElements: view.getUint32(48, littleEndian),\n                numberOfFaces: view.getUint32(52, littleEndian),\n                numberOfMipmapLevels: view.getUint32(56, littleEndian),\n                bytesOfKeyValueData: view.getUint32(60, littleEndian),\n                kvps: [],\n                mipmaps: [],\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            const props = (obj) => {\n                const p = [];\n                for (let v in obj) {\n                    p.push(obj[v]);\n                }\n                return p;\n            }\n\n            const formats = Object.values(self.stage.renderer.getCompressedTextureExtensions())\n                .filter((obj) => obj != null)\n                .map((obj) => props(obj))\n                .reduce((prev, current) => prev.concat(current));\n\n            if (!formats.includes(data.glInternalFormat)) {\n                console.warn(\"[Lightning] Unrecognized texture extension format:\", src, data.glInternalFormat, self.stage.renderer.getCompressedTextureExtensions());\n            }\n\n            var offset = 64\n            // Key Value Pairs of data start at byte offset 64\n            // But the only known kvp is the API version, so skipping parsing.\n            offset += data.bytesOfKeyValueData;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                var imageSize = view.getUint32(offset);\n                offset += 4;\n                data.mipmaps.push(view.buffer.slice(offset, imageSize));\n                offset += imageSize\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    handlePvrLoad(cb, src) {\n        return function () {\n            // pvr header length in 32 bits\n            const pvrHeaderLength = 13;\n            // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\n            const pvrFormatEtc1 = 0x8D64;\n            const pvrWidth = 7;\n            const pvrHeight = 6;\n            const pvrMipmapCount = 11;\n            const pvrMetadata = 12;\n            const arrayBuffer = this.response;\n            const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\n            const dataOffset = header[pvrMetadata] + 52;\n            const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\n\n            var data = {\n                glInternalFormat: pvrFormatEtc1,\n                pixelWidth: header[pvrWidth],\n                pixelHeight: header[pvrHeight],\n                numberOfMipmapLevels: header[pvrMipmapCount],\n                mipmaps: [],\n                pvr: true,\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            let offset = 0\n            let width = data.pixelWidth;\n            let height = data.pixelHeight;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n                const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\n                data.mipmaps.push(view);\n                offset += level;\n                width = width >> 1;\n                height = height >> 1;\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    loadSrcTexture({ src, hasAlpha }, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.toLowerCase().indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        let isKtx = src.indexOf('.ktx') >= 0;\n        let isPvr = src.indexOf('.pvr') >= 0;\n        if (isKtx || isPvr) {\n            let request = new XMLHttpRequest();\n            request.addEventListener(\n                \"load\", isKtx ? this.handleKtxLoad(cb, src) : this.handlePvrLoad(cb, src)\n            );\n            request.open(\"GET\", src);\n            request.responseType = \"arraybuffer\";\n            request.send();\n            cancelCb = function () {\n                request.abort();\n            }\n        } else if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function (err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function ({ imageBitmap, hasAlphaChannel }) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function () {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0, 5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function (err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function () {\n                cb(null, {\n                    source: image,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function () {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts) || canvas.getContext('webgl2', opts);\n\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n    registerClickHandler(clickHandler) {\n        this._clickListener = e => {\n            clickHandler(e);\n        };\n        window.addEventListener('mousedown', this._clickListener);\n    }\n\n    _removeClickHandler() {\n        if (this._clickListener) {\n            window.removeEventListener('mousedown', this._clickListener);\n        }\n    }\n\n    registerHoverHandler(hoverHandler) {\n        this._hoverListener = e => {\n            hoverHandler(e);\n        };\n        window.addEventListener('mousemove', this._hoverListener);\n    }\n\n    _removeHoverHandler() {\n        if (this._hoverListener) {\n            window.removeEventListener('mousemove', this._hoverListener);\n        }\n    }\n\n    registerScrollWheelHandler(registerScrollWheelHandler) {\n        this._scrollWheelListener = e => {\n            registerScrollWheelHandler(e);\n        }\n        window.addEventListener('wheel', this._scrollWheelListener);\n    }\n\n    _removeScrollWheelHandler() {\n        if (this._scrollWheelListener) {\n            window.removeEventListener('wheel', this._scrollWheelListener);\n        }\n    }\n\n    /**\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\n     */\n    _registerVisibilityChangeHandler() {\n        this._visibilityChangeHandler = () => {\n            if (document.visibilityState === 'visible') {\n                this.stage.root.core.setHasRenderUpdates(2);\n                this.stage.renderFrame();\n            }\n        }\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\n    }\n\n    _removeVisibilityChangeHandler() {\n        if (this._visibilityChangeHandler) {\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\nimport Stage from './Stage.mjs';\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n\n        // add VRAM tracking if using the webgl renderer\n        this._updateVramUsage(textureSource, 1);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    _updateVramUsage(textureSource, sign) {\n        const nativeTexture = textureSource.nativeTexture;\n        var usage;\n\n        // do nothing if webgl isn't even supported\n        if (!Stage.isWebglSupported())\n            return;\n\n        // or if there is no native texture\n        if (!textureSource.isLoaded())\n            return;\n\n        // or, finally, if there is no bytes per pixel specified\n        if (!nativeTexture.hasOwnProperty('bytesPerPixel') || isNaN(nativeTexture.bytesPerPixel))\n            return;\n\n        usage = sign * (textureSource.w * textureSource.h * nativeTexture.bytesPerPixel);\n\n        this.stage.addVramUsage(usage, textureSource.hasAlpha);\n    }\n\n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n\n            // add VRAM tracking if using the webgl renderer\n            this._updateVramUsage(textureSource, -1);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n        this.stage = null;\n\n        delete this._sources;\n        delete this._data;\n        delete this.stage;\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n\n        this.renderToTextureCount = 0;\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n\n        this.stage = null;\n        this.root = null;\n\n        this.renderState = null;\n        this.renderExec = null;\n        this._renderTexturePool = null;\n        this._zSorts = null;\n\n        delete this.stage;\n        delete this.root;\n        delete this.renderState;\n        delete this.renderExec;\n        delete this._renderTexturePool;\n        delete this._zSorts;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        const debugFrame = this.stage.getOption('debugFrame');\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            this._readPixels();\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n\n        if (debugFrame) {\n            console.log(`[Lightning] RTT Renders in frame: ${this.renderToTextureCount}`)\n        }\n\n        // Block OpenGL pipeline to prevent framebuffer flickering\n        // on certain devices\n        if (this.stage.getOption('readPixelsAfterDraw') &&\n            this.renderToTextureCount >= this.stage.getOption('readPixelsAfterDrawThreshold')\n        ) {\n            if (debugFrame) {\n                console.log(`[Lightning] readPixelsAfterDraw behavior triggered`)\n            }\n            this._readPixels();\n        }\n\n        this.renderToTextureCount = 0;\n    }\n\n    _readPixels() {\n        const pixels = new Uint8Array(4);\n        const gl = this.stage.gl;\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        // attempt to track VRAM usage more accurately by accounting for different color channels\n        this._usedVramAlpha = 0;\n        this._usedVramNonAlpha = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            if (this.getOption('devicePixelRatio') !== 1) {\n                const ratio = this.getOption('devicePixelRatio');\n                // set correct display sie\n                this.getCanvas().style.width = this._options['w'] / ratio  + 'px';\n                this.getCanvas().style.height = this._options['h'] / ratio + 'px';\n            }\n\n            // set display buffer size\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('fontSharp', { precision: 0.6666666667, fontSize: 24 })\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n        opt('devicePixelRatio', 1)       \n        opt('readPixelsAfterDraw', false);\n        opt('readPixelsAfterDrawThreshold', 0);\n        opt('debugFrame', false);\n        opt('forceTxCanvasSource', false);\n        opt('pauseRafLoopOnIdle', false);\n        opt('RTL', false);\n\n        if (o['devicePixelRatio'] != null && o['devicePixelRatio'] !== 1) {\n            this._options['precision'] *= o['devicePixelRatio']\n            this._options['w'] *= o['devicePixelRatio']\n            this._options['h'] *= o['devicePixelRatio']\n        }\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\n            console.log('[Lightning] Using image worker!');\n        }\n\n        if (this.application.getOption('debug') && this.c2d) {\n            console.log('[Lightning] Using canvas2d renderer');\n        }\n\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n\n        // clear last rendered frame\n        if (this.gl) {\n            this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        } else if (this.c2d) {\n            this.c2d.clearRect(\n                0, 0, this.c2d.canvas.width, this.c2d.canvas.height\n            );\n        }\n\n        this.gl = null;\n        this.c2d = null;\n        this.ctx = null;\n        this._options = null;\n        this.platform = null;\n        this.textureManager = null;\n        this._renderer = null;\n\n        delete this.gl;\n        delete this.c2d;\n        delete this.ctx;\n        delete this._options;\n        delete this.platform;\n        delete this.textureManager;\n        delete this._renderer;\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n\n    _performUpdateSource() {\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n    }\n\n    _calculateDt() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n    }\n\n    updateFrame() {\n        this._calculateDt();\n        this.emit('frameStart');\n        this._performUpdateSource();\n        this.emit('update');\n    }\n\n    idleFrame() {\n        this.textureThrottler.processSome();\n        this.emit('frameEnd');\n        this.frameCounter++;\n    }\n\n    renderFrame() {\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    drawFrame() {\n        // Maintain original functionality of `drawFrame()` while retaining the\n        // RAF mitigration feature from: https://github.com/rdkcentral/Lightning/pull/402\n        // The full functionality of this method is relied directly by our own unit tests and\n        // the unit tests of third party users\n        this.updateFrame();\n        this.renderFrame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    addVramUsage(delta, alpha) {\n        if (alpha) {\n            this._usedVramAlpha += delta;\n        }\n        else {\n            this._usedVramNonAlpha += delta;\n        }\n    }\n\n    get usedVramAlpha() {\n        return this._usedVramAlpha;\n    }\n\n    get usedVramNonAlpha() {\n        return this._usedVramNonAlpha;\n    }\n\n    get usedVram() {\n        return this._usedVramAlpha + this._usedVramNonAlpha;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            if (this.application.getOption('debug')) {\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n            }\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y) {\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x, y, children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n        this.__hoveredChild = null;\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n\n        if (this.getOption(\"enablePointer\")) {\n            this.stage.platform.registerClickHandler((e) => {\n                this._receiveClick(e);\n            });\n\n            this.stage.platform.registerHoverHandler((e) => {\n                this._receiveHover(e);\n            });\n\n            this.stage.platform.registerScrollWheelHandler((e) => {\n                this._recieveScrollWheel(e);\n            });\n\n            this.cursor = 'default';\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n        opt('enablePointer', false);\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n\n                if (this.getOption('debug')) {\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\n                }\n\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while (true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    _recieveScrollWheel(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\n            }\n        }\n    }\n\n    fireTopDownScrollWheelHandler(event, obj) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children).reverse();\n        let n = affected.length;\n\n        while (n--) {\n            const child = affected[n];\n            if (child && child[event]) {\n                child._captureScroll(obj);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    fireBottomUpScrollWheelHandler(event, obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[event]) {\n                child._handleScroll(obj);\n                return true;\n            }\n            child = child.parent;\n        }\n        return false;\n    }\n\n    _receiveClick(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpClickHandler(obj);\n        }\n    }\n\n    fireBottomUpClickHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[\"_handleClick\"]) {\n                const { px, py } = child.core._worldContext;\n                const cx = px * precision;\n                const cy = py * precision;\n\n                const localCoords = {\n                    x: clientX - cx,\n                    y: clientY - cy\n                }\n\n                const returnValue = child._handleClick(target, localCoords);\n                if (returnValue !== false) {\n                    break;\n                }\n            }\n            child = child.parent;\n        }\n    }\n\n    _receiveHover(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpHoverHandler(obj);\n        }\n    }\n\n    fireBottomUpHoverHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n\n        // Only fire handlers when pointer target changes\n        if (target !== this.__hoveredChild) {\n\n            let hoveredBranch = new Set();\n            let newHoveredBranch = new Set();\n\n            if (target) {\n                newHoveredBranch = new Set(target.getAncestors());\n            }\n\n            if (this.__hoveredChild) {\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\n                    const c = Component.getComponent(elem);\n                    if (c[\"_handleUnhover\"]) {\n                        c._handleUnhover(elem);\n                    }\n                    if (elem.parent && elem.parent.cursor) {\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\n                    }\n                }\n            }\n\n            this.__hoveredChild = target;\n\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\n            for (const elem of diffBranch) {\n                const c = Component.getComponent(elem);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(elem);\n                }\n            }\n\n            // New element hover cursor\n            const lastElement = diffBranch[0];\n            if (lastElement && lastElement.cursor) {\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\n            }\n\n            // Rerun _handleHover for target element in case it's been hovered\n            // back from its child\n            if (diffBranch.length === 0 && target) {\n                const c = Component.getComponent(target);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(target);\n                }\n            }\n        }\n    }\n\n    _getTargetChild(clientX, clientY) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children);\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\n\n        hoverableChildren.sort((a, b) => {\n            // Sort by zIndex and then id\n            if (a.zIndex > b.zIndex) {\n                return 1;\n            } else if (a.zIndex < b.zIndex) {\n                return -1;\n            } else {\n                return a.id > b.id ? 1 : -1;\n            }\n        });\n\n        if (hoverableChildren.length) {\n            // Assume target has highest zIndex (id when zIndex equal)\n            return hoverableChildren.slice(-1)[0];\n        } else {\n            return null;\n        }\n    }\n\n    _findChildren(bucket, children) {\n        let n = children.length;\n        while (n--) {\n            const child = children[n];\n            // only add active children\n            if (child.__active && child.collision) {\n                if (child.collision === true) {\n                    bucket.push(child);\n                }\n                if (child.hasChildren()) {\n                    this._findChildren(bucket, child.children);\n                }\n            }\n        }\n        return bucket;\n    }\n\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\n        let n = affectedChildren.length;\n        const candidates = [];\n\n        // loop through affected children\n        // and perform collision detection\n        while (n--) {\n            const child = affectedChildren[n];\n            const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n            const ctx = child.core._worldContext;\n\n            const cx = ctx.px * precision;\n            const cy = ctx.py * precision;\n            const cw = child.finalW * ctx.ta * precision;\n            const ch = child.finalH * ctx.td * precision;\n\n            if (cx > this.stage.w || cy > this.stage.h) {\n                continue;\n            }\n\n            if (child.parent.core._scissor) {\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\n                    continue\n            }\n\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\n                candidates.push(child);\n            }\n        }\n        return candidates;\n    }\n\n    _testCollision(px, py, cx, cy, cw, ch) {\n        if (px >= cx &&\n            px <= cx + cw &&\n            py >= cy &&\n            py <= cy + ch) {\n            return true;\n        }\n        return false;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onerror = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error('[Lightning]', e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._blend = 0;\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fc = 0x00ffffff;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set blend(p) {\n        this._blend = Math.min(Math.max(p, 0), 1);\n    }\n\n    set radius(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._radius = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\n            }\n            else if (v.length === 4) {\n                this._radius = v;\n            }\n            else {\n                this._radius = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set topLeft(num) {\n        this._radius[0] = num;\n        this.redraw();\n    }\n\n    get topLeft() {\n        return this._radius[0];\n    }\n\n    set topRight(num) {\n        this._radius[1] = num;\n        this.redraw();\n    }\n\n    get topRight() {\n        return this._radius[1];\n    }\n\n    set bottomRight(num) {\n        this._radius[2] = num;\n        this.redraw();\n    }\n\n    get bottomRight() {\n        return this._radius[2];\n    }\n\n    set bottomLeft(num) {\n        this._radius[3] = num;\n        this.redraw();\n    }\n\n    get bottomLeft() {\n        return this._radius[4];\n    }\n\n    set strokeColor(argb) {\n        this._sc = argb;\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get strokeColor() {\n        return this._sc;\n    }\n\n    set fillColor(argb) {\n        this._fc = argb;\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get fillColor() {\n        return this._fc;\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    uniform float alpha;\n    uniform float fill;\n    uniform float blend;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n        \n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from './DefaultShader.mjs';\n\nexport default class FadeOutShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._fade = [0, 0, 0, 0];\n    }\n\n    set top(num) {\n        this._fade[0] = num;\n        this.redraw();\n    }\n\n    get top() {\n        return this._fade[0];\n    }\n\n    set right(num) {\n        this._fade[1] = num;\n        this.redraw();\n    }\n\n    get right() {\n        return this._fade[1];\n    }\n\n    set bottom(num) {\n        this._fade[2] = num;\n        this.redraw();\n    }\n\n    get bottom() {\n        return this._fade[2];\n    }\n\n    set left(num) {\n        this._fade[3] = num;\n        this.redraw();\n    }\n\n    get left() {\n        return this._fade[3];\n    }\n\n    set fade(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._fade = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\n            }\n            else if (v.length === 4) {\n                this._fade = v;\n            }\n            else {\n                this._fade = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._fade = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get fade() {\n        return this._fade;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const fade = this._fade.map((f) => f * renderPrecision);\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nFadeOutShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 fade;\n    \n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 point = vTextureCoord.xy * resolution.xy;\n        \n        vec2 pos1;\n        vec2 pos2;\n        vec2 d;\n        float c;\n        float t = 0.0;\n             \n        if(fade[0] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x, point.y + fade[0]);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[1] > 0.0) {\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[2] > 0.0) {\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[3] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x + fade[3], point.y);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivot = [0.5, 0.5];\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\n        this.redraw()\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v)) {\n            this._pivot = v;\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    set pivotX(v) {\n        this._pivot[0] = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotY(v) {\n        this._pivot[1] = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform vec2 pivot;\n\n    void main() {\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b) * vColor;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._pivot = [0, 0];\n        this._ic = 0xffffffff;\n        this._normalizedIC = this._getNormalizedColor(this._ic);\n        this._oc = 0x00ffffff;\n        this._normalizedOC = this._getNormalizedColor(this._oc);\n        this._radius = 0;\n    }\n\n    set radiusX(v) {\n        this.radius = v;\n    }\n\n    get radiusX() {\n        return this._radius;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set innerColor(argb) {\n        this._ic = argb;\n        this._normalizedIC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get innerColor() {\n        return this._ic;\n    }\n\n    set outerColor(argb) {\n        this._oc = argb;\n        this._normalizedOC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set color(argb) {\n        this.innerColor = argb;\n    }\n\n    get color() {\n        return this.innerColor;\n    }\n\n    get outerColor() {\n        return this._ic;\n    }\n\n    set x(f) {\n        this._x = f;\n        this.redraw();\n    }\n\n    set y(f) {\n        this._y = f;\n        this.redraw();\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v) && v.length === 2) {\n            this._pivot = v;\n        }\n        else if(Array.isArray(v)) {\n            this._pivot = [v[0], v[1] || v[0]];\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivot() {\n        return this._pivot[0];\n    }\n\n    set pivotY(f) {\n        this._pivot[1] = f;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotX(f) {\n        this._pivot[0] = f;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        if(this._x) {\n            this._pivot[0] = this._x / owner.w;\n        }\n        if(this._y) {\n            this._pivot[1] = this._y / owner.h;\n        }\n\n        if(this._radius === 0) {\n            this._radius = owner.w * 0.5;\n        }\n\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\n    }\n}\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec2 pivot;\n    uniform vec4 innerColor;\n    uniform vec4 outerColor;\n    uniform float radius;\n    uniform float radiusY;\n    uniform float alpha;\n    uniform float fill;\n    uniform float aspectRatio;\n    \n    void main() {\n        vec2 point = vTextureCoord.xy * resolution;\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class MagnifierShader extends DefaultShader {\n\tconstructor(context) {\n\t  super(context);\n\t  this._x = 0;\n\t  this._y = 0;\n\t  this._w = 0;\n\t  this._h = 0;\n\t  this._radius = 0;\n\t  this._magnification = 0.6;\n\t}\n  \n\tget x() {\n\t  return this._x;\n\t}\n  \n\tset x(v) {\n\t  this._x = v;\n\t  this.redraw();\n\t}\n  \n\tget y() {\n\t  return this._y;\n\t}\n  \n\tset y(v) {\n\t  this._y = v;\n\t  this.redraw();\n\t}\n  \n\tget w() {\n\t  return this._w;\n\t}\n  \n\tset w(v) {\n\t  this._w = v;\n\t  this.redraw();\n\t}\n  \n\tget h() {\n\t  return this._h;\n\t}\n  \n\tset h(v) {\n\t  this._h = v;\n\t  this.redraw();\n\t}\n  \n\tget magnification() {\n\t  return this._magnification;\n\t}\n  \n\tset magnification(v) {\n\t  this._magnification = v;\n\t  this.redraw();\n\t}\n  \n\tget radius() {\n\t  return this._radius;\n\t}\n  \n\tset radius(v) {\n\t  this._radius = v;\n\t  this.redraw();\n\t}\n  \n\tsetupUniforms(operation) {\n\t  super.setupUniforms(operation);\n  \n\t  const owner = operation.shaderOwner;\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\n\t  this._setUniform(\n\t\t'radius',\n\t\t(this._radius + 0.5) * renderPrecision,\n\t\tthis.gl.uniform1f\n\t  );\n\t  this._setUniform(\n\t\t'resolution',\n\t\tnew Float32Array([\n\t\t  owner._w * renderPrecision,\n\t\t  owner._h * renderPrecision\n\t\t]),\n\t\tthis.gl.uniform2fv\n\t  );\n\t}\n \n\tuseDefault() {\n\t  return this._w === 0 && this._h === 0;\n\t}\n  }\n  \n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n  \n  MagnifierShader.fragmentShaderSource = `\n\t  #ifdef GL_ES\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\tprecision highp float;\n\t\t# else\n\t\tprecision lowp float;\n\t\t# endif\n\t  #endif\n\n\t  varying vec2 vTextureCoord;\n\t  varying vec4 vColor;\n\t  uniform sampler2D uSampler;\n\t  uniform float x;\n\t  uniform float y;\n\t  uniform float w;\n\t  uniform float h;\n\t  uniform vec2 resolution;\n\t  uniform float radius;\n\t  uniform float magnification;\n  \n\t  float roundBox(vec2 p, vec2 b, float r) {\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\n\t\t  return smoothstep(1.0, 0.0, d);\n\t  }\n\n\t  float inside(vec2 v) {\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\n\t\treturn s.x * s.y;   \n      }\n  \n\t  void main(void) {\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n\t\tvec2 size = vec2(w, h) / 2.0;\n\t\tfloat b = roundBox(pos, size, radius);\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\n\t  }\n  `;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class SpinnerShader2 extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._period = 1;\n        this._stroke = 0;\n        this._showDot = true;\n        this._clockwise = true;\n        this._bc = 0xff000000;\n        this._normalizedBC = this._getNormalizedColor(this._bc);\n        this._c = 0xffffffff;\n        this._normalizedC = this._getNormalizedColor(this._c);\n    }\n\n    set radius(v) {\n        if(v === 0) {\n            v = 1;\n        }\n        this._radius = v;\n    }\n\n    set stroke(value) {\n        this._stroke = Math.abs(value);\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    set color(argb) {\n        this._c = argb;\n        this._normalizedC = this._getNormalizedColor(argb);\n    }\n\n    get color() {\n        return this._c;\n    }\n\n    set backgroundColor(argb) {\n        this._bc = argb;\n        this._normalizedBC = this._getNormalizedColor(argb);\n    }\n\n    get backgroundColor() {\n        return this._sc;\n    }\n\n    set showDot(bool) {\n        this._showDot = bool;\n    }\n\n    get showDot() {\n        return this._showDot;\n    }\n\n    set clockwise(bool) {\n        this._clockwise = bool;\n    }\n\n    get clockwise() {\n        return this._clockwise;\n    }\n\n    set period(v) {\n        this._period = v;\n    }\n\n    get period() {\n        return this._period;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const radius = this._radius || (owner._w / 2);\n\n        if(this._stroke === 0) {\n            this._stroke = radius * 0.33;\n        }\n\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\n        this._setUniform('radius',  radius, this.gl.uniform1f);\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\n            this.redraw();\n        }\n    }\n}\n\nSpinnerShader2.spinSync = Date.now();\n\nSpinnerShader2.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n    uniform float direction;\n    uniform float radius;\n    uniform float time;\n    uniform float stroke;\n    uniform float showDot;\n    uniform float period;\n    uniform float alpha;\n    \n    float circleDist(vec2 p, float radius){\n        return length(p) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\n        \n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n        \n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\n        \n        float strokeRad = stroke * 0.5;\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Spinner2: SpinnerShader2,\n        FadeOut: FadeOutShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        Magnifier: MagnifierShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n"],"names":["StageUtils","mergeNumbers","v1","v2","p","rgb","r","g","b","rgba","a","getRgbString","color","getRgbaString","toFixed","getRgbaStringFromArray","Math","floor","getRgbaComponentsNormalized","argb","getRgbComponentsNormalized","getRgbaComponents","getArgbNumber","max","min","v","mergeColors","c1","c2","round","mergeMultiColors","c","t","n","length","i","r1","g1","b1","a1","mergeMultiColorsEqual","mergeColorAlpha","alpha","rad","deg","PI","getTimingBezier","d","xc","xb","xa","yc","yb","ya","time","cbx","cbxd","dx","it","minT","maxT","getTimingFunction","str","s","indexOf","parts","substr","split","console","warn","parseFloat","isNaN","Utils$1","Utils","isFunction","value","isNumber","isInteger","isBoolean","isString","clone","isObjectLiteral","Array","isArray","getDeepClone","cloneObjShallow","obj","keys","Object","merge","obj1","obj2","isObject","type","isPlainObject","constructor","getArrayIndex","index","arr","getModuloIndex","len","ceil","equalValues","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","this","setToArray","result","forEach","push","iteratorToArray","iterator","iteratorResult","next","done","isUcChar","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","isNode","isPS4","isZiggo","Base","defaultSetter","name","patchObject","settings","names","patchObjectProperty","error","setter","setSetting","charAt","__local","local","func","SpacingCalculator","getSpacing","mode","numberOfItems","remainingSpace","itemGaps","spacePerGap","spacingBefore","spacingBetween","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_lines","init","_getTotalCrossAxisSize","align","crossAxisSize","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","recursiveResizeOccured","setItemPositions","totalCrossAxisSize","total","FlexUtils","getParentAxisSizeWithPadding","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","getRelAxisSize","funcW","_allowRelAxisSizeFunction","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","isZeroAxisSize","getAxisLayoutPos","x","y","setAxisLayoutPos","pos","setAxisLayoutSize","size","getAxisMinSize","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","flexItem","shrink","resizeAxis","_horizontal","resizeMainAxis","resizeCrossAxis","getPaddingOffset","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","getMarginOffset","marginLeft","marginTop","getTotalMargin","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","getShrunkSize","SizeGrower","_grownSize","grow","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","maxSize","_getMainAxisMaxSizeSetting","maxGrow","getGrownSize","ItemPositioner","lineLayout","position","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","performLayout","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","shrinker","_calcCrossAxisMaxLayoutSize","getMainAxisMinSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","crossAxisMinSize","_getCrossAxisMinSize","mainAxisContentSize","layoutLines","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","resizingMainAxis","isMainAxisFitToContents","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","finalize","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","_reversed","_recalc","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","shrunk","layoutTree","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","targetCrossAxisSize","ctr","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_changedDimensions","changedDimensions","_changedContents","changedContents","direction","f","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","padding","patch","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","minWidth","minHeight","maxWidth","maxHeight","margin","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","_getCrossAxisLayoutSize","_getMainAxisPadding","_getMainAxisMargin","FlexTarget","_target","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","layoutFlexTree","isChanged","_enableFlex","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","setParent","from","to","isFlexContainer","_changedChildren","setVisible","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","changeHeight","_updateRecalc","forceLayout","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","setOriginalXWithoutUpdatingLayout","setOriginalYWithoutUpdatingLayout","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","_hasAlpha","hasAlpha","loadError","addTexture","has","add","removeTexture","delete","incActiveTextureCount","becomesUsed","decActiveTextureCount","becomesUnused","isResultTexture","forEachEnabledElement","cb","texture","elements","hasEnabledElements","forEachActiveElement","element","active","getRenderWidth","getRenderHeight","allowCleanup","isUsed","load","cancel","isLoading","isLoaded","isError","reload","free","forceSync","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","forceRenderUpdate","update","frameCounter","forceUpdateRenderCoords","_updateTextureCoords","nativeTexture","clearNativeTexture","replaceNativeTexture","newNativeTexture","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","_updateDimensions","e","onTextureSourceLoadError","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","renderOffscreen","setHasRenderUpdates","_setRecalc","colorize","_getTextureSource","textureManager","updateResultTexture","hasResultTexture","resultTextureInUse","resultTexture","getResultTexture","core","mustRenderToTexture","_hasRenderUpdates","deactivate","release","renderTextureReused","releaseRenderTexture","reuseTextureAsRenderTexture","hasRenderTexture","getRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","isRTL","getOption","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","offsetX","hasFlexLayout","_disableFuncX","_updateLocalTranslateDelta","_triggerRecalcTranslate","offsetY","_disableFuncY","disableFuncW","disableFuncH","scaleX","_updateLocalTransform","scaleY","scale","pivotX","_updateLocalTranslate","pivotY","pivot","mountX","mountY","mount","rotation","prev","_updateLocalAlpha","_updateEnabledFlag","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","px","pivotXMul","pivotYMul","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","addChildAt","child","splice","setChildAt","removeChildAt","removeChildren","syncChildren","removed","added","order","moveChild","fromIndex","toIndex","isEstimate","setTextureCoords","ulx","uly","brx","bry","displayedTextureSource","setDisplayedTextureSource","textureSource","isRoot","setAsRoot","root","coordsWidth","coordsHeight","isAncestorOf","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","forceZIndexContext","prevZContext","_getZIndexedDescs","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","colorUl","colorUr","colorBl","colorBr","onUpdate","onAfterUpdate","onAfterCalcs","shader","prevShader","activeShader","defaultShader","activeShaderOwner","clipping","clipbox","_setShaderOwnerChildrenRecursive","_hasRenderContext","renderContext","texturizer","_enableRenderToTexture","_disableRenderToTexture","_renderAdvanced","isWhite","hasSimpleTexCoords","_stashTexCoords","_stashedTexCoords","_unstashTexCoords","_stashColors","_stashedColors","_unstashColors","isVisible","outOfBounds","boundsMargin","_applyRelativeDimFuncs","pw","calculatedX","__parent","ta","td","tb","tc","pr","updateTreeOrder","useRenderToTexture","bboxW","bboxH","sx","sy","ex","ey","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","renderToTextureCount","cleared","ignore","cache","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","setTexturizer","zSort","ptr","m","j","sort","mergeResult","localTa","localTb","localTc","localTd","renderUpdates","getCornerPoints","getRenderTextureCoords","relX","relY","getAbsoluteCoords","collectAtCoord","inBound","inScissor","tx","ty","sc","_ensureLayout","EventEmitter","_hasEventListeners","on","listener","_eventFunction","_eventListeners","combiner","once","wrapper","arg1","arg2","arg3","off","__originalFunc","current","listeners","l","map","removeListener","emit","listenerCount","removeAllListeners","object","addAsMixin","cls","Shader","coreContext","_initialized","_elements","create","renderer","createShader","isShader","isValidShaderType","getWebGL","getC2d","addElement","removeElement","cleanup","redraw","useDefault","addEmpty","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","incActiveCount","decActiveCount","_checkForNewerReusableTextureSource","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","_getLookupId","_getSourceLoader","isValid","_getIsValid","_updateSource","addUpdateSourceTexture","getTextureSource","getReusableTextureSource","newSource","oldSource","resizeMode","clipX","clipY","_clearResizeMode","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","desiredSize","choppedOffPixels","enableClipping","disableClipping","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","getNonDefaults","nonDefaults","precision","ph","isAutosizeTexture","isTexture","ImageTexture","super","_src","src","fc","charCodeAt","platform","loadSrcTexture","getFontSetting","fontFace","fontStyle","fontSize","defaultFontFace","ff","ffs","curFf","isZeroWidthSpace","space","isSpace","measureText","context","word","reduce","acc","char","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","getPrecision","setFontProperties","font","fontWeight","textBaseline","_load","document","fonts","fontSetting","check","text","catch","then","draw","loadPromise","drawText","_draw","_calculateRenderInfo","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","linePositionX","linePositionY","textAlign","globalAlpha","fillRect","translate","drawLines","verticalAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","spaceRegex","allLines","realNewlines","resultLines","spaceLeft","words","spaces","match","wordWidthWithSpace","concat","TextTextureRendererAdvanced","baseFont","fontBaselineRatio","wordBreak","wrapWidth","tokenize","parse","measure","resetFontStyle","lineNo","lineNum","baselineOffsetInPx","vaOffset","firstWord","lastWord","shift","pop","lastLineText","filter","spl","alignLine","canvasWidth","canvasHeight","hlColor","hlOffset","defaultColor","currentColor","letters","tokenizeString","tokenRegex","delimeters","final","tokens","italic","bold","colorStack","colorRegexp","test","matched","exec","o","applyFontStyle","parsed","_getBreakIndex","breakIndex","totalWidth","initialX","prevWidth","prevX","TextTexture","advancedRenderer","_text","_fontStyle","_fontBaselineRatio","_fontSize","_fontWeight","_fontFace","_wordWrap","_wordWrapWidth","_wordBreak","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_advancedRenderer","_letterSpacing","_textIndent","toString","args","cloneArgs","gl","getDrawingCanvas","texParams","sharpCfg","sharpen","getRenderPrecision","TEXTURE_MAG_FILTER","NEAREST","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","Transition","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","start","targetValue","isAttached","reset","delay","_updateDrawValue","finish","stop","removeActive","pause","play","addActive","getDrawValue","attached","isRunning","progress","dt","delayLeft","duration","invokeListeners","updateTargetValue","timingFunctionImpl","_timingFunctionImpl","startValue","skipDelay","isTransition","ObjectList","_refs","get","first","last","addAt","currentIndex","createItem","setAt","ref","onAdd","replaceByRef","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","getAt","remove","removeAt","onRemove","clear","onSync","isItem","_getRefs","clearRef","setRef","_setByObject","_setByArray","refs","crefs","cref","idx","_equalsArray","array","same","marker","newItems","_setItems","prevItems","ElementChildList","_connectParent","prevChildList","childList","_setParent","gc","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","_throwError","removeTag","_addTag","_updateAttachedFlag","_unsetTagsParent","_setTagsParent","_updateCollision","getDepth","depth","getAncestor","getAncestors","getAncestorAtDepth","levels","getSharedAncestor","o1","o2","l1","l2","_isAttached","_isEnabled","_isActive","withinBoundsMargin","newAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","_setActiveFlag","_unsetActiveFlag","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","_onInactive","_onResize","_getRenderWidth","_getRenderHeight","renderWidth","renderHeight","finalX","finalY","finalW","finalH","textureIsLoaded","loadTexture","_enableTextureError","prevTexture","prevSource","sourceChanged","unknownSize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","tempty","tag","tags","tagSet","parentTreeTags","comp","Map","set","_getByTag","getTags","setTags","removes","adds","hasTag","currentTags","addTag","list","_tag","mtag","values","res","level","resn","stag","tagRoot","sel","path","select","selectors","_select","isRef","pointIdx","arrowIdx","_selectChilds","subPath","getLocationString","localTags","getSettings","getPrettyString","colorKeys","JSON","stringify","k","childStr","isEmpty","childArray","missing","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","collision","_collision","colorTop","colorBottom","colorLeft","colorRight","_allowChildrenAccess","hasChildren","rect","rectangleTexture","enableTextTexture","forceUpdate","rtt","rttLazy","getTexture","paths","firstCharCode","message","animation","animations","createAnimation","transition","_getTransition","_setTransition","transitions","smooth","setSmooth","fastForward","_transitions","isTransitionSettings","defaultTransitionSettings","createSettings","_removeTransition","getSmooth","isColorProperty","toLowerCase","toJSON","tree","collectChildren","getProperties","properties","props","key","StateMachine","setupStateMachine","targetConstructor","router","setPrototypeOf","_initStateMachine","stateMachineType","StateMachineType","_sm","fire","event","_hasMethod","_getState","_state","__path","_inState","statePath","currentStatePath","state","getStateByPath","currentState","__level","_getStateAtLevel","_hasMember","member","_setState","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","apply","_stateIndex","__index","_routedType","_getMostSpecificHandledMember","memberNames","cur","memberName","getStateMemberAlias","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","StateMachineRouter","arguments","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","curState","getPrototypeOf","_supportsSpread","__supportsSpread","code","supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","stateMap","members","_getStateMemberNames","_getStateMemberNamesForType","_isStateLocalMember","_createStateMap","_addState","parentState","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","Component","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","application","updateFocusPath","_refocus","bindProp","__propertyBinding","__func","__bindProperty","propObj","targetObj","targetProp","prop","propDependencies","propName","__obj","__prop","hasName","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","_focus","newTarget","prevTarget","_unfocus","_focusChange","_getFocused","_setFocusSettings","_handleFocusSettings","hasFinalFocus","_focusPath","hasFocus","cparent","seekAncestorByType","getSharedAncestorComponent","ancestor","isComponent","signals","alterSignals","passSignals","alterPassSignals","signal","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","fireAncestors","startsWith","_doFireAncestors","collectSubComponents","subs","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","getElement","getElementCore","getTextureWidth","getTextureHeight","WebGLCoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","getAttribsDataByteOffset","getQuadContents","CoreQuadOperation","shaderOwner","scissor","quads","getElementWidth","getElementHeight","WebGLCoreQuadOperation","extraAttribsDataByteOffset","getNormalRenderTextureCoords","coords","getProjection","renderExec","_projection","projection","CoreRenderExecutor","destroy","_reset","_bindRenderTexture","_setScissor","_clearRenderTexture","execute","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","getScissor","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","compile","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getUniformLocation","location","getAttribLocation","glProgram","compiled","_valueEquals","_valueClone","setUniformValue","glFunction","clonedValue","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","call","WebGLShader","shaderPrograms","initialize","initialized","_uniform","_attrib","_setUniform","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getVertexAttribPointerOffset","setExtraAttribsInBuffer","_getProjection","getFlipY","DefaultShader","vertexAttribPointer","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","DefaultShader$1","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","copyRenderTexture","WebGLRenderer","_compressedTextureExtensions","astc","getExtension","etc1","s3tc","pvrtc","getCompressedTextureExtensions","shaderProgram","createCoreRenderExecutor","createCoreRenderState","createRenderTexture","createTexture","texImage2D","RGBA","texParameteri","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","freeRenderTexture","deleteFramebuffer","deleteTexture","_getBytesPerPixel","fmt","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","RGB","UNSIGNED_BYTE_5_6_5","compressed","premultiplyAlpha","flipBlueRed","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","uploadCompressedGlTexture","uploadGlTexture","bytesPerPixel","mca","cx","cy","extra","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","setRenderContext","setSimpleTc","setWhite","getRenderContext","getSimpleTc","getWhite","C2dCoreQuadOperation","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","globalCompositeOperation","beginPath","closePath","fill","clearRect","_restoreContext","restore","save","_equalScissorAreas","clip","C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","tintTexture","getTintTexture","drawImage","transparency","gradient","createLinearGradient","addColorStop","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","_addMemoryUsage","delta","addMemoryUsage","_hasCache","_getCache","prevMemUsage","memoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","SparkShader","elementPostion","paint","SparkRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_loopHandler","_idleLoopCounter","_idleLoopDelay","_imageWorker","_registerVisibilityChangeHandler","clearInterval","_removeKeyHandler","_removeClickHandler","_removeHoverHandler","_removeScrollWheelHandler","_removeVisibilityChangeHandler","startLoop","loop","stopLoop","switchLoop","setInterval","updateFrame","idleFrame","lp","renderFrame","requestAnimationFrame","view","pvr","mipmaps","DataView","compressedTexImage2D","glInternalFormat","pixelWidth","pixelHeight","HTMLImageElement","HTMLVideoElement","ImageBitmap","HTMLCanvasElement","getImageData","handleKtxLoad","arraybuffer","getUint32","littleEndian","glType","glTypeSize","glFormat","glBaseInternalFormat","pixelDepth","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","bytesOfKeyValueData","kvps","includes","imageSize","handlePvrLoad","arrayBuffer","header","Int32Array","dataOffset","pvrtcData","Uint8Array","byteOffset","cancelCb","isPng","isKtx","isPvr","request","addEventListener","Image","crossOrigin","removeAttribute","createWebGLContext","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","createCanvasContext","getHrTime","performance","now","nextFrame","changes","registerKeydownHandler","keyhandler","_keydownListener","registerKeyupHandler","_keyupListener","removeEventListener","registerClickHandler","clickHandler","_clickListener","registerHoverHandler","hoverHandler","_hoverListener","registerScrollWheelHandler","_scrollWheelListener","_visibilityChangeHandler","visibilityState","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","_getDefaultFlag","cap","DITHER","setFlag","setBuffer","change","setFramebuffer","setRenderbuffer","setProgram","program","va","equal","setActiveTexture","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","setPixelStorei","pname","param","_getPixelStoreiIndex","migrate","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","_initStateManager","switchState","$useProgram","$bindBuffer","fb","$bindFramebuffer","$bindRenderbuffer","$enable","$disable","$viewport","$scissor","$disableVertexAttribArray","$enableVertexAttribArray","$vertexAttribPointer","normalized","stride","$activeTexture","$bindTexture","$pixelStorei","$stencilFuncSeparate","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","$stencilMaskSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","$stencilOpSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","$blendColor","red","green","blue","_blendColor","$blendEquation","_blendEquation","$blendEquationSeparate","modeRGB","modeAlpha","_blendEquationSeparate","$blendFunc","sfactor","dfactor","_blendFunc","$blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","$clearColor","_clearColor","$clearDepth","_clearDepth","$clearStencil","_clearStencil","$colorMask","_colorMask","$cullFace","_cullFace","$depthFunc","_depthFunc","$depthMask","flag","_depthMask","$depthRange","zNear","zFar","_depthRange","$frontFace","_frontFace","$lineWidth","_lineWidth","$polygonOffset","factor","units","_polygonOffset","$sampleCoverage","invert","_sampleCoverage","$stencilFunc","_stencilFunc","$stencilMask","_stencilMask","$stencilOp","_stencilOp","$vertexAttrib1f","indx","_vertexAttrib1f","$vertexAttrib1fv","_vertexAttrib1fv","$vertexAttrib2f","_vertexAttrib2f","$vertexAttrib2fv","_vertexAttrib2fv","$vertexAttrib3f","z","_vertexAttrib3f","$vertexAttrib3fv","_vertexAttrib3fv","$vertexAttrib4f","_vertexAttrib4f","$vertexAttrib4fv","_vertexAttrib4fv","__proto__","method","WebGLStateManager$1","TextureManager","_uploadedTextureSources","textureSourceHashmap","usedMemory","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","_updateVramUsage","sign","usage","Stage","isWebglSupported","addVramUsage","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","_freeManagedTextureSource","managed","TextureThrottler","_remove","_sources","_data","processSome","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","debugFrame","_fillRenderState","_readPixels","_performRender","log","pixels","readPixels","prec","_createRenderTexture","freeUnusedRenderTextures","maxAge","limit","TransitionSettings","_timingFunction","timingFunction","TransitionManager","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","pe","idp","sm","pi","ni","nc","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","getValue","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","csy","cex","cey","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getResetValue","getAnimatedElements","sv","hasColorProperty","selector","resetValue","rv","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","actions","aas","action","stopTimingFunction","stopTimingFunctionImpl","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","replay","STOPPED","stopNow","isPaused","isPlaying","isStopping","isFinished","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","AnimationManager","RectangleTexture","_setOptions","_lastGcFrame","_usedVramAlpha","_usedVramNonAlpha","platformType","_mode","ratio","style","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","isWebgl","isC2d","opt","setApplication","app","resume","_updatingFrame","_calculateDt","fixedDt","drawFrame","usedVramAlpha","usedVramNonAlpha","usedVram","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","addServiceProvider","serviceprovider","getChildrenByPosition","Application","_temp_options","booting","__updateFocusCounter","__keypressTimers","__hoveredChild","updateFocusSettings","__keymap","_receiveKeydown","_receiveKeyup","_receiveClick","_receiveHover","_recieveScrollWheel","__options","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","focusedComponent","focusSettings","defaultSetFocusSettings","defaultHandleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","newParts","focusPath","focusTopDownEvent","events","focusBottomUpEvent","keyCode","hasTimer","longpress","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","clientX","clientY","fireTopDownScrollWheelHandler","fireBottomUpScrollWheelHandler","affected","_findChildren","_captureScroll","_getTargetChild","_handleScroll","fireBottomUpClickHandler","localCoords","_handleClick","fireBottomUpHoverHandler","hoveredBranch","newHoveredBranch","elem","_handleUnhover","diffBranch","_handleHover","lastElement","hoverableChildren","_withinClickableRange","bucket","affectedChildren","cursorX","cursorY","candidates","cw","ch","_testCollision","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","content","factory","Tools","getCanvasTexture","canvasFactory","getRoundRect","radius","strokeWidth","strokeColor","fillColor","createRoundRect","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","getShadowRect","blur","createShadowRect","getSvgTexture","url","createSvg","img","ObjMerger","isMf","__mf","mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","ObjectListProxy","ObjectListWrapper","_wrapper","NoiseTexture","noise","random","REPEAT","HtmlTexture","_htmlElement","_scale","htmlElement","html","innerHTML","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","opacity","pointerEvents","display","top","overflow","body","ListItems","checkStarted","_reloadVisibleElements","_started","setIndex","_index","ri","realIndex","LinearBlurShader","_direction","_kernelRadius","kernelRadius","uniform1i","BoxBlurShader","BlurShader","_amount","C2dFastBlurComponent","Textwrap","C2dBlurShader","Content","_textwrap","_paddingX","_paddingY","getSpline","_multiSpline","_updateBlurSize","paddingX","paddingY","_amountToKernelRadius","WebGLFastBlurComponent","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_layers","_output","_buildLayers","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomBaseShader","SmoothScaleComponent","ContentWrap","Scale","_smoothScale","_iterations","smoothScale","its","_setIterations","scalers","useScalers","contentWrap","WebGLGrayscaleShader","WebGLDefaultShader","C2dGrayscaleShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","graining","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","aspectRatio","inputValue","maxDerivative","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","getWebGLImpl","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","blend","topLeft","num","topRight","bottomRight","bottomLeft","_sc","renderPrecision","FadeOutShader","_fade","right","bottom","left","fade","VignetteShader","_magnitude","_intensity","_pivot","intensity","magnitude","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","period","angle","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","radiusX","radiusY","_radiusY","innerColor","outerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","strength","ambient","fudge","rx","ry","pivotZ","PerspectiveShader","MagnifierShader","_magnification","magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","showDot","bool","clockwise","spinSync","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","StaticTexture","components","FastBlurComponent","Wrap","BloomComponent","BloomBase","BorderComponent","Borders","Top","Right","Bottom","Left","_borderTop","_borderRight","_borderBottom","_borderLeft","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorder","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","borders","ListComponent","_visibleItems","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","_scrollTransition","immediate","closest","nElements","diff","viewportSize","scrollDelta","getAxisPosition","ps","wasVisible","invisibleItem","getWrapper","setPrevious","setNext","itemSize","viewportScrollOffset","itemScrollOffset","scrollTransitionSettings","scrollTransition","progressAnimation","roll","rollMin","rollMax","invertDirection","tools","lng"],"mappings":"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"}