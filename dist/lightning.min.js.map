{"version":3,"file":"lightning.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRendererUtils.mjs","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs","../src/textures/StaticTexture.mjs","../src/components/BorderComponent.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"[Lightning] Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        if (item._reversed && item._recalc == 0) {\n            item._reversed = false;\n        }\n        if (!item._reversed) {\n            const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n            const reversedPos = this._layout.mainAxisSize - endPos;\n            item.flexItem._setMainAxisLayoutPos(reversedPos);\n            if (item._recalc != 0) {\n                item._reversed = true;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n        this._reversed = false;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n\n        /**\n         * Track whether or not there is an alpha channel in this source\n         * @type {boolean}\n         * @private\n         */\n         this._hasAlpha = false;\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this._hasAlpha = (options ? (options.hasAlpha || false) : false);\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('[Lightning] texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                w.px = pw.px + this._localPx * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += this._localPx * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    r.px = pr.px + this._localPx * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += this._localPx * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Tell the renderer we're rendering a renderToTexture element in this frame\n                    this.ctx.renderToTextureCount++;\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    once(name, listener) {\n        const wrapper = (arg1, arg2, arg3) => {\n            listener(arg1, arg2, arg3);\n            this.off(name, wrapper);\n        }\n        wrapper.__originalFunc = listener;\n        this.on(name, wrapper);\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    for (const l of listeners) {\n                        if (l === listener || l.__originalFunc == listener) {\n                            return true;\n                        }\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\n           we need to create a copy to loop over it */\n        for (const listener of [...listeners]) {\n            listener(arg1, arg2, arg3);\n        }\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.once = EventEmitter.prototype.once;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"[Lightning] Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"[Lightning] Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n\n                // free up unused TextTextures immediately as they are not reused anyway\n                if(this['text'] && !oldSource.isUsed()) {\n                    this.manager.freeTextureSource(oldSource);\n                }\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/**\n * Returns CSS font setting string for use in canvas context.\n *\n * @private\n * @param {string | string[]} fontFace\n * @param {string} fontStyle\n * @param {number} fontSize\n * @param {number} precision\n * @param {string} defaultFontFace\n * @returns {string}\n */\nexport function getFontSetting(fontFace, fontStyle, fontSize, precision, defaultFontFace) {\n    let ff = fontFace;\n\n    if (!Array.isArray(ff)) {\n        ff = [ff];\n    }\n\n    let ffs = [];\n    for (let i = 0, n = ff.length; i < n; i++) {\n        let curFf = ff[i];\n        // Replace the default font face `null` with the actual default font face set\n        // on the stage.\n        if (curFf === null) {\n            curFf = defaultFontFace;\n        }\n        if (curFf === \"serif\" || curFf === \"sans-serif\") {\n            ffs.push(curFf);\n        } else {\n            ffs.push(`\"${curFf}\"`);\n        }\n    }\n\n    return `${fontStyle} ${fontSize * precision}px ${ffs.join(\",\")}`\n}\n\n/**\n * Returns true if the given character is a zero-width space.\n *\n * @param {string} space\n * @returns {boolean}\n */\nexport function isZeroWidthSpace(space) {\n    return space === '' || space === '\\u200B';\n}\n\n/**\n * Returns true if the given character is a zero-width space or a regular space.\n *\n * @param {string} space\n * @returns {boolean}\n */\nexport function isSpace(space) {\n    return isZeroWidthSpace(space) || space === ' ';\n}\n\n/**\n * Converts a string into an array of tokens and the words between them.\n *\n * @param {RegExp} tokenRegex\n * @param {string} text\n * @returns {string[]}\n */\nexport function tokenizeString(tokenRegex, text) {\n    const delimeters = text.match(tokenRegex) || [];\n    const words = text.split(tokenRegex) || [];\n\n    let final = [];\n    for (let i = 0; i < words.length; i++) {\n        final.push(words[i], delimeters[i])\n    }\n    final.pop()\n    return final.filter((word) => word != '');\n}\n\n/**\n * Measure the width of a string accounting for letter spacing.\n *\n * @param {CanvasRenderingContext2D} context\n * @param {string} word\n * @param {number} space\n * @returns\n */\nexport function measureText(context, word, space = 0) {\n    if (!space) {\n        return context.measureText(word).width;\n    }\n    return word.split('').reduce((acc, char) => {\n        // Zero-width spaces should not include letter spacing.\n        // And since we know the width of a zero-width space is 0, we can skip\n        // measuring it.\n        if (isZeroWidthSpace(char)) {\n            return acc;\n        }\n        return acc + context.measureText(char).width + space;\n    }, 0);\n}\n\n/**\n * Applies newlines to a string to have it optimally fit into the horizontal\n * bounds set by the Text object's wordWrapWidth property.\n *\n * @param {CanvasRenderingContext2D} context\n * @param {string} text\n * @param {number} wordWrapWidth\n * @param {number} letterSpacing\n * @param {number} indent\n * @returns\n */\nexport function wrapText(context, text, wordWrapWidth, letterSpacing, indent) {\n    // Greedy wrapping algorithm that will wrap words as the line grows longer.\n    // than its horizontal bounds.\n    const spaceRegex = / |\\u200B/g;\n    let lines = text.split(/\\r?\\n/g);\n    let allLines = [];\n    let realNewlines = [];\n    for (let i = 0; i < lines.length; i++) {\n        let resultLines = [];\n        let result = '';\n        let spaceLeft = wordWrapWidth - indent;\n        let words = lines[i].split(spaceRegex);\n        let spaces = lines[i].match(spaceRegex) || [];\n        for (let j = 0; j < words.length; j++) {\n            const space = spaces[j - 1] || '';\n            const word = words[j];\n            const wordWidth = measureText(context, word, letterSpacing);\n            const wordWidthWithSpace = wordWidth + measureText(context, space, letterSpacing);\n            if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                // Skip printing the newline if it's the first word of the line that is.\n                // greater than the word wrap width.\n                if (j > 0) {\n                    resultLines.push(result);\n                    result = '';\n                }\n                result += word;\n                spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n            }\n            else {\n                spaceLeft -= wordWidthWithSpace;\n                result += space + word;\n            }\n        }\n\n        resultLines.push(result);\n        result = '';\n\n        allLines = allLines.concat(resultLines);\n\n        if (i < lines.length - 1) {\n            realNewlines.push(allLines.length);\n        }\n    }\n\n    return {l: allLines, n: realNewlines};\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, measureText, wrapText } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace'),\n        );\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace')\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || this._stage.getOption('w');\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth = 10;\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * See {@link wrapText}\n     *\n     * @param {string} text\n     * @param {number} wordWrapWidth\n     * @param {number} letterSpacing\n     * @param {number} indent\n     * @returns\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        return wrapText(this._context, text, wordWrapWidth, letterSpacing, indent);\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, isSpace, measureText, tokenizeString } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRendererAdvanced {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        const font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace')\n        );\n        this._context.font = font;\n        this._context.textBaseline = this._settings.textBaseline;\n        return font;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace')\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\n        const w = this._settings.w != 0 ? this._settings.w * precision : this._stage.getOption('w');\n        // const h = this._settings.h * precision;\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        renderInfo.baseFont = this.setFontProperties();\n\n        renderInfo.w = w;\n        renderInfo.width = w;\n        renderInfo.text = this._settings.text;\n        renderInfo.precision = precision;\n        renderInfo.fontSize = fontSize;\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textAlign = this._settings.textAlign;\n        renderInfo.textColor = this._settings.textColor;\n        renderInfo.verticalAlign = this._settings.verticalAlign;\n        renderInfo.highlight = this._settings.highlight;\n        renderInfo.highlightColor = this._settings.highlightColor;\n        renderInfo.highlightHeight = this._settings.highlightHeight;\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\n        renderInfo.highlightOffset = this._settings.highlightOffset;\n        renderInfo.paddingLeft = this._settings.paddingLeft;\n        renderInfo.paddingRight = this._settings.paddingRight;\n        renderInfo.maxLines = this._settings.maxLines;\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\n        renderInfo.textOverflow = this._settings.textOverflow;\n        renderInfo.wordWrap = this._settings.wordWrap;\n        renderInfo.wordWrapWidth = wordWrapWidth;\n        renderInfo.shadow = this._settings.shadow;\n        renderInfo.shadowColor = this._settings.shadowColor;\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\n        renderInfo.shadowBlur = this._settings.shadowBlur;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEy = cutEy;\n        renderInfo.textIndent = this._settings.textIndent * precision;\n        renderInfo.wordBreak = this._settings.wordBreak;\n\n        let text = renderInfo.text;\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\n\n        // Text overflow\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\n        }\n\n        text = this.tokenize(text);\n        text = this.parse(text);\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\n\n        if (renderInfo.textIndent) {\n            text = this.indent(text, renderInfo.textIndent);\n        }\n\n        if (renderInfo.wordBreak) {\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\n            this.resetFontStyle()\n        }\n\n        // Calculate detailed drawing information\n        let x = paddingLeft;\n        let lineNo = 0;\n\n        for (const t of text) {\n            // Wrap text\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\n                x = paddingLeft;\n                lineNo += 1;\n            }\n            t.lineNo = lineNo;\n\n            if (t.text == '\\n') {\n                continue;\n            }\n\n            t.x = x;\n            x += t.width;\n        }\n        renderInfo.lineNum = lineNo + 1;\n\n        if (this._settings.h) {\n            renderInfo.h = this._settings.h;\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\n        } else {\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\n        }\n\n        // This calculates the baseline offset in pixels from the font size.\n        // To retrieve this ratio, you would do this calculation:\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\n        //\n        // This give you the ratio for the baseline, which is then used to figure out\n        // where the baseline is relative to the bottom of the text bounding box.\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\n\n        // Vertical align\n        let vaOffset = 0;\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\n            vaOffset = -baselineOffsetInPx;\n        } else if (renderInfo.verticalAlign == 'middle') {\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\n        } else if (this._settings.verticalAlign == 'bottom') {\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\n        }\n\n        // Calculate lines information\n        renderInfo.lines = []\n        for (let i = 0; i < renderInfo.lineNum; i++) {\n            renderInfo.lines[i] = {\n                width: 0,\n                x: 0,\n                y: renderInfo.lineHeight * i + vaOffset,\n                text: [],\n            }\n        }\n\n        for (let t of text) {\n            renderInfo.lines[t.lineNo].text.push(t);\n        }\n\n        // Filter out white spaces at beginning and end of each line\n        for (const l of renderInfo.lines) {\n            if (l.text.length == 0) {\n                continue;\n            }\n\n            const firstWord = l.text[0].text;\n            const lastWord = l.text[l.text.length - 1].text;\n\n            if (firstWord == '\\n') {\n                l.text.shift();\n            }\n            if (isSpace(lastWord) || lastWord == '\\n') {\n                l.text.pop();\n            }\n        }\n\n\n        // Calculate line width\n        for (let l of renderInfo.lines) {\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\n        }\n\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\n        renderInfo.w = renderInfo.width;\n\n        // Apply maxLinesSuffix\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\n            const index = renderInfo.maxLines - 1;\n            let lastLineText = text.filter((t) => t.lineNo == index)\n            let suffix = renderInfo.maxLinesSuffix;\n            suffix = this.tokenize(suffix);\n            suffix = this.parse(suffix);\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont);\n            for (const s of suffix) {\n                s.lineNo = index;\n                s.x = 0;\n                lastLineText.push(s)\n            }\n\n            const spl = suffix.length + 1\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n            while (_w > renderInfo.width || isSpace(lastLineText[lastLineText.length - spl].text)) {\n                lastLineText.splice(lastLineText.length - spl, 1);\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n                if (lastLineText.length < spl) {\n                    break;\n                }\n            }\n            this.alignLine(lastLineText, lastLineText[0].x)\n\n            renderInfo.lines[index].text = lastLineText;\n            renderInfo.lines[index].width = _w;\n        }\n\n        // Horizontal alignment offset\n        if (renderInfo.textAlign == 'center') {\n            for (let l of renderInfo.lines) {\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\n            }\n        } else if (renderInfo.textAlign == 'right') {\n            for (let l of renderInfo.lines) {\n                l.x = renderInfo.width - l.width - paddingLeft;\n            }\n        }\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n        const paddingLeft = renderInfo.paddingLeft * precision;\n\n        // Set canvas dimensions\n        let canvasWidth = renderInfo.w || renderInfo.width;\n        if (renderInfo.cutSx || renderInfo.cutEx) {\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\n        }\n\n        let canvasHeight = renderInfo.h;\n        if (renderInfo.cutSy || renderInfo.cutEy) {\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\n        }\n\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(canvasHeight);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        // Cut\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        // Highlight\n        if (renderInfo.highlight) {\n            const hlColor = renderInfo.highlightColor || 0x00000000;\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum;\n            for (let i = 0; i < lineNum; i++) {\n                const l = renderInfo.lines[i];\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        // Draw text\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\n        let currentColor = defaultColor;\n        this._context.fillStyle = defaultColor;\n        for (const line of renderInfo.lines) {\n            for (const t of line.text) {\n                let lx = 0;\n\n                if (t.text == '\\n') {\n                    continue;\n                }\n\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\n                    continue;\n                }\n\n                if (t.color != currentColor) {\n                    currentColor = t.color;\n                    this._context.fillStyle = currentColor;\n                }\n\n                this._context.font = t.fontStyle;\n\n                // Draw with letter spacing\n                if (t.letters) {\n                    for (let l of t.letters) {\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                        lx += l.width;\n                    }\n                // Standard drawing\n                } else {\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                }\n            }\n        }\n\n        // Reset text shadow\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        // Reset cut translation\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        // Postprocess renderInfo.lines to be compatible with standard version\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\n        if (renderInfo.maxLines) {\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\n        }\n\n\n        this.renderInfo = renderInfo;\n\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n    tokenize(text) {\n        return tokenizeString(/ |\\u200B|\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g, text);\n    }\n\n    parse(tokens) {\n        let italic = 0;\n        let bold = 0;\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\n        let color = 0;\n\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\n\n        return tokens.map((t) => {\n            if (t == '<i>') {\n                italic += 1;\n                t = '';\n            } else if (t == '</i>' && italic > 0) {\n                italic -= 1;\n                t = '';\n            } else if (t == '<b>') {\n                bold += 1;\n                t = '';\n            } else if (t == '</b>' && bold > 0) {\n                bold -= 1;\n                t = '';\n            } else if (t == '</color>') {\n                if (colorStack.length > 1) {\n                    color -= 1;\n                    colorStack.pop();\n                }\n                t = '';\n            } else if (colorRegexp.test(t)) {\n                const matched = colorRegexp.exec(t);\n                colorStack.push(\n                    StageUtils.getRgbaString(parseInt(matched[1]))\n                );\n                color += 1;\n                t = '';\n\n            }\n\n            return {\n                text: t,\n                italic: italic,\n                bold: bold,\n                color: colorStack[color],\n            }\n        })\n        .filter((o) => o.text != '');\n    }\n\n    applyFontStyle(word, baseFont) {\n        let font = baseFont;\n        if (word.bold) {\n            font = 'bold ' + font;\n        }\n        if (word.italic) {\n            font = 'italic ' + font;\n        }\n        this._context.font = font\n        word.fontStyle = font;\n    }\n\n    resetFontStyle(baseFont) {\n        this._context.font = baseFont;\n    }\n\n    measure(parsed, letterSpacing = 0, baseFont) {\n        for (const p of parsed) {\n            this.applyFontStyle(p, baseFont);\n            p.width = this.measureText(p.text, letterSpacing);\n\n            // Letter by letter detail for letter spacing\n            if (letterSpacing > 0) {\n                p.letters = p.text.split('').map((l) => {return {text: l}});\n                for (let l of p.letters) {\n                    l.width = this.measureText(l.text, letterSpacing);\n                }\n            }\n\n        }\n        this.resetFontStyle(baseFont);\n        return parsed;\n    }\n\n    indent(parsed, textIndent) {\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\n        return parsed;\n    }\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\n    }\n\n    _getBreakIndex(word, width) {\n        const wordLen = word.length;\n        const wordWidth = this.measureText(word);\n\n        if (wordWidth <= width) {\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\n        }\n\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > width) {\n            while (breakIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth > width) {\n                    breakIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (breakIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth < width) {\n                    breakIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    breakIndex -=1;\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                    break;\n                }\n            }\n        }\n        return {breakIndex, truncWordWidth};\n\n    }\n\n    wordBreak(word, width, baseFont) {\n        if (!word.text) {\n            return word\n        }\n        this.applyFontStyle(word, baseFont)\n        const parts = [];\n        let text = word.text;\n        if (!word.letters) {\n            while (true) {\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = truncWordWidth;\n\n                if (breakIndex === text.length) {\n                    break;\n                }\n\n                text = text.slice(breakIndex);\n            }\n        } else {\n            let totalWidth = 0;\n            let letters = [];\n            let breakIndex = 0;\n            for (const l of word.letters) {\n                if (totalWidth + l.width >= width) {\n                    parts.push({...word});\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\n                    parts[parts.length - 1].width = totalWidth;\n                    parts[parts.length - 1].letters = letters;\n                    text = text.slice(breakIndex);\n                    totalWidth = 0;\n                    letters = [];\n                    breakIndex = 0;\n\n                } else {\n                    breakIndex += 1;\n                    letters.push(l);\n                    totalWidth += l.width;\n                }\n            }\n\n            if (totalWidth > 0) {\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = totalWidth;\n                parts[parts.length - 1].letters = letters;\n            }\n        }\n\n        return parts;\n    }\n\n    alignLine(parsed, initialX = 0) {\n        let prevWidth = 0;\n        let prevX = initialX;\n        for (const word of parsed) {\n            if (word.text == '\\n') {\n                continue;\n            }\n            word.x = prevX + prevWidth;\n            prevX = word.x;\n            prevWidth = word.width;\n        }\n\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        if (this.advancedRenderer) {\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\n        } else {\n            return new TextTextureRenderer(stage, canvas, settings);\n        }\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontBaselineRatio() {\n        return this._fontBaselineRatio;\n    }\n    \n    set fontBaselineRatio(v) {\n        if (this._fontBaselineRatio !== v) {\n            this._fontBaselineRatio = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get wordBreak() {\n        return this._wordBreak;\n    }\n\n    set wordBreak(v) {\n        if (this._wordBreak !== v) {\n            this._wordBreak = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    get advancedRenderer() {\n        return this._advancedRenderer;\n    }\n\n    set advancedRenderer(v) {\n        if (this._advancedRenderer !== v) {\n            this._advancedRenderer = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    set textIndent(v) {\n        if (this._textIndent !== v) {\n            this._textIndent = v;\n            this._changed();\n        }\n    }\n\n    get textIndent() {\n        return this._textIndent;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        const gl = this.stage.gl;\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = (args.advancedRenderer)\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\n              : new TextTextureRenderer(this.stage, canvas, args);\n            \n            const p = renderer.draw();\n\n            const texParams = {};\n\n            const sharpCfg = this.stage.getOption('fontSharp');\n            let sharpen = false;\n\n            // Prevent text blur when text texture is downscaled\n            if (Utils.isBoolean(sharpCfg)) {\n                sharpen = sharpCfg;\n            } else if (Utils.isObject(sharpCfg)) {\n                const precision = this.stage.getRenderPrecision();\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\n            }\n\n            if (gl && sharpen) {\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false,\n                        texParams: texParams,\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false,\n                    texParams: texParams,\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontBaselineRatio = this._fontBaselineRatio;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.wordBreak = this._wordBreak;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.textIndent = this._textIndent;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        obj.advancedRenderer = this._advancedRenderer;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._wordBreak = false;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._textIndent = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\nproto._advancedRenderer = false;\nproto._fontBaselineRatio = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index < this._items.length) {\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if (index < this._items.length) {\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n                }\n\n                const prevItem = this._items[index];\n\n                // Doesn't exist yet: overwrite current.\n                this._items[index] = item;\n\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n\n                this.onSet(item, index, prevItem);\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        if (index >= 0 && index < this._items.length) {\n            const item = this._items[index];\n\n            if (item.ref) {\n                this._refs[item.ref] = undefined;\n            }\n\n            this._items.splice(index, 1);\n\n            this.onRemove(item, index);\n\n            return item;\n        } else {\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\n        }\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n        this._updateCollision();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestors() {\n        const a = [];\n        let p = this;\n        while (p) {\n            a.push(p);\n            p = p.__parent;\n        }\n        return a;\n    }\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"[Lightning] Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource ? this.__core.displayedTextureSource._source : null;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get collision() {\n        return this._collision;\n    }\n\n    set collision(v) {\n        this._collision = v;\n    }\n\n    _updateCollision() {\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\n            /**\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\n             * This narrows down the search for elements with active collision.\n            */\n            this.__parent.collision = 2;\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {};\n        tree[ref] = {};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOffscreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc(this);\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    static bindProp(name, func = null) {\n        return {__propertyBinding: true, __name: name, __func: func};\n    }\n\n    __bindProperty(propObj, targetObj, targetProp) {\n        // 1. find binding position: find object and property name to be bound\n        const obj = targetObj;\n        const prop = targetProp;\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\n\n        // 2. create setters for every given dependency\n        for (let i = 0; i < propDependencies.length; i++) {\n            const propName = propDependencies[i];\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\n\n            if (!this.hasOwnProperty(propName)) {\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\n                Object.defineProperty(this, propName, {\n                    set: (value) => {\n                        this[`__prop_${propName}`] = value;\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\n                            __obj[__prop] = __func(this);\n                        }\n                    },\n                    get: () => this[`__prop_${propName}`]\n                });\n            } else {\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\n            }\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc(ctx) {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template(ctx));\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f: f, a: context.store};\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\n                    if (value.__propertyBinding === true) {\n                        // Allow binding entire objects to text property\n                        store.push(value);\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                    } else {\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\n                    const shaderCursor = `${cursor}[\"shader\"]`\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    this.parsePropertyBindings(value, context, shaderCursor);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    static parsePropertyBindings(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n\n    _construct() {\n    }\n\n    _build() {\n    }\n\n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {};\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while (c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while (ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n \n                    if (Utils.isFunction(fireEvent)) {\n                        return fireEvent(...args);\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n        this.ctx = null;\n        this.renderState = null;\n        this.gl = null;\n\n        delete this.ctx;\n        delete this.renderState;\n        delete this.gl;\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n\n        this.gl = null;\n        delete this.gl;\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n        this.gl = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('[Lightning] Error: Could not initialize shader.');\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('[Lightning] gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n        }\n\n        this._attributeLocations = null;\n        this._currentUniformValues = null;\n        this.fragmentShaderSource = null;\n        this._program = null;\n        this.gl = null;\n        this._uniformLocations = null;\n        this.vertexShaderSource = null;  \n\n        delete this.vertexShaderSource;\n        delete this._program;        \n        delete this._currentUniformValues;\n        delete this.fragmentShaderSource;\n        delete this.gl;\n        delete this._uniformLocations;\n        delete this._attributeLocations;\n\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            \n            gl.bindTexture(gl.TEXTURE_2D, glTexture);\n            gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n        this._compressedTextureExtensions = {\n            astc: stage.gl.getExtension('WEBGL_compressed_texture_astc'),\n            etc1: stage.gl.getExtension('WEBGL_compressed_texture_etc1'),\n            s3tc: stage.gl.getExtension('WEBGL_compressed_texture_s3tc'),\n            pvrtc: stage.gl.getExtension('WEBGL_compressed_texture_pvrtc'),\n        }\n    }\n\n    getCompressedTextureExtensions() {\n        return this._compressedTextureExtensions\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n\n        this.shaderPrograms = null;\n        this._compressedTextureExtensions = null;\n\n        delete this.shaderPrograms;\n        delete this._compressedTextureExtensions;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n\n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = { format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE };\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2 / w, 2 / h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n\n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    _getBytesPerPixel(fmt, type) {\n        const gl = this.stage.gl;\n\n        if (fmt === gl.RGBA) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 4;\n\n                case gl.UNSIGNED_SHORT_4_4_4_4:\n                    return 2;\n\n                case gl.UNSIGNED_SHORT_5_5_5_1:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGBA format');\n            }\n        }\n        else if (fmt === gl.RGB) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 3;\n\n                case gl.UNSIGNED_BYTE_5_6_5:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGB format');\n            }\n        }\n        else {\n            throw new Error('Invalid format specified in call to _getBytesPerPixel()');\n        }\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n        let compressed = false;\n        if (options.renderInfo) {\n            compressed = options.renderInfo.compressed || false\n        }\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        if (compressed) {\n            this.stage.platform.uploadCompressedGlTexture(gl, textureSource, source);\n            return glTexture;\n        }\n         \n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n        \n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n        \n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        // calculate bytes per pixel for vram usage tracking\n        glTexture.bytesPerPixel = this._getBytesPerPixel(texOptions.format, texOptions.type);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                cache.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n\n        this.tintManager = null;\n        delete this.tintManager;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n\n        this._items = null;\n        this._worker = null;\n\n        delete this._items;\n        delete this._worker;        \n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            // the constructing of the basepath fails\n            // if location.hash contains a slash\n            var hasHashPath = /#.*?\\//;\n            if(hasHashPath.test(base)){\n                base = base.replace(/#.*$/,'');\n            }\n\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        // Alternative handler to avoid RAF when idle\n        this._loopHandler = null;\n        this._idleLoopCounter = 0;\n        this._idleLoopDelay = 60;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                this._imageWorker = new ImageWorker();\n            }\n        }\n\n        this._registerVisibilityChangeHandler();\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n\n        clearInterval(this._loopHandler);\n\n        this._removeKeyHandler();\n        this._removeClickHandler();\n        this._removeHoverHandler();\n        this._removeScrollWheelHandler();\n        this._removeVisibilityChangeHandler();\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    switchLoop() {\n        if (this._idleLoopCounter < this._idleLoopDelay) {\n            this._idleLoopCounter++;\n            return;\n        }\n        if (!this.stage.ctx.hasRenderUpdates()) {\n            this.stopLoop();\n            this._loopHandler = setInterval(() => {\n                this.stage.updateFrame();\n                this.stage.idleFrame();\n                if (this.stage.ctx.hasRenderUpdates()) {\n                    clearInterval(this._loopHandler);\n                    this.startLoop();\n                };\n            }, 1000 / 60);\n        } else {\n            this._idleLoopCounter = 0;\n        }\n    }\n\n    loop() {\n        let self = this;\n        let lp = function () {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.updateFrame();\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\n                    self.switchLoop();\n                }\n                self.stage.renderFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadCompressedGlTexture(gl, textureSource, source, options) {\n        const view = !source.pvr ? new DataView(source.mipmaps[0]) : source.mipmaps[0];\n        gl.compressedTexImage2D(\n            gl.TEXTURE_2D,\n            0,\n            source.glInternalFormat,\n            source.pixelWidth,\n            source.pixelHeight,\n            0,\n            view,\n        )\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else if (source instanceof HTMLCanvasElement) {\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n            } else if (source.width > 0 && source.height > 0) {\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\n                // Width/Height check added because of https://github.com/rdkcentral/Lightning/issues/412\n                const ctx = source.getContext('2d');\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    /**\n     * KTX File format specification\n     * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\n     **/\n    handleKtxLoad(cb, src) {\n        var self = this;\n        return function () {\n            var arraybuffer = this.response;\n            var view = new DataView(arraybuffer);\n\n            // identifier, big endian\n            var targetIdentifier = 3632701469\n            if (targetIdentifier !== (view.getUint32(0) + view.getUint32(4) + view.getUint32(8))) {\n                cb('Parsing failed: identifier ktx mismatch:', src)\n            }\n\n            var littleEndian = (view.getUint32(12) === 16909060) ? true : false;\n            var data = {\n                glType: view.getUint32(16, littleEndian),\n                glTypeSize: view.getUint32(20, littleEndian),\n                glFormat: view.getUint32(24, littleEndian),\n                glInternalFormat: view.getUint32(28, littleEndian),\n                glBaseInternalFormat: view.getUint32(32, littleEndian),\n                pixelWidth: view.getUint32(36, littleEndian),\n                pixelHeight: view.getUint32(40, littleEndian),\n                pixelDepth: view.getUint32(44, littleEndian),\n                numberOfArrayElements: view.getUint32(48, littleEndian),\n                numberOfFaces: view.getUint32(52, littleEndian),\n                numberOfMipmapLevels: view.getUint32(56, littleEndian),\n                bytesOfKeyValueData: view.getUint32(60, littleEndian),\n                kvps: [],\n                mipmaps: [],\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            const props = (obj) => {\n                const p = [];\n                for (let v in obj) {\n                    p.push(obj[v]);\n                }\n                return p;\n            }\n\n            const formats = Object.values(self.stage.renderer.getCompressedTextureExtensions())\n                .filter((obj) => obj != null)\n                .map((obj) => props(obj))\n                .reduce((prev, current) => prev.concat(current));\n\n            if (!formats.includes(data.glInternalFormat)) {\n                console.warn(\"[Lightning] Unrecognized texture extension format:\", src, data.glInternalFormat, self.stage.renderer.getCompressedTextureExtensions());\n            }\n\n            var offset = 64\n            // Key Value Pairs of data start at byte offset 64\n            // But the only known kvp is the API version, so skipping parsing.\n            offset += data.bytesOfKeyValueData;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                var imageSize = view.getUint32(offset);\n                offset += 4;\n                data.mipmaps.push(view.buffer.slice(offset, imageSize));\n                offset += imageSize\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    handlePvrLoad(cb, src) {\n        return function () {\n            // pvr header length in 32 bits\n            const pvrHeaderLength = 13;\n            // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\n            const pvrFormatEtc1 = 0x8D64;\n            const pvrWidth = 7;\n            const pvrHeight = 6;\n            const pvrMipmapCount = 11;\n            const pvrMetadata = 12;\n            const arrayBuffer = this.response;\n            const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\n            const dataOffset = header[pvrMetadata] + 52;\n            const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\n\n            var data = {\n                glInternalFormat: pvrFormatEtc1,\n                pixelWidth: header[pvrWidth],\n                pixelHeight: header[pvrHeight],\n                numberOfMipmapLevels: header[pvrMipmapCount],\n                mipmaps: [],\n                pvr: true,\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            let offset = 0\n            let width = data.pixelWidth;\n            let height = data.pixelHeight;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n                const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\n                data.mipmaps.push(view);\n                offset += level;\n                width = width >> 1;\n                height = height >> 1;\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    loadSrcTexture({ src, hasAlpha }, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.toLowerCase().indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        let isKtx = src.indexOf('.ktx') >= 0;\n        let isPvr = src.indexOf('.pvr') >= 0;\n        if (isKtx || isPvr) {\n            let request = new XMLHttpRequest();\n            request.addEventListener(\n                \"load\", isKtx ? this.handleKtxLoad(cb, src) : this.handlePvrLoad(cb, src)\n            );\n            request.open(\"GET\", src);\n            request.responseType = \"arraybuffer\";\n            request.send();\n            cancelCb = function () {\n                request.abort();\n            }\n        } else if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function (err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function ({ imageBitmap, hasAlphaChannel }) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function () {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0, 5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function (err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function () {\n                cb(null, {\n                    source: image,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function () {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts) || canvas.getContext('webgl2', opts);\n\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n    registerClickHandler(clickHandler) {\n        this._clickListener = e => {\n            clickHandler(e);\n        };\n        window.addEventListener('mousedown', this._clickListener);\n    }\n\n    _removeClickHandler() {\n        if (this._clickListener) {\n            window.removeEventListener('mousedown', this._clickListener);\n        }\n    }\n\n    registerHoverHandler(hoverHandler) {\n        this._hoverListener = e => {\n            hoverHandler(e);\n        };\n        window.addEventListener('mousemove', this._hoverListener);\n    }\n\n    _removeHoverHandler() {\n        if (this._hoverListener) {\n            window.removeEventListener('mousemove', this._hoverListener);\n        }\n    }\n\n    registerScrollWheelHandler(registerScrollWheelHandler) {\n        this._scrollWheelListener = e => {\n            registerScrollWheelHandler(e);\n        }\n        window.addEventListener('wheel', this._scrollWheelListener);\n    }\n\n    _removeScrollWheelHandler() {\n        if (this._scrollWheelListener) {\n            window.removeEventListener('wheel', this._scrollWheelListener);\n        }\n    }\n\n    /**\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\n     */\n    _registerVisibilityChangeHandler() {\n        this._visibilityChangeHandler = () => {\n            if (document.visibilityState === 'visible') {\n                this.stage.root.core.setHasRenderUpdates(2);\n                this.stage.renderFrame();\n            }\n        }\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\n    }\n\n    _removeVisibilityChangeHandler() {\n        if (this._visibilityChangeHandler) {\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\nimport Stage from './Stage.mjs';\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n\n        // add VRAM tracking if using the webgl renderer\n        this._updateVramUsage(textureSource, 1);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    _updateVramUsage(textureSource, sign) {\n        const nativeTexture = textureSource.nativeTexture;\n        var usage;\n\n        // do nothing if webgl isn't even supported\n        if (!Stage.isWebglSupported())\n            return;\n\n        // or if there is no native texture\n        if (!textureSource.isLoaded())\n            return;\n\n        // or, finally, if there is no bytes per pixel specified\n        if (!nativeTexture.hasOwnProperty('bytesPerPixel') || isNaN(nativeTexture.bytesPerPixel))\n            return;\n\n        usage = sign * (textureSource.w * textureSource.h * nativeTexture.bytesPerPixel);\n\n        this.stage.addVramUsage(usage, textureSource.hasAlpha);\n    }\n\n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n\n            // add VRAM tracking if using the webgl renderer\n            this._updateVramUsage(textureSource, -1);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n        this.stage = null;\n\n        delete this._sources;\n        delete this._data;\n        delete this.stage;\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n\n        this.renderToTextureCount = 0;\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n\n        this.stage = null;\n        this.root = null;\n\n        this.renderState = null;\n        this.renderExec = null;\n        this._renderTexturePool = null;\n        this._zSorts = null;\n\n        delete this.stage;\n        delete this.root;\n        delete this.renderState;\n        delete this.renderExec;\n        delete this._renderTexturePool;\n        delete this._zSorts;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        const debugFrame = this.stage.getOption('debugFrame');\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            this._readPixels();\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n\n        if (debugFrame) {\n            console.log(`[Lightning] RTT Renders in frame: ${this.renderToTextureCount}`)\n        }\n\n        // Block OpenGL pipeline to prevent framebuffer flickering\n        // on certain devices\n        if (this.stage.getOption('readPixelsAfterDraw') &&\n            this.renderToTextureCount >= this.stage.getOption('readPixelsAfterDrawThreshold')\n        ) {\n            if (debugFrame) {\n                console.log(`[Lightning] readPixelsAfterDraw behavior triggered`)\n            }\n            this._readPixels();\n        }\n\n        this.renderToTextureCount = 0;\n    }\n\n    _readPixels() {\n        const pixels = new Uint8Array(4);\n        const gl = this.stage.gl;\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        // attempt to track VRAM usage more accurately by accounting for different color channels\n        this._usedVramAlpha = 0;\n        this._usedVramNonAlpha = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            if (this.getOption('devicePixelRatio') !== 1) {\n                const ratio = this.getOption('devicePixelRatio');\n                // set correct display sie\n                this.getCanvas().style.width = this._options['w'] / ratio  + 'px';\n                this.getCanvas().style.height = this._options['h'] / ratio + 'px';\n            }\n\n            // set display buffer size\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('fontSharp', { precision: 0.6666666667, fontSize: 24 })\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n        opt('devicePixelRatio', 1)       \n        opt('readPixelsAfterDraw', false);\n        opt('readPixelsAfterDrawThreshold', 0);\n        opt('debugFrame', false);\n        opt('forceTxCanvasSource', false);\n        opt('pauseRafLoopOnIdle', false);\n\n        if (o['devicePixelRatio'] != null && o['devicePixelRatio'] !== 1) {\n            this._options['precision'] *= o['devicePixelRatio']\n            this._options['w'] *= o['devicePixelRatio']\n            this._options['h'] *= o['devicePixelRatio']\n        }\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\n            console.log('[Lightning] Using image worker!');\n        }\n\n        if (this.application.getOption('debug') && this.c2d) {\n            console.log('[Lightning] Using canvas2d renderer');\n        }\n\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n\n        // clear last rendered frame\n        if (this.gl) {\n            this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        } else if (this.c2d) {\n            this.c2d.clearRect(\n                0, 0, this.c2d.canvas.width, this.c2d.canvas.height\n            );\n        }\n\n        this.gl = null;\n        this.c2d = null;\n        this.ctx = null;\n        this._options = null;\n        this.platform = null;\n        this.textureManager = null;\n        this._renderer = null;\n\n        delete this.gl;\n        delete this.c2d;\n        delete this.ctx;\n        delete this._options;\n        delete this.platform;\n        delete this.textureManager;\n        delete this._renderer;\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n\n    _performUpdateSource() {\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n    }\n\n    _calculateDt() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n    }\n\n    updateFrame() {\n        this._calculateDt();\n        this.emit('frameStart');\n        this._performUpdateSource();\n        this.emit('update');\n    }\n\n    idleFrame() {\n        this.textureThrottler.processSome();\n        this.emit('frameEnd');\n        this.frameCounter++;\n    }\n\n    renderFrame() {\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    drawFrame() {\n        // Maintain original functionality of `drawFrame()` while retaining the\n        // RAF mitigration feature from: https://github.com/rdkcentral/Lightning/pull/402\n        // The full functionality of this method is relied directly by our own unit tests and\n        // the unit tests of third party users\n        this.updateFrame();\n        this.renderFrame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    addVramUsage(delta, alpha) {\n        if (alpha) {\n            this._usedVramAlpha += delta;\n        }\n        else {\n            this._usedVramNonAlpha += delta;\n        }\n    }\n\n    get usedVramAlpha() {\n        return this._usedVramAlpha;\n    }\n\n    get usedVramNonAlpha() {\n        return this._usedVramNonAlpha;\n    }\n\n    get usedVram() {\n        return this._usedVramAlpha + this._usedVramNonAlpha;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            if (this.application.getOption('debug')) {\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n            }\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y) {\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x, y, children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n        this.__hoveredChild = null;\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n\n        if (this.getOption(\"enablePointer\")) {\n            this.stage.platform.registerClickHandler((e) => {\n                this._receiveClick(e);\n            });\n\n            this.stage.platform.registerHoverHandler((e) => {\n                this._receiveHover(e);\n            });\n\n            this.stage.platform.registerScrollWheelHandler((e) => {\n                this._recieveScrollWheel(e);\n            });\n\n            this.cursor = 'default';\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n        opt('enablePointer', false);\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n\n                if (this.getOption('debug')) {\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\n                }\n\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while (true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    _recieveScrollWheel(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\n            }\n        }\n    }\n\n    fireTopDownScrollWheelHandler(event, obj) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children).reverse();\n        let n = affected.length;\n\n        while (n--) {\n            const child = affected[n];\n            if (child && child[event]) {\n                child._captureScroll(obj);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    fireBottomUpScrollWheelHandler(event, obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[event]) {\n                child._handleScroll(obj);\n                return true;\n            }\n            child = child.parent;\n        }\n        return false;\n    }\n\n    _receiveClick(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpClickHandler(obj);\n        }\n    }\n\n    fireBottomUpClickHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[\"_handleClick\"]) {\n                const { px, py } = child.core._worldContext;\n                const cx = px * precision;\n                const cy = py * precision;\n\n                const localCoords = {\n                    x: clientX - cx,\n                    y: clientY - cy\n                }\n\n                const returnValue = child._handleClick(target, localCoords);\n                if (returnValue !== false) {\n                    break;\n                }\n            }\n            child = child.parent;\n        }\n    }\n\n    _receiveHover(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpHoverHandler(obj);\n        }\n    }\n\n    fireBottomUpHoverHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n\n        // Only fire handlers when pointer target changes\n        if (target !== this.__hoveredChild) {\n\n            let hoveredBranch = new Set();\n            let newHoveredBranch = new Set();\n\n            if (target) {\n                newHoveredBranch = new Set(target.getAncestors());\n            }\n\n            if (this.__hoveredChild) {\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\n                    const c = Component.getComponent(elem);\n                    if (c[\"_handleUnhover\"]) {\n                        c._handleUnhover(elem);\n                    }\n                    if (elem.parent && elem.parent.cursor) {\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\n                    }\n                }\n            }\n\n            this.__hoveredChild = target;\n\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\n            for (const elem of diffBranch) {\n                const c = Component.getComponent(elem);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(elem);\n                }\n            }\n\n            // New element hover cursor\n            const lastElement = diffBranch[0];\n            if (lastElement && lastElement.cursor) {\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\n            }\n\n            // Rerun _handleHover for target element in case it's been hovered\n            // back from its child\n            if (diffBranch.length === 0 && target) {\n                const c = Component.getComponent(target);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(target);\n                }\n            }\n        }\n    }\n\n    _getTargetChild(clientX, clientY) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children);\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\n\n        hoverableChildren.sort((a, b) => {\n            // Sort by zIndex and then id\n            if (a.zIndex > b.zIndex) {\n                return 1;\n            } else if (a.zIndex < b.zIndex) {\n                return -1;\n            } else {\n                return a.id > b.id ? 1 : -1;\n            }\n        });\n\n        if (hoverableChildren.length) {\n            // Assume target has highest zIndex (id when zIndex equal)\n            return hoverableChildren.slice(-1)[0];\n        } else {\n            return null;\n        }\n    }\n\n    _findChildren(bucket, children) {\n        let n = children.length;\n        while (n--) {\n            const child = children[n];\n            // only add active children\n            if (child.__active && child.collision) {\n                if (child.collision === true) {\n                    bucket.push(child);\n                }\n                if (child.hasChildren()) {\n                    this._findChildren(bucket, child.children);\n                }\n            }\n        }\n        return bucket;\n    }\n\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\n        let n = affectedChildren.length;\n        const candidates = [];\n\n        // loop through affected children\n        // and perform collision detection\n        while (n--) {\n            const child = affectedChildren[n];\n            const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n            const ctx = child.core._worldContext;\n\n            const cx = ctx.px * precision;\n            const cy = ctx.py * precision;\n            const cw = child.finalW * ctx.ta * precision;\n            const ch = child.finalH * ctx.td * precision;\n\n            if (cx > this.stage.w || cy > this.stage.h) {\n                continue;\n            }\n\n            if (child.parent.core._scissor) {\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\n                    continue\n            }\n\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\n                candidates.push(child);\n            }\n        }\n        return candidates;\n    }\n\n    _testCollision(px, py, cx, cy, cw, ch) {\n        if (px >= cx &&\n            px <= cx + cw &&\n            py >= cy &&\n            py <= cy + ch) {\n            return true;\n        }\n        return false;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onError = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error('[Lightning]', e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._blend = 0;\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fc = 0x00ffffff;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set blend(p) {\n        this._blend = Math.min(Math.max(p, 0), 1);\n    }\n\n    set radius(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._radius = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\n            }\n            else if (v.length === 4) {\n                this._radius = v;\n            }\n            else {\n                this._radius = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set topLeft(num) {\n        this._radius[0] = num;\n        this.redraw();\n    }\n\n    get topLeft() {\n        return this._radius[0];\n    }\n\n    set topRight(num) {\n        this._radius[1] = num;\n        this.redraw();\n    }\n\n    get topRight() {\n        return this._radius[1];\n    }\n\n    set bottomRight(num) {\n        this._radius[2] = num;\n        this.redraw();\n    }\n\n    get bottomRight() {\n        return this._radius[2];\n    }\n\n    set bottomLeft(num) {\n        this._radius[3] = num;\n        this.redraw();\n    }\n\n    get bottomLeft() {\n        return this._radius[4];\n    }\n\n    set strokeColor(argb) {\n        this._sc = argb;\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get strokeColor() {\n        return this._sc;\n    }\n\n    set fillColor(argb) {\n        this._fc = argb;\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get fillColor() {\n        return this._fc;\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    uniform float alpha;\n    uniform float fill;\n    uniform float blend;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n        \n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from './DefaultShader.mjs';\n\nexport default class FadeOutShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._fade = [0, 0, 0, 0];\n    }\n\n    set top(num) {\n        this._fade[0] = num;\n        this.redraw();\n    }\n\n    get top() {\n        return this._fade[0];\n    }\n\n    set right(num) {\n        this._fade[1] = num;\n        this.redraw();\n    }\n\n    get right() {\n        return this._fade[1];\n    }\n\n    set bottom(num) {\n        this._fade[2] = num;\n        this.redraw();\n    }\n\n    get bottom() {\n        return this._fade[2];\n    }\n\n    set left(num) {\n        this._fade[3] = num;\n        this.redraw();\n    }\n\n    get left() {\n        return this._fade[3];\n    }\n\n    set fade(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._fade = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\n            }\n            else if (v.length === 4) {\n                this._fade = v;\n            }\n            else {\n                this._fade = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._fade = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get fade() {\n        return this._fade;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const fade = this._fade.map((f) => f * renderPrecision);\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nFadeOutShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 fade;\n    \n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 point = vTextureCoord.xy * resolution.xy;\n        \n        vec2 pos1;\n        vec2 pos2;\n        vec2 d;\n        float c;\n        float t = 0.0;\n             \n        if(fade[0] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x, point.y + fade[0]);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[1] > 0.0) {\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[2] > 0.0) {\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[3] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x + fade[3], point.y);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivot = [0.5, 0.5];\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\n        this.redraw()\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v)) {\n            this._pivot = v;\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    set pivotX(v) {\n        this._pivot[0] = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotY(v) {\n        this._pivot[1] = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform vec2 pivot;\n\n    void main() {\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b) * vColor;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._pivot = [0, 0];\n        this._ic = 0xffffffff;\n        this._normalizedIC = this._getNormalizedColor(this._ic);\n        this._oc = 0x00ffffff;\n        this._normalizedOC = this._getNormalizedColor(this._oc);\n        this._radius = 0;\n    }\n\n    set radiusX(v) {\n        this.radius = v;\n    }\n\n    get radiusX() {\n        return this._radius;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set innerColor(argb) {\n        this._ic = argb;\n        this._normalizedIC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get innerColor() {\n        return this._ic;\n    }\n\n    set outerColor(argb) {\n        this._oc = argb;\n        this._normalizedOC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set color(argb) {\n        this.innerColor = argb;\n    }\n\n    get color() {\n        return this.innerColor;\n    }\n\n    get outerColor() {\n        return this._ic;\n    }\n\n    set x(f) {\n        this._x = f;\n        this.redraw();\n    }\n\n    set y(f) {\n        this._y = f;\n        this.redraw();\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v) && v.length === 2) {\n            this._pivot = v;\n        }\n        else if(Array.isArray(v)) {\n            this._pivot = [v[0], v[1] || v[0]];\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivot() {\n        return this._pivot[0];\n    }\n\n    set pivotY(f) {\n        this._pivot[1] = f;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotX(f) {\n        this._pivot[0] = f;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        if(this._x) {\n            this._pivot[0] = this._x / owner.w;\n        }\n        if(this._y) {\n            this._pivot[1] = this._y / owner.h;\n        }\n\n        if(this._radius === 0) {\n            this._radius = owner.w * 0.5;\n        }\n\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\n    }\n}\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec2 pivot;\n    uniform vec4 innerColor;\n    uniform vec4 outerColor;\n    uniform float radius;\n    uniform float radiusY;\n    uniform float alpha;\n    uniform float fill;\n    uniform float aspectRatio;\n    \n    void main() {\n        vec2 point = vTextureCoord.xy * resolution;\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class MagnifierShader extends DefaultShader {\n\tconstructor(context) {\n\t  super(context);\n\t  this._x = 0;\n\t  this._y = 0;\n\t  this._w = 0;\n\t  this._h = 0;\n\t  this._radius = 0;\n\t  this._magnification = 0.6;\n\t}\n  \n\tget x() {\n\t  return this._x;\n\t}\n  \n\tset x(v) {\n\t  this._x = v;\n\t  this.redraw();\n\t}\n  \n\tget y() {\n\t  return this._y;\n\t}\n  \n\tset y(v) {\n\t  this._y = v;\n\t  this.redraw();\n\t}\n  \n\tget w() {\n\t  return this._w;\n\t}\n  \n\tset w(v) {\n\t  this._w = v;\n\t  this.redraw();\n\t}\n  \n\tget h() {\n\t  return this._h;\n\t}\n  \n\tset h(v) {\n\t  this._h = v;\n\t  this.redraw();\n\t}\n  \n\tget magnification() {\n\t  return this._magnification;\n\t}\n  \n\tset magnification(v) {\n\t  this._magnification = v;\n\t  this.redraw();\n\t}\n  \n\tget radius() {\n\t  return this._radius;\n\t}\n  \n\tset radius(v) {\n\t  this._radius = v;\n\t  this.redraw();\n\t}\n  \n\tsetupUniforms(operation) {\n\t  super.setupUniforms(operation);\n  \n\t  const owner = operation.shaderOwner;\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\n\t  this._setUniform(\n\t\t'radius',\n\t\t(this._radius + 0.5) * renderPrecision,\n\t\tthis.gl.uniform1f\n\t  );\n\t  this._setUniform(\n\t\t'resolution',\n\t\tnew Float32Array([\n\t\t  owner._w * renderPrecision,\n\t\t  owner._h * renderPrecision\n\t\t]),\n\t\tthis.gl.uniform2fv\n\t  );\n\t}\n \n\tuseDefault() {\n\t  return this._w === 0 && this._h === 0;\n\t}\n  }\n  \n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n  \n  MagnifierShader.fragmentShaderSource = `\n\t  #ifdef GL_ES\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\tprecision highp float;\n\t\t# else\n\t\tprecision lowp float;\n\t\t# endif\n\t  #endif\n\n\t  varying vec2 vTextureCoord;\n\t  varying vec4 vColor;\n\t  uniform sampler2D uSampler;\n\t  uniform float x;\n\t  uniform float y;\n\t  uniform float w;\n\t  uniform float h;\n\t  uniform vec2 resolution;\n\t  uniform float radius;\n\t  uniform float magnification;\n  \n\t  float roundBox(vec2 p, vec2 b, float r) {\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\n\t\t  return smoothstep(1.0, 0.0, d);\n\t  }\n\n\t  float inside(vec2 v) {\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\n\t\treturn s.x * s.y;   \n      }\n  \n\t  void main(void) {\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n\t\tvec2 size = vec2(w, h) / 2.0;\n\t\tfloat b = roundBox(pos, size, radius);\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\n\t  }\n  `;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class SpinnerShader2 extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._period = 1;\n        this._stroke = 0;\n        this._showDot = true;\n        this._clockwise = true;\n        this._bc = 0xff000000;\n        this._normalizedBC = this._getNormalizedColor(this._bc);\n        this._c = 0xffffffff;\n        this._normalizedC = this._getNormalizedColor(this._c);\n    }\n\n    set radius(v) {\n        if(v === 0) {\n            v = 1;\n        }\n        this._radius = v;\n    }\n\n    set stroke(value) {\n        this._stroke = Math.abs(value);\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    set color(argb) {\n        this._c = argb;\n        this._normalizedC = this._getNormalizedColor(argb);\n    }\n\n    get color() {\n        return this._c;\n    }\n\n    set backgroundColor(argb) {\n        this._bc = argb;\n        this._normalizedBC = this._getNormalizedColor(argb);\n    }\n\n    get backgroundColor() {\n        return this._sc;\n    }\n\n    set showDot(bool) {\n        this._showDot = bool;\n    }\n\n    get showDot() {\n        return this._showDot;\n    }\n\n    set clockwise(bool) {\n        this._clockwise = bool;\n    }\n\n    get clockwise() {\n        return this._clockwise;\n    }\n\n    set period(v) {\n        this._period = v;\n    }\n\n    get period() {\n        return this._period;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const radius = this._radius || (owner._w / 2);\n\n        if(this._stroke === 0) {\n            this._stroke = radius * 0.33;\n        }\n\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\n        this._setUniform('radius',  radius, this.gl.uniform1f);\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\n            this.redraw();\n        }\n    }\n}\n\nSpinnerShader2.spinSync = Date.now();\n\nSpinnerShader2.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n    uniform float direction;\n    uniform float radius;\n    uniform float time;\n    uniform float stroke;\n    uniform float showDot;\n    uniform float period;\n    uniform float alpha;\n    \n    float circleDist(vec2 p, float radius){\n        return length(p) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\n        \n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n        \n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\n        \n        float strokeRad = stroke * 0.5;\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Spinner2: SpinnerShader2,\n        FadeOut: FadeOutShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        Magnifier: MagnifierShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n"],"names":["StageUtils","mergeNumbers","v1","v2","p","rgb","r","g","b","rgba","a","getRgbString","color","getRgbaString","toFixed","getRgbaStringFromArray","Math","floor","getRgbaComponentsNormalized","argb","getRgbComponentsNormalized","getRgbaComponents","getArgbNumber","max","min","v","mergeColors","c1","c2","round","mergeMultiColors","c","t","n","length","i","r1","g1","b1","a1","mergeMultiColorsEqual","mergeColorAlpha","alpha","rad","deg","PI","getTimingBezier","d","xc","xb","xa","yc","yb","ya","time","cbx","cbxd","dx","it","minT","maxT","getTimingFunction","str","s","indexOf","parts","substr","split","console","warn","parseFloat","isNaN","Utils$1","Utils","isFunction","value","isNumber","isInteger","isBoolean","isString","clone","isObjectLiteral","Array","isArray","getDeepClone","cloneObjShallow","obj","keys","Object","merge","obj1","obj2","isObject","type","isPlainObject","constructor","getArrayIndex","index","arr","getModuloIndex","len","ceil","equalValues","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","this","setToArray","result","forEach","push","iteratorToArray","iterator","iteratorResult","next","done","isUcChar","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","isNode","isPS4","isZiggo","Base","defaultSetter","name","patchObject","settings","names","patchObjectProperty","error","setter","setSetting","charAt","__local","local","func","SpacingCalculator","getSpacing","mode","numberOfItems","remainingSpace","itemGaps","spacePerGap","spacingBefore","spacingBetween","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_lines","init","_getTotalCrossAxisSize","align","crossAxisSize","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","recursiveResizeOccured","setItemPositions","totalCrossAxisSize","total","FlexUtils","getParentAxisSizeWithPadding","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","getRelAxisSize","funcW","_allowRelAxisSizeFunction","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","isZeroAxisSize","getAxisLayoutPos","x","y","setAxisLayoutPos","pos","setAxisLayoutSize","size","getAxisMinSize","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","flexItem","shrink","resizeAxis","_horizontal","resizeMainAxis","resizeCrossAxis","getPaddingOffset","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","getMarginOffset","marginLeft","marginTop","getTotalMargin","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","getShrunkSize","SizeGrower","_grownSize","grow","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","maxSize","_getMainAxisMaxSizeSetting","maxGrow","getGrownSize","ItemPositioner","lineLayout","position","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","performLayout","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","shrinker","_calcCrossAxisMaxLayoutSize","getMainAxisMinSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","crossAxisMinSize","_getCrossAxisMinSize","mainAxisContentSize","layoutLines","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","resizingMainAxis","isMainAxisFitToContents","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","finalize","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","_reversed","_recalc","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","shrunk","layoutTree","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","targetCrossAxisSize","ctr","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_changedDimensions","changedDimensions","_changedContents","changedContents","direction","f","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","padding","patch","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","minWidth","minHeight","maxWidth","maxHeight","margin","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","_getCrossAxisLayoutSize","_getMainAxisPadding","_getMainAxisMargin","FlexTarget","_target","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","layoutFlexTree","isChanged","_enableFlex","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","setParent","from","to","isFlexContainer","_changedChildren","setVisible","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","changeHeight","_updateRecalc","forceLayout","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","setOriginalXWithoutUpdatingLayout","setOriginalYWithoutUpdatingLayout","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","_hasAlpha","hasAlpha","loadError","addTexture","has","add","removeTexture","delete","incActiveTextureCount","becomesUsed","decActiveTextureCount","becomesUnused","isResultTexture","forEachEnabledElement","cb","texture","elements","hasEnabledElements","forEachActiveElement","element","active","getRenderWidth","getRenderHeight","allowCleanup","isUsed","load","cancel","isLoading","isLoaded","isError","reload","free","forceSync","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","forceRenderUpdate","update","frameCounter","forceUpdateRenderCoords","_updateTextureCoords","nativeTexture","clearNativeTexture","replaceNativeTexture","newNativeTexture","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","_updateDimensions","e","onTextureSourceLoadError","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","renderOffscreen","setHasRenderUpdates","_setRecalc","colorize","_getTextureSource","textureManager","updateResultTexture","hasResultTexture","resultTextureInUse","resultTexture","getResultTexture","core","mustRenderToTexture","_hasRenderUpdates","deactivate","release","renderTextureReused","releaseRenderTexture","reuseTextureAsRenderTexture","hasRenderTexture","getRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","offsetX","hasFlexLayout","_disableFuncX","_updateLocalTranslateDelta","_triggerRecalcTranslate","offsetY","_disableFuncY","disableFuncW","disableFuncH","scaleX","_updateLocalTransform","scaleY","scale","pivotX","_updateLocalTranslate","pivotY","pivot","mountX","mountY","mount","rotation","prev","_updateLocalAlpha","_updateEnabledFlag","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","pivotXMul","pivotYMul","px","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","addChildAt","child","splice","setChildAt","removeChildAt","removeChildren","syncChildren","removed","added","order","moveChild","fromIndex","toIndex","isEstimate","setTextureCoords","ulx","uly","brx","bry","displayedTextureSource","setDisplayedTextureSource","textureSource","isRoot","setAsRoot","root","coordsWidth","coordsHeight","isAncestorOf","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","forceZIndexContext","prevZContext","_getZIndexedDescs","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","colorUl","colorUr","colorBl","colorBr","onUpdate","onAfterUpdate","onAfterCalcs","shader","prevShader","activeShader","defaultShader","activeShaderOwner","clipping","clipbox","_setShaderOwnerChildrenRecursive","_hasRenderContext","renderContext","texturizer","_enableRenderToTexture","_disableRenderToTexture","_renderAdvanced","isWhite","hasSimpleTexCoords","_stashTexCoords","_stashedTexCoords","_unstashTexCoords","_stashColors","_stashedColors","_unstashColors","isVisible","outOfBounds","boundsMargin","_applyRelativeDimFuncs","pw","ta","td","tb","tc","pr","updateTreeOrder","useRenderToTexture","bboxW","bboxH","sx","sy","ex","ey","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","renderToTextureCount","cleared","ignore","cache","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","setTexturizer","zSort","ptr","m","j","sort","mergeResult","localTa","localTb","localTc","localTd","renderUpdates","getCornerPoints","getRenderTextureCoords","relX","relY","getAbsoluteCoords","collectAtCoord","inBound","inScissor","tx","ty","sc","_ensureLayout","EventEmitter","_hasEventListeners","on","listener","_eventFunction","_eventListeners","combiner","once","wrapper","arg1","arg2","arg3","off","__originalFunc","current","listeners","l","map","removeListener","emit","listenerCount","removeAllListeners","object","addAsMixin","cls","Shader","coreContext","_initialized","_elements","create","renderer","createShader","isShader","isValidShaderType","getWebGL","getC2d","addElement","removeElement","cleanup","redraw","useDefault","addEmpty","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","incActiveCount","decActiveCount","_checkForNewerReusableTextureSource","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","_getLookupId","_getSourceLoader","isValid","_getIsValid","_updateSource","addUpdateSourceTexture","getTextureSource","getReusableTextureSource","newSource","oldSource","resizeMode","clipX","clipY","_clearResizeMode","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","desiredSize","choppedOffPixels","enableClipping","disableClipping","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","getNonDefaults","nonDefaults","precision","ph","isAutosizeTexture","isTexture","ImageTexture","super","_src","src","getOption","fc","charCodeAt","platform","loadSrcTexture","getFontSetting","fontFace","fontStyle","fontSize","defaultFontFace","ff","ffs","curFf","isZeroWidthSpace","space","isSpace","measureText","context","word","reduce","acc","char","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","getPrecision","setFontProperties","font","textBaseline","_load","document","fonts","fontSetting","check","text","catch","then","draw","loadPromise","drawText","_draw","_calculateRenderInfo","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","linePositionX","linePositionY","globalAlpha","fillRect","translate","drawLines","verticalAlign","textAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","spaceRegex","allLines","realNewlines","resultLines","spaceLeft","words","spaces","match","wordWidthWithSpace","concat","TextTextureRendererAdvanced","baseFont","fontBaselineRatio","wordBreak","wrapWidth","tokenize","parse","measure","resetFontStyle","lineNo","lineNum","baselineOffsetInPx","vaOffset","firstWord","lastWord","shift","pop","lastLineText","filter","spl","alignLine","canvasWidth","canvasHeight","hlColor","hlOffset","defaultColor","currentColor","letters","tokenizeString","tokenRegex","delimeters","final","tokens","italic","bold","colorStack","colorRegexp","test","matched","exec","o","applyFontStyle","parsed","_getBreakIndex","breakIndex","totalWidth","initialX","prevWidth","prevX","TextTexture","advancedRenderer","_text","_fontStyle","_fontBaselineRatio","_fontSize","_fontFace","_wordWrap","_wordWrapWidth","_wordBreak","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_advancedRenderer","_letterSpacing","_textIndent","toString","args","cloneArgs","gl","getDrawingCanvas","texParams","sharpCfg","sharpen","getRenderPrecision","TEXTURE_MAG_FILTER","NEAREST","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","Transition","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","start","targetValue","isAttached","reset","delay","_updateDrawValue","finish","stop","removeActive","pause","play","addActive","getDrawValue","attached","isRunning","progress","dt","delayLeft","duration","invokeListeners","updateTargetValue","timingFunctionImpl","_timingFunctionImpl","startValue","skipDelay","isTransition","ObjectList","_refs","get","first","last","addAt","currentIndex","createItem","setAt","ref","onAdd","replaceByRef","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","getAt","remove","removeAt","onRemove","clear","onSync","isItem","_getRefs","clearRef","setRef","_setByObject","_setByArray","refs","crefs","cref","idx","_equalsArray","array","same","marker","newItems","_setItems","prevItems","ElementChildList","_connectParent","prevChildList","childList","_setParent","gc","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__parent","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","_throwError","removeTag","_addTag","_updateAttachedFlag","_unsetTagsParent","_setTagsParent","_updateCollision","getDepth","depth","getAncestor","getAncestors","getAncestorAtDepth","levels","getSharedAncestor","o1","o2","l1","l2","_isAttached","_isEnabled","_isActive","withinBoundsMargin","newAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","_setActiveFlag","_unsetActiveFlag","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","_onInactive","_onResize","_getRenderWidth","_getRenderHeight","renderWidth","renderHeight","finalX","finalY","finalW","finalH","textureIsLoaded","loadTexture","_enableTextureError","prevTexture","prevSource","sourceChanged","unknownSize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","tempty","tag","tags","tagSet","parentTreeTags","comp","Map","set","_getByTag","getTags","setTags","removes","adds","hasTag","currentTags","addTag","list","_tag","mtag","values","res","level","resn","stag","tagRoot","sel","path","select","selectors","_select","isRef","pointIdx","arrowIdx","_selectChilds","subPath","getLocationString","localTags","getSettings","getPrettyString","colorKeys","JSON","stringify","k","childStr","isEmpty","childArray","missing","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","collision","_collision","colorTop","colorBottom","colorLeft","colorRight","_allowChildrenAccess","hasChildren","rect","rectangleTexture","enableTextTexture","forceUpdate","rtt","rttLazy","getTexture","paths","firstCharCode","message","animation","animations","createAnimation","transition","_getTransition","_setTransition","transitions","smooth","setSmooth","fastForward","_transitions","isTransitionSettings","defaultTransitionSettings","createSettings","_removeTransition","getSmooth","isColorProperty","toLowerCase","toJSON","tree","collectChildren","getProperties","properties","props","key","StateMachine","setupStateMachine","targetConstructor","router","setPrototypeOf","_initStateMachine","stateMachineType","StateMachineType","_sm","fire","event","_hasMethod","_getState","_state","__path","_inState","statePath","currentStatePath","state","getStateByPath","currentState","__level","_getStateAtLevel","_hasMember","member","_setState","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","apply","_stateIndex","__index","_routedType","_getMostSpecificHandledMember","memberNames","cur","memberName","getStateMemberAlias","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","StateMachineRouter","arguments","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","curState","getPrototypeOf","_supportsSpread","__supportsSpread","code","supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","stateMap","members","_getStateMemberNames","_getStateMemberNamesForType","_isStateLocalMember","_createStateMap","_addState","parentState","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","Component","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","application","updateFocusPath","_refocus","bindProp","__propertyBinding","__func","__bindProperty","propObj","targetObj","targetProp","prop","propDependencies","propName","__obj","__prop","hasName","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","_focus","newTarget","prevTarget","_unfocus","_focusChange","_getFocused","_setFocusSettings","_handleFocusSettings","hasFinalFocus","_focusPath","hasFocus","cparent","seekAncestorByType","getSharedAncestorComponent","ancestor","isComponent","signals","alterSignals","passSignals","alterPassSignals","signal","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","fireAncestors","startsWith","_doFireAncestors","collectSubComponents","subs","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","getElement","getElementCore","getTextureWidth","getTextureHeight","WebGLCoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","getAttribsDataByteOffset","getQuadContents","CoreQuadOperation","shaderOwner","scissor","quads","getElementWidth","getElementHeight","WebGLCoreQuadOperation","extraAttribsDataByteOffset","getNormalRenderTextureCoords","coords","getProjection","renderExec","_projection","projection","CoreRenderExecutor","destroy","_reset","_bindRenderTexture","_setScissor","_clearRenderTexture","execute","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","getScissor","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","compile","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getUniformLocation","location","getAttribLocation","glProgram","compiled","_valueEquals","_valueClone","setUniformValue","glFunction","clonedValue","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","call","WebGLShader","shaderPrograms","initialize","initialized","_uniform","_attrib","_setUniform","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getVertexAttribPointerOffset","setExtraAttribsInBuffer","_getProjection","getFlipY","DefaultShader","vertexAttribPointer","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","DefaultShader$1","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","copyRenderTexture","WebGLRenderer","_compressedTextureExtensions","astc","getExtension","etc1","s3tc","pvrtc","getCompressedTextureExtensions","shaderProgram","createCoreRenderExecutor","createCoreRenderState","createRenderTexture","createTexture","texImage2D","RGBA","texParameteri","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","freeRenderTexture","deleteFramebuffer","deleteTexture","_getBytesPerPixel","fmt","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","RGB","UNSIGNED_BYTE_5_6_5","compressed","premultiplyAlpha","flipBlueRed","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","uploadCompressedGlTexture","uploadGlTexture","bytesPerPixel","mca","cx","cy","extra","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","setRenderContext","setSimpleTc","setWhite","getRenderContext","getSimpleTc","getWhite","C2dCoreQuadOperation","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","globalCompositeOperation","beginPath","closePath","fill","clearRect","_restoreContext","restore","save","_equalScissorAreas","clip","C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","tintTexture","getTintTexture","drawImage","transparency","gradient","createLinearGradient","addColorStop","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","_addMemoryUsage","delta","addMemoryUsage","_hasCache","_getCache","prevMemUsage","memoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","SparkShader","elementPostion","paint","SparkRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_loopHandler","_idleLoopCounter","_idleLoopDelay","_imageWorker","_registerVisibilityChangeHandler","clearInterval","_removeKeyHandler","_removeClickHandler","_removeHoverHandler","_removeScrollWheelHandler","_removeVisibilityChangeHandler","startLoop","loop","stopLoop","switchLoop","setInterval","updateFrame","idleFrame","lp","renderFrame","requestAnimationFrame","view","pvr","mipmaps","DataView","compressedTexImage2D","glInternalFormat","pixelWidth","pixelHeight","HTMLImageElement","HTMLVideoElement","ImageBitmap","HTMLCanvasElement","getImageData","handleKtxLoad","arraybuffer","getUint32","littleEndian","glType","glTypeSize","glFormat","glBaseInternalFormat","pixelDepth","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","bytesOfKeyValueData","kvps","includes","imageSize","handlePvrLoad","arrayBuffer","header","Int32Array","dataOffset","pvrtcData","Uint8Array","byteOffset","cancelCb","isPng","isKtx","isPvr","request","addEventListener","Image","crossOrigin","removeAttribute","createWebGLContext","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","createCanvasContext","getHrTime","performance","now","nextFrame","changes","registerKeydownHandler","keyhandler","_keydownListener","registerKeyupHandler","_keyupListener","removeEventListener","registerClickHandler","clickHandler","_clickListener","registerHoverHandler","hoverHandler","_hoverListener","registerScrollWheelHandler","_scrollWheelListener","_visibilityChangeHandler","visibilityState","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","_getDefaultFlag","cap","DITHER","setFlag","setBuffer","change","setFramebuffer","setRenderbuffer","setProgram","program","va","equal","setActiveTexture","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","setPixelStorei","pname","param","_getPixelStoreiIndex","migrate","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","_initStateManager","switchState","$useProgram","$bindBuffer","fb","$bindFramebuffer","$bindRenderbuffer","$enable","$disable","$viewport","$scissor","$disableVertexAttribArray","$enableVertexAttribArray","$vertexAttribPointer","normalized","stride","$activeTexture","$bindTexture","$pixelStorei","$stencilFuncSeparate","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","$stencilMaskSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","$stencilOpSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","$blendColor","red","green","blue","_blendColor","$blendEquation","_blendEquation","$blendEquationSeparate","modeRGB","modeAlpha","_blendEquationSeparate","$blendFunc","sfactor","dfactor","_blendFunc","$blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","$clearColor","_clearColor","$clearDepth","_clearDepth","$clearStencil","_clearStencil","$colorMask","_colorMask","$cullFace","_cullFace","$depthFunc","_depthFunc","$depthMask","flag","_depthMask","$depthRange","zNear","zFar","_depthRange","$frontFace","_frontFace","$lineWidth","_lineWidth","$polygonOffset","factor","units","_polygonOffset","$sampleCoverage","invert","_sampleCoverage","$stencilFunc","_stencilFunc","$stencilMask","_stencilMask","$stencilOp","_stencilOp","$vertexAttrib1f","indx","_vertexAttrib1f","$vertexAttrib1fv","_vertexAttrib1fv","$vertexAttrib2f","_vertexAttrib2f","$vertexAttrib2fv","_vertexAttrib2fv","$vertexAttrib3f","z","_vertexAttrib3f","$vertexAttrib3fv","_vertexAttrib3fv","$vertexAttrib4f","_vertexAttrib4f","$vertexAttrib4fv","_vertexAttrib4fv","__proto__","method","TextureManager","_uploadedTextureSources","textureSourceHashmap","usedMemory","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","_updateVramUsage","sign","usage","Stage","isWebglSupported","addVramUsage","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","_freeManagedTextureSource","managed","TextureThrottler","_remove","_sources","_data","processSome","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","debugFrame","_fillRenderState","_readPixels","_performRender","log","pixels","readPixels","prec","_createRenderTexture","freeUnusedRenderTextures","maxAge","limit","TransitionSettings","_timingFunction","timingFunction","TransitionManager","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","pe","idp","sm","pi","ni","nc","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","getValue","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","csy","cex","cey","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getResetValue","getAnimatedElements","sv","hasColorProperty","selector","resetValue","rv","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","actions","aas","action","stopTimingFunction","stopTimingFunctionImpl","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","replay","STOPPED","stopNow","isPaused","isPlaying","isStopping","isFinished","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","AnimationManager","RectangleTexture","_setOptions","_lastGcFrame","_usedVramAlpha","_usedVramNonAlpha","platformType","_mode","ratio","style","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","isWebgl","isC2d","opt","setApplication","app","resume","_updatingFrame","_calculateDt","fixedDt","drawFrame","usedVramAlpha","usedVramNonAlpha","usedVram","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","addServiceProvider","serviceprovider","getChildrenByPosition","Application","_temp_options","booting","__updateFocusCounter","__keypressTimers","__hoveredChild","updateFocusSettings","__keymap","_receiveKeydown","_receiveKeyup","_receiveClick","_receiveHover","_recieveScrollWheel","__options","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","focusedComponent","focusSettings","defaultSetFocusSettings","defaultHandleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","newParts","focusPath","focusTopDownEvent","events","focusBottomUpEvent","keyCode","hasTimer","longpress","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","clientX","clientY","fireTopDownScrollWheelHandler","fireBottomUpScrollWheelHandler","affected","_findChildren","_captureScroll","_getTargetChild","_handleScroll","fireBottomUpClickHandler","localCoords","_handleClick","fireBottomUpHoverHandler","hoveredBranch","newHoveredBranch","elem","_handleUnhover","diffBranch","_handleHover","lastElement","hoverableChildren","_withinClickableRange","bucket","affectedChildren","cursorX","cursorY","candidates","cw","ch","_testCollision","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","content","factory","Tools","getCanvasTexture","canvasFactory","getRoundRect","radius","strokeWidth","strokeColor","fillColor","createRoundRect","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","getShadowRect","blur","createShadowRect","getSvgTexture","url","createSvg","img","ObjMerger","isMf","__mf","mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","ObjectListProxy","ObjectListWrapper","_wrapper","NoiseTexture","noise","random","REPEAT","HtmlTexture","_htmlElement","_scale","htmlElement","html","innerHTML","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","opacity","pointerEvents","display","top","overflow","body","ListItems","checkStarted","_reloadVisibleElements","_started","setIndex","_index","ri","realIndex","LinearBlurShader","_direction","_kernelRadius","kernelRadius","uniform1i","BoxBlurShader","BlurShader","_amount","C2dFastBlurComponent","Textwrap","C2dBlurShader","Content","_textwrap","_paddingX","_paddingY","getSpline","_multiSpline","_updateBlurSize","paddingX","paddingY","_amountToKernelRadius","WebGLFastBlurComponent","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_layers","_output","_buildLayers","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomBaseShader","SmoothScaleComponent","ContentWrap","Scale","_smoothScale","_iterations","smoothScale","its","_setIterations","scalers","useScalers","contentWrap","WebGLGrayscaleShader","WebGLDefaultShader","C2dGrayscaleShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","graining","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","aspectRatio","inputValue","maxDerivative","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","getWebGLImpl","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","blend","topLeft","num","topRight","bottomRight","bottomLeft","_sc","renderPrecision","FadeOutShader","_fade","right","bottom","left","fade","VignetteShader","_magnitude","_intensity","_pivot","intensity","magnitude","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","period","angle","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","radiusX","radiusY","_radiusY","innerColor","outerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","strength","ambient","fudge","rx","ry","pivotZ","PerspectiveShader","MagnifierShader","_magnification","magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","showDot","bool","clockwise","spinSync","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","StaticTexture","components","FastBlurComponent","Wrap","BloomComponent","BloomBase","BorderComponent","Borders","Top","Right","Bottom","Left","_borderTop","_borderRight","_borderBottom","_borderLeft","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorder","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","borders","ListComponent","_visibleItems","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","_scrollTransition","immediate","closest","nElements","diff","viewportSize","scrollDelta","getAxisPosition","ps","wasVisible","invisibleItem","getWrapper","setPrevious","setNext","itemSize","viewportScrollOffset","itemScrollOffset","scrollTransitionSettings","scrollTransition","progressAnimation","roll","rollMin","rollMax","invertDirection","tools","lng"],"mappings":"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"}